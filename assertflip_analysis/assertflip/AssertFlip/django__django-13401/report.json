{
    "django__django-13401": {
        "patch_is_None": false,
        "patch_exists": true,
        "patch_successfully_applied": true,
        "resolved": true,
        "coverage_pred": 0.6875,
        "coverage_gold": 0.9375,
        "coverage_base": 0.3125,
        "coverage_delta_pred": 0.6875,
        "coverage_delta_gold": 0.9375,
        "added_f2p": 1,
        "tests_base": {
            "FAIL_TO_PASS": [],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [
                "test_coverup_django__django-13401 (unittest.loader._FailedTest)"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_pred": {
            "FAIL_TO_PASS": [
                "test_field_equality_bug (test_coverup_django__django-13401.FieldEqualityTest)"
            ],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_gold": {
            "FAIL_TO_PASS": [
                "test_abstract_inherited_fields (model_fields.tests.BasicFieldTests)"
            ],
            "PASS_TO_PASS": [
                "test_blank_in_grouped_choices (model_fields.tests.GetChoicesTests)",
                "test_iterator_choices (model_fields.tests.GetFieldDisplayTests)",
                "test_invalid_choice (model_fields.tests.ChoicesTests)",
                "test_choices_and_field_display (model_fields.tests.GetFieldDisplayTests)",
                "test_get_FIELD_display_translated (model_fields.tests.GetFieldDisplayTests)",
                "test_get_choices_default_ordering (model_fields.tests.GetChoicesOrderingTests)",
                "test_empty_iterator_choices (model_fields.tests.GetFieldDisplayTests)",
                "test_get_choices (model_fields.tests.GetChoicesLimitChoicesToTests)",
                "test_field_verbose_name (model_fields.tests.BasicFieldTests)",
                "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesLimitChoicesToTests)",
                "test_deconstruct_nested_field (model_fields.tests.BasicFieldTests)",
                "test_formfield (model_fields.tests.ChoicesTests)",
                "test_overriding_inherited_FIELD_display (model_fields.tests.GetFieldDisplayTests)",
                "test_choices (model_fields.tests.ChoicesTests)",
                "test_get_choices (model_fields.tests.GetChoicesOrderingTests)",
                "test_field_name (model_fields.tests.BasicFieldTests)",
                "test_get_choices_reverse_related_field_default_ordering (model_fields.tests.GetChoicesOrderingTests)",
                "test_empty_choices (model_fields.tests.GetChoicesTests)",
                "test_get_choices_reverse_related_field (model_fields.tests.GetChoicesOrderingTests)",
                "test_overriding_FIELD_display (model_fields.tests.GetFieldDisplayTests)",
                "test_field_instance_is_picklable (model_fields.tests.BasicFieldTests)",
                "test_lazy_strings_not_evaluated (model_fields.tests.GetChoicesTests)",
                "test_field_ordering (model_fields.tests.BasicFieldTests)",
                "test_field_repr (model_fields.tests.BasicFieldTests)",
                "test_formfield_disabled (model_fields.tests.BasicFieldTests)",
                "test_show_hidden_initial (model_fields.tests.BasicFieldTests)",
                "test_flatchoices (model_fields.tests.ChoicesTests)",
                "test_blank_in_choices (model_fields.tests.GetChoicesTests)",
                "test_field_str (model_fields.tests.BasicFieldTests)"
            ],
            "FAIL_TO_FAIL": [],
            "PASS_TO_FAIL": [
                "test_field_repr_nested (model_fields.tests.BasicFieldTests)",
                "test_check (model_fields.tests.ChoicesTests)"
            ],
            "UNMATCHED": []
        }
    }
}