{
    "django__django-14765": {
        "patch_is_None": false,
        "patch_exists": true,
        "patch_successfully_applied": true,
        "resolved": true,
        "coverage_pred": 0.5714285714285714,
        "coverage_gold": 1.0,
        "coverage_base": 0.0,
        "coverage_delta_pred": 0.5714285714285714,
        "coverage_delta_gold": 1.0,
        "added_f2p": 1,
        "tests_base": {
            "FAIL_TO_PASS": [],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [
                "test_coverup_django__django-14765 (unittest.loader._FailedTest)"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_pred": {
            "FAIL_TO_PASS": [
                "test_real_apps_conversion (test_coverup_django__django-14765.ProjectStateInitTests)"
            ],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_gold": {
            "FAIL_TO_PASS": [
                "test_reference_mixed_case_app_label (migrations.test_state.StateTests)",
                "test_real_apps_non_set (migrations.test_state.StateTests)"
            ],
            "PASS_TO_PASS": [
                "test_render_project_dependencies (migrations.test_state.StateTests)",
                "test_fields_immutability (migrations.test_state.ModelStateTests)",
                "test_base_to_subclass_fk (migrations.test_state.RelatedModelsTests)",
                "test_reload_model_relationship_consistency (migrations.test_state.StateTests)",
                "test_create_swappable (migrations.test_state.ModelStateTests)",
                "test_render_model_inheritance (migrations.test_state.StateTests)",
                "test_direct_m2m_self (migrations.test_state.RelatedModelsTests)",
                "test_multiple_nested_bases (migrations.test_state.RelatedModelsTests)",
                "test_sanity_check_to (migrations.test_state.ModelStateTests)",
                "test_sanity_check_through (migrations.test_state.ModelStateTests)",
                "test_explicit_index_name (migrations.test_state.ModelStateTests)",
                "test_manager_refer_correct_model_version (migrations.test_state.StateTests)",
                "test_nested_fk (migrations.test_state.RelatedModelsTests)",
                "test_ignore_order_wrt (migrations.test_state.StateTests)",
                "test_render_model_with_multiple_inheritance (migrations.test_state.StateTests)",
                "test_real_apps (migrations.test_state.StateTests)",
                "test_fields_ordering_equality (migrations.test_state.ModelStateTests)",
                "test_circle (migrations.test_state.RelatedModelsTests)",
                "test_sanity_index_name (migrations.test_state.ModelStateTests)",
                "test_custom_manager_swappable (migrations.test_state.ModelStateTests)",
                "test_fk_through_proxy (migrations.test_state.RelatedModelsTests)",
                "test_equality (migrations.test_state.StateTests)",
                "test_reload_related_model_on_non_relational_fields (migrations.test_state.StateTests)",
                "test_multiple_mixed_bases (migrations.test_state.RelatedModelsTests)",
                "test_nested_abstract_base (migrations.test_state.RelatedModelsTests)",
                "test_nested_proxy_base (migrations.test_state.RelatedModelsTests)",
                "test_no_duplicate_managers (migrations.test_state.StateTests)",
                "test_direct_m2m (migrations.test_state.RelatedModelsTests)",
                "test_unrelated (migrations.test_state.RelatedModelsTests)",
                "test_two_sided (migrations.test_state.RelatedModelsTests)",
                "test_remove_relations (migrations.test_state.StateTests)",
                "test_custom_default_manager_named_objects_with_false_migration_flag (migrations.test_state.StateTests)",
                "test_choices_iterator (migrations.test_state.StateTests)",
                "test_add_relations (migrations.test_state.StateTests)",
                "test_proxy_base (migrations.test_state.RelatedModelsTests)",
                "test_direct_fk (migrations.test_state.RelatedModelsTests)",
                "test_abstract_model_children_inherit_indexes (migrations.test_state.ModelStateTests)",
                "test_custom_default_manager_added_to_the_model_state (migrations.test_state.StateTests)",
                "test_render_unique_app_labels (migrations.test_state.StateTests)",
                "test_apps_bulk_update (migrations.test_state.StateTests)",
                "test_create (migrations.test_state.StateTests)",
                "test_repr (migrations.test_state.ModelStateTests)",
                "test_custom_default_manager (migrations.test_state.StateTests)",
                "test_bound_field_sanity_check (migrations.test_state.ModelStateTests)",
                "test_base_to_base_fk (migrations.test_state.RelatedModelsTests)",
                "test_abstract_base (migrations.test_state.RelatedModelsTests)",
                "test_dangling_references_throw_error (migrations.test_state.StateTests)",
                "test_from_model_constraints (migrations.test_state.ModelStateTests)",
                "test_direct_hidden_fk (migrations.test_state.RelatedModelsTests)",
                "test_nested_base (migrations.test_state.RelatedModelsTests)",
                "test_intermediate_m2m_extern_fk (migrations.test_state.RelatedModelsTests)",
                "test_intermediate_m2m_self (migrations.test_state.RelatedModelsTests)",
                "test_order_with_respect_to_private_field (migrations.test_state.ModelStateTests)",
                "test_render (migrations.test_state.StateTests)",
                "test_self_relation (migrations.test_state.StateTests)",
                "test_intermediate_m2m (migrations.test_state.RelatedModelsTests)",
                "test_custom_model_base (migrations.test_state.ModelStateTests)",
                "test_custom_base_manager (migrations.test_state.StateTests)",
                "test_generic_fk (migrations.test_state.RelatedModelsTests)",
                "test_multiple_bases (migrations.test_state.RelatedModelsTests)",
                "test_intermediate_m2m_base (migrations.test_state.RelatedModelsTests)",
                "test_base (migrations.test_state.RelatedModelsTests)"
            ],
            "FAIL_TO_FAIL": [],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        }
    }
}