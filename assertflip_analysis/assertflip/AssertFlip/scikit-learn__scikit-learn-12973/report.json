{
    "scikit-learn__scikit-learn-12973": {
        "patch_is_None": false,
        "patch_exists": true,
        "patch_successfully_applied": true,
        "resolved": false,
        "coverage_pred": 1.0,
        "coverage_gold": 1.0,
        "coverage_base": 0.0,
        "coverage_delta_pred": 1.0,
        "coverage_delta_gold": 1.0,
        "added_f2p": 0,
        "tests_base": {
            "FAIL_TO_PASS": [],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [
                "file"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_pred": {
            "FAIL_TO_PASS": [],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [
                "sklearn/tests/test_coverup_scikit-learn__scikit-learn-12973.py::test_lassolarsic_copy_X_behavior"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_gold": {
            "FAIL_TO_PASS": [
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_fit_copyX_behaviour[False]"
            ],
            "PASS_TO_PASS": [
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_fit_copyX_behaviour[True]",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_n_nonzero_coefs",
                "sklearn/linear_model/tests/test_least_angle.py::test_no_path",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_lstsq",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_path_length",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_cv_max_iter",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_precompute[LassoLarsIC]",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_vs_lasso_cd",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_vs_lasso_cd_ill_conditioned",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_ic",
                "sklearn/linear_model/tests/test_least_angle.py::test_estimatorclasses_positive_constraint",
                "sklearn/linear_model/tests/test_least_angle.py::test_collinearity",
                "sklearn/linear_model/tests/test_least_angle.py::test_singular_matrix",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_copyX_behaviour[True]",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_vs_lasso_cd_ill_conditioned2",
                "sklearn/linear_model/tests/test_least_angle.py::test_simple_precomputed",
                "sklearn/linear_model/tests/test_least_angle.py::test_no_path_precomputed",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_gives_lstsq_solution",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_precompute[Lars]",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_path_readonly_data",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_copyX_behaviour[False]",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_add_features",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_vs_R_implementation",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_vs_lasso_cd_positive",
                "sklearn/linear_model/tests/test_least_angle.py::test_simple",
                "sklearn/linear_model/tests/test_least_angle.py::test_all_precomputed",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_cv",
                "sklearn/linear_model/tests/test_least_angle.py::test_multitarget",
                "sklearn/linear_model/tests/test_least_angle.py::test_no_path_all_precomputed",
                "sklearn/linear_model/tests/test_least_angle.py::test_lasso_lars_vs_lasso_cd_early_stopping",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_path_positive_constraint",
                "sklearn/linear_model/tests/test_least_angle.py::test_lars_precompute[LarsCV]"
            ],
            "FAIL_TO_FAIL": [
                "sklearn/linear_model/tests/test_least_angle.py::test_rank_deficient_design"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        }
    }
}