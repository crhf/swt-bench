{"instance_id": "django__django-15098", "repo": "django/django", "version": "4.1", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-15098.py\nnew file mode 100644\nindex e69de29..6dfba50 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15098.py\n@@ -0,0 +1,45 @@\n+from django.test import TestCase, Client\n+from django.conf import settings\n+from django.urls import path\n+from django.conf.urls.i18n import i18n_patterns\n+from django.http import HttpResponse\n+from django.test.utils import override_settings\n+\n+def bangiah(request):\n+    return HttpResponse('U!')\n+\n+urlpatterns = [\n+    path('', lambda request: HttpResponse('Root')),\n+]\n+\n+urlpatterns += i18n_patterns(\n+    path('', bangiah),\n+)\n+\n+@override_settings(\n+    LANGUAGES=[\n+        ('en-us', \"English\"),\n+        ('en-latn-us', \"Latin English\"),\n+        ('en-Latn-US', \"BCP 47 case format\"),\n+    ],\n+    LANGUAGE_CODE='en-us',\n+    USE_I18N=True,\n+    MIDDLEWARE=[\n+        'django.middleware.locale.LocaleMiddleware',\n+    ]\n+)\n+class InternationalisationTestCase(TestCase):\n+    def setUp(self):\n+        self.client = Client()\n+\n+    def test_en_us_locale(self):\n+        response = self.client.get('/en-us/')\n+        self.assertEqual(response.status_code, 200)\n+\n+    def test_en_latn_us_locale(self):\n+        response = self.client.get('/en-latn-us/')\n+        self.assertEqual(response.status_code, 200)\n+\n+    def test_en_Latn_US_locale(self):\n+        response = self.client.get('/en-Latn-US/')\n+        self.assertEqual(response.status_code, 200)\n"], "arch": "x86_64", "base_commit": "2c7846d992ca512d36a73f518205015c88ed088c", "test_directives": ["test_coverup_django__django-15098"], "coverage_files": ["django/utils/translation/trans_real.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/utils/translation/trans_real\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15098", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.4.1\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}