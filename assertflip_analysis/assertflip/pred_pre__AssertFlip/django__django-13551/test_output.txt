+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 7f9e4524d6b23424cf44fbe1bf1f4e70f6bb066e
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 7f9e4524d6b23424cf44fbe1bf1f4e70f6bb066e
Author: Jacob Walls <38668450+jacobtylerwalls@users.noreply.github.com>
Date:   Wed Oct 21 02:06:24 2020 -0400

    Fixed typo in docs/releases/3.2.txt.

diff --git a/docs/releases/3.2.txt b/docs/releases/3.2.txt
index d61f66733d..10842af4fc 100644
--- a/docs/releases/3.2.txt
+++ b/docs/releases/3.2.txt
@@ -290,7 +290,7 @@ Models
 * :class:`Value() <django.db.models.Value>` expression now
   automatically resolves its ``output_field`` to the appropriate
   :class:`Field <django.db.models.Field>` subclass based on the type of
-  it's provided ``value`` for :py:class:`bool`, :py:class:`bytes`,
+  its provided ``value`` for :py:class:`bool`, :py:class:`bytes`,
   :py:class:`float`, :py:class:`int`, :py:class:`str`,
   :py:class:`datetime.date`, :py:class:`datetime.datetime`,
   :py:class:`datetime.time`, :py:class:`datetime.timedelta`,
+ git diff 7f9e4524d6b23424cf44fbe1bf1f4e70f6bb066e
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2.10 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (2025.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2.10->Django==3.2) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.2
    Uninstalling Django-3.2:
      Successfully uninstalled Django-3.2
  Running setup.py develop for Django
Successfully installed Django-3.2
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git apply -v -
Checking patch tests/test_coverup_django__django-13551.py...
Applied patch tests/test_coverup_django__django-13551.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/auth/tokens\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-13551
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/contrib/auth/tokens\\.py)']
Testing against Django installed in '/testbed/django'
0.64 /testbed/django/contrib/auth/tokens.py(1): from datetime import datetime
0.64 /testbed/django/contrib/auth/tokens.py(3): from django.conf import settings
0.64 /testbed/django/contrib/auth/tokens.py(4): from django.utils.crypto import constant_time_compare, salted_hmac
0.64 /testbed/django/contrib/auth/tokens.py(5): from django.utils.http import base36_to_int, int_to_base36
0.64 /testbed/django/contrib/auth/tokens.py(8): class PasswordResetTokenGenerator:
0.64 /testbed/django/contrib/auth/tokens.py(8): class PasswordResetTokenGenerator:
0.64 /testbed/django/contrib/auth/tokens.py(12):     """
0.64 /testbed/django/contrib/auth/tokens.py(13):     key_salt = "django.contrib.auth.tokens.PasswordResetTokenGenerator"
0.64 /testbed/django/contrib/auth/tokens.py(14):     algorithm = None
0.64 /testbed/django/contrib/auth/tokens.py(15):     secret = None
0.64 /testbed/django/contrib/auth/tokens.py(17):     def __init__(self):
0.64 /testbed/django/contrib/auth/tokens.py(23):     def make_token(self, user):
0.64 /testbed/django/contrib/auth/tokens.py(30):     def check_token(self, user, token):
0.64 /testbed/django/contrib/auth/tokens.py(64):     def _make_token_with_timestamp(self, user, timestamp, legacy=False):
0.64 /testbed/django/contrib/auth/tokens.py(79):     def _make_hash_value(self, user, timestamp):
0.64 /testbed/django/contrib/auth/tokens.py(99):     def _num_seconds(self, dt):
0.64 /testbed/django/contrib/auth/tokens.py(102):     def _now(self):
0.64 /testbed/django/contrib/auth/tokens.py(107): default_token_generator = PasswordResetTokenGenerator()
0.64 /testbed/django/contrib/auth/tokens.py(18):         self.secret = self.secret or settings.SECRET_KEY
0.64 /testbed/django/contrib/auth/tokens.py(21):         self.algorithm = self.algorithm or settings.DEFAULT_HASHING_ALGORITHM
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
System check identified no issues (0 silenced).
test_password_reset_token_invalid_after_email_change (test_coverup_django__django-13551.PasswordResetTokenTest) ... FAIL

======================================================================
FAIL: test_password_reset_token_invalid_after_email_change (test_coverup_django__django-13551.PasswordResetTokenTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./tests/test_coverup_django__django-13551.py", line 23, in test_password_reset_token_invalid_after_email_change
    self.assertFalse(is_token_valid)
AssertionError: True is not false

----------------------------------------------------------------------
Ran 1 test in 0.006s

FAILED (failures=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
0.85 /testbed/django/contrib/auth/tokens.py(28):         return self._make_token_with_timestamp(user, self._num_seconds(self._now()))
0.85 /testbed/django/contrib/auth/tokens.py(104):         return datetime.now()
0.85 /testbed/django/contrib/auth/tokens.py(100):         return int((dt - datetime(2001, 1, 1)).total_seconds())
0.85 /testbed/django/contrib/auth/tokens.py(67):         ts_b36 = int_to_base36(timestamp)
0.85 /testbed/django/contrib/auth/tokens.py(68):         hash_string = salted_hmac(
0.85 /testbed/django/contrib/auth/tokens.py(69):             self.key_salt,
0.85 /testbed/django/contrib/auth/tokens.py(70):             self._make_hash_value(user, timestamp),
0.85 /testbed/django/contrib/auth/tokens.py(96):         login_timestamp = '' if user.last_login is None else user.last_login.replace(microsecond=0, tzinfo=None)
0.85 /testbed/django/contrib/auth/tokens.py(97):         return str(user.pk) + user.password + str(login_timestamp) + str(timestamp)
0.85 /testbed/django/contrib/auth/tokens.py(71):             secret=self.secret,
0.85 /testbed/django/contrib/auth/tokens.py(75):             algorithm='sha1' if legacy else self.algorithm,
0.85 /testbed/django/contrib/auth/tokens.py(76):         ).hexdigest()[::2]  # Limit to shorten the URL.
0.85 /testbed/django/contrib/auth/tokens.py(77):         return "%s-%s" % (ts_b36, hash_string)
0.85 /testbed/django/contrib/auth/tokens.py(34):         if not (user and token):
0.85 /testbed/django/contrib/auth/tokens.py(37):         try:
0.85 /testbed/django/contrib/auth/tokens.py(38):             ts_b36, _ = token.split("-")
0.85 /testbed/django/contrib/auth/tokens.py(42):         try:
0.85 /testbed/django/contrib/auth/tokens.py(43):             ts = base36_to_int(ts_b36)
0.86 /testbed/django/contrib/auth/tokens.py(48):         if not constant_time_compare(self._make_token_with_timestamp(user, ts), token):
0.86 /testbed/django/contrib/auth/tokens.py(67):         ts_b36 = int_to_base36(timestamp)
0.86 /testbed/django/contrib/auth/tokens.py(68):         hash_string = salted_hmac(
0.86 /testbed/django/contrib/auth/tokens.py(69):             self.key_salt,
0.86 /testbed/django/contrib/auth/tokens.py(70):             self._make_hash_value(user, timestamp),
0.86 /testbed/django/contrib/auth/tokens.py(96):         login_timestamp = '' if user.last_login is None else user.last_login.replace(microsecond=0, tzinfo=None)
0.86 /testbed/django/contrib/auth/tokens.py(97):         return str(user.pk) + user.password + str(login_timestamp) + str(timestamp)
0.86 /testbed/django/contrib/auth/tokens.py(71):             secret=self.secret,
0.86 /testbed/django/contrib/auth/tokens.py(75):             algorithm='sha1' if legacy else self.algorithm,
0.86 /testbed/django/contrib/auth/tokens.py(76):         ).hexdigest()[::2]  # Limit to shorten the URL.
0.86 /testbed/django/contrib/auth/tokens.py(77):         return "%s-%s" % (ts_b36, hash_string)
0.86 /testbed/django/contrib/auth/tokens.py(59):         if (self._num_seconds(self._now()) - ts) > settings.PASSWORD_RESET_TIMEOUT:
0.86 /testbed/django/contrib/auth/tokens.py(104):         return datetime.now()
0.86 /testbed/django/contrib/auth/tokens.py(100):         return int((dt - datetime(2001, 1, 1)).total_seconds())
0.86 /testbed/django/contrib/auth/tokens.py(62):         return True
+ cat coverage.cover
{"/testbed/django/contrib/auth/tokens.py": {"1": 1, "3": 1, "4": 1, "5": 1, "8": 2, "107": 1, "13": 1, "14": 1, "15": 1, "17": 1, "23": 1, "30": 1, "64": 1, "79": 1, "99": 1, "102": 1, "18": 1, "21": 1, "28": 1, "34": 1, "35": 0, "37": 1, "38": 1, "39": 0, "40": 0, "42": 1, "43": 1, "44": 0, "45": 0, "48": 1, "52": 0, "53": 0, "54": 0, "56": 0, "59": 1, "60": 0, "62": 1, "67": 2, "68": 2, "69": 2, "70": 2, "71": 2, "75": 2, "76": 2, "77": 2, "96": 2, "97": 2, "100": 2, "104": 2}}
+ git checkout 7f9e4524d6b23424cf44fbe1bf1f4e70f6bb066e
Note: switching to '7f9e4524d6b23424cf44fbe1bf1f4e70f6bb066e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 7f9e4524d6 Fixed typo in docs/releases/3.2.txt.
+ git apply /root/pre_state.patch
error: unrecognized input
