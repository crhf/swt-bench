{"instance_id": "scikit-learn__scikit-learn-13328", "repo": "scikit-learn/scikit-learn", "version": "0.21", "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6", "patch_list": ["diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-13328.py\nnew file mode 100644\nindex e69de29..c158d8b 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-13328.py\n@@ -0,0 +1,17 @@\n+import numpy as np\n+import pytest\n+from sklearn.datasets import make_regression\n+from sklearn.linear_model import HuberRegressor\n+\n+def test_huber_regressor_fit_with_boolean_array():\n+    # Generate random data\n+    X, y, coef = make_regression(n_samples=200, n_features=2, noise=4.0, coef=True, random_state=0)\n+    # Convert X to a boolean array\n+    X_bool = X > 0\n+\n+    # Initialize HuberRegressor\n+    huber = HuberRegressor()\n+\n+    # Attempt to fit HuberRegressor with boolean input\n+    huber.fit(X_bool, y)\n+    # If no error is raised, the test should pass, indicating the bug is fixed\n"], "arch": "x86_64", "base_commit": "37b0e66c871e8fb032a9c7086b2a1d5419838154", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-13328.py"], "coverage_files": ["sklearn/linear_model/huber.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/linear_model/huber\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-13328.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}