+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD b19bce971e82f2497d67fdacdeca8db08ae0ba56
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   setup.py
	modified:   tox.ini

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit b19bce971e82f2497d67fdacdeca8db08ae0ba56
Merge: 556b9743f ce52a90d9
Author: Takeshi KOMIYA <i.tkomiya@gmail.com>
Date:   Mon Dec 28 13:51:50 2020 +0900

    Merge pull request #8593 from tk0miya/8592_meta_public_doesnt_affect_to_variables
    
    Fix #8592: autodoc: `:meta public:` does not effect to variables

+ git diff b19bce971e82f2497d67fdacdeca8db08ae0ba56
diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e '.[test]'
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: sphinxcontrib-applehelp<=1.0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.0.4)
Requirement already satisfied: sphinxcontrib-devhelp<=1.0.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.0.2)
Requirement already satisfied: sphinxcontrib-jsmath in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.0.1)
Requirement already satisfied: sphinxcontrib-htmlhelp<=2.0.4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (2.0.1)
Requirement already satisfied: sphinxcontrib-serializinghtml<=1.1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.1.5)
Requirement already satisfied: sphinxcontrib-qthelp<=1.0.6 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.0.3)
Requirement already satisfied: Jinja2<3.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (2.11.3)
Requirement already satisfied: Pygments>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (2.19.2)
Requirement already satisfied: docutils>=0.12 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (0.22)
Requirement already satisfied: snowballstemmer>=1.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (3.0.1)
Requirement already satisfied: babel>=1.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (2.17.0)
Requirement already satisfied: alabaster<0.7.12,>=0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (0.7.11)
Requirement already satisfied: imagesize in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.4.1)
Requirement already satisfied: requests>=2.5.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (2.32.5)
Requirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (78.1.1)
Requirement already satisfied: packaging in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (25.0)
Requirement already satisfied: markupsafe<=2.0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (2.0.1)
Requirement already satisfied: pytest in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (8.4.1)
Requirement already satisfied: pytest-cov in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (6.2.1)
Requirement already satisfied: html5lib in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (1.1)
Requirement already satisfied: cython in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.5.0.dev20250825) (3.1.3)
Requirement already satisfied: charset_normalizer<4,>=2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.5.0.dev20250825) (3.4.3)
Requirement already satisfied: idna<4,>=2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.5.0.dev20250825) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.5.0.dev20250825) (2.5.0)
Requirement already satisfied: certifi>=2017.4.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.5.0.dev20250825) (2025.8.3)
Requirement already satisfied: six>=1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==3.5.0.dev20250825) (1.17.0)
Requirement already satisfied: webencodings in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==3.5.0.dev20250825) (0.5.1)
Requirement already satisfied: exceptiongroup>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.5.0.dev20250825) (1.3.0)
Requirement already satisfied: iniconfig>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.5.0.dev20250825) (2.1.0)
Requirement already satisfied: pluggy<2,>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.5.0.dev20250825) (1.6.0)
Requirement already satisfied: tomli>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.5.0.dev20250825) (2.2.1)
Requirement already satisfied: typing-extensions>=4.6.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from exceptiongroup>=1->pytest->Sphinx==3.5.0.dev20250825) (4.14.1)
Requirement already satisfied: coverage>=7.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from coverage[toml]>=7.5->pytest-cov->Sphinx==3.5.0.dev20250825) (7.10.5)
Installing collected packages: Sphinx
  Attempting uninstall: Sphinx
    Found existing installation: Sphinx 3.5.0.dev20250825
    Uninstalling Sphinx-3.5.0.dev20250825:
      Successfully uninstalled Sphinx-3.5.0.dev20250825
  DEPRECATION: Legacy editable install of Sphinx[test]==3.5.0.dev20250825 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for Sphinx
Successfully installed Sphinx
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch tests/test_coverup_sphinx-doc__sphinx-8595.py...
<stdin>:82: new blank line at EOF.
+
Applied patch tests/test_coverup_sphinx-doc__sphinx-8595.py cleanly.
warning: 1 line adds whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/ext/autodoc/__init__\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-8595.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sphinx/ext/autodoc/__init__\\.py)']
.pkg: find interpreter for spec PythonSpec(major=3, minor=9, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=5, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sphinx/ext/autodoc/__init__\\.py)']
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sphinx/ext/autodoc/__init__\\.py)']
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sphinx/ext/autodoc/__init__\\.py)']
.pkg: find interpreter for spec PythonSpec(major=3, minor=6, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, system=/opt/miniconda3/envs/testbed/bin/python3, exe=/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=7, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, system=/opt/miniconda3/envs/testbed/bin/python3, exe=/usr/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=8, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, system=/opt/miniconda3/envs/testbed/bin/python3, exe=/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, free_threaded=False)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/opt/miniconda3/envs/testbed/bin/python3)
.pkg: proposed PythonInfo(spec=CPython3.9.23.final.0-64, exe=/opt/miniconda3/envs/testbed/bin/python3, platform=linux, version='3.9.23 (main, Jun  5 2025, 13:40:20) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
py39: create virtual environment via CPython3Posix(dest=/testbed/.tox/py39, clear=False, no_vcs_ignore=False, global=False)
py39: add seed packages via FromAppData(download=False, pip=bundle, setuptools=bundle, via=copy, app_data_dir=/root/.local/share/virtualenv)
py39: add activators for Bash, CShell, Fish, Nushell, PowerShell, Python
.pkg: create virtual environment via CPython3Posix(dest=/testbed/.tox/.pkg, clear=False, no_vcs_ignore=False, global=False)
.pkg: add seed packages via FromAppData(download=False, pip=bundle, setuptools=bundle, via=copy, app_data_dir=/root/.local/share/virtualenv)
.pkg: add activators for Bash, CShell, Fish, Nushell, PowerShell, Python
.pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0'
.pkg: exit 0 (0.62 seconds) /testbed> python -I -m pip install 'setuptools>=40.8.0' pid=123
.pkg: _optional_hooks> python /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.19 seconds) /testbed> python /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=128
.pkg: get_requires_for_build_editable> python /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.51 seconds) /testbed> python /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=131
.pkg: build_editable> python /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.73 seconds) /testbed> python /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=135
py39: install_package_deps> python -I -m pip install 'Jinja2<3.0' 'Pygments>=2.0' 'alabaster<0.7.12,>=0.7' 'babel>=1.3' 'colorama>=0.3.5; sys_platform == "win32"' cython 'docutils>=0.12' html5lib imagesize 'markupsafe<=2.0.1' packaging pytest pytest-cov 'requests>=2.5.0' setuptools 'snowballstemmer>=1.1' 'sphinxcontrib-applehelp<=1.0.7' 'sphinxcontrib-devhelp<=1.0.5' 'sphinxcontrib-htmlhelp<=2.0.4' sphinxcontrib-jsmath 'sphinxcontrib-qthelp<=1.0.6' 'sphinxcontrib-serializinghtml<=1.1.9' 'typed_ast; python_version < "3.8"'
py39: exit 0 (0.69 seconds) /testbed> python -I -m pip install 'Jinja2<3.0' 'Pygments>=2.0' 'alabaster<0.7.12,>=0.7' 'babel>=1.3' 'colorama>=0.3.5; sys_platform == "win32"' cython 'docutils>=0.12' html5lib imagesize 'markupsafe<=2.0.1' packaging pytest pytest-cov 'requests>=2.5.0' setuptools 'snowballstemmer>=1.1' 'sphinxcontrib-applehelp<=1.0.7' 'sphinxcontrib-devhelp<=1.0.5' 'sphinxcontrib-htmlhelp<=2.0.4' sphinxcontrib-jsmath 'sphinxcontrib-qthelp<=1.0.6' 'sphinxcontrib-serializinghtml<=1.1.9' 'typed_ast; python_version < "3.8"' pid=139
py39: install_package> python -I -m pip install --force-reinstall --no-deps /testbed/.tox/.tmp/package/1/sphinx-3.5.0.dev20250825-0.editable-py3-none-any.whl
py39: exit 0 (0.67 seconds) /testbed> python -I -m pip install --force-reinstall --no-deps /testbed/.tox/.tmp/package/1/sphinx-3.5.0.dev20250825-0.editable-py3-none-any.whl pid=144
py39: commands[0]> python -X dev -m pytest -rA --durations 25 tests/test_coverup_sphinx-doc__sphinx-8595.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sphinx/ext/autodoc/__init__\\.py)']
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.9.23, pytest-8.4.1, pluggy-1.6.0
cachedir: .tox/py39/.pytest_cache
libraries: Sphinx-3.5.0+/b19bce971, docutils-0.22
base tempdir: /tmp/pytest-of-root/pytest-0
rootdir: /testbed
configfile: setup.cfg
plugins: cov-6.2.1
collected 1 item

tests/test_coverup_sphinx-doc__sphinx-8595.py [31mF[0m[31m                          [100%][0m

=================================== FAILURES ===================================
[31m[1m_____________________ test_empty_all_attribute_exposes_bug _____________________[0m

    [0m[33m"""[39;49;00m
    [33m    sphinx.writers.latex[39;49;00m
    [33m    ~~~~~~~~~~~~~~~~~~~~[39;49;00m
    [33m[39;49;00m
    [33m    Custom docutils writer for LaTeX.[39;49;00m
    [33m[39;49;00m
    [33m    Much of this code is adapted from Dave Kuhlman's "docpy" writer from his[39;49;00m
    [33m    docutils sandbox.[39;49;00m
    [33m[39;49;00m
    [33m    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.[39;49;00m
    [33m    :license: BSD, see LICENSE for details.[39;49;00m
    [33m"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
    [94mimport[39;49;00m[90m [39;49;00m[04m[96mre[39;49;00m[90m[39;49;00m
    [94mimport[39;49;00m[90m [39;49;00m[04m[96mwarnings[39;49;00m[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mcollections[39;49;00m[90m [39;49;00m[94mimport[39;49;00m defaultdict[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mos[39;49;00m[90m [39;49;00m[94mimport[39;49;00m path[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mtyping[39;49;00m[90m [39;49;00m[94mimport[39;49;00m Any, Dict, Iterable, Iterator, List, Set, Tuple, Union, cast[90m[39;49;00m
    [90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mdocutils[39;49;00m[90m [39;49;00m[94mimport[39;49;00m nodes, writers[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mdocutils[39;49;00m[04m[96m.[39;49;00m[04m[96mnodes[39;49;00m[90m [39;49;00m[94mimport[39;49;00m Element, Node, Text[90m[39;49;00m
    [90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[90m [39;49;00m[94mimport[39;49;00m addnodes, highlighting[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mdeprecation[39;49;00m[90m [39;49;00m[94mimport[39;49;00m (RemovedInSphinx40Warning, RemovedInSphinx50Warning,[90m[39;49;00m
                                    deprecated_alias)[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mdomains[39;49;00m[90m [39;49;00m[94mimport[39;49;00m IndexEntry[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mdomains[39;49;00m[04m[96m.[39;49;00m[04m[96mstd[39;49;00m[90m [39;49;00m[94mimport[39;49;00m StandardDomain[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96merrors[39;49;00m[90m [39;49;00m[94mimport[39;49;00m SphinxError[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mlocale[39;49;00m[90m [39;49;00m[94mimport[39;49;00m _, __, admonitionlabels[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[90m [39;49;00m[94mimport[39;49;00m logging, split_into, texescape[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mdocutils[39;49;00m[90m [39;49;00m[94mimport[39;49;00m SphinxTranslator[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mnodes[39;49;00m[90m [39;49;00m[94mimport[39;49;00m clean_astext, get_prev_node[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mtemplate[39;49;00m[90m [39;49;00m[94mimport[39;49;00m LaTeXRenderer[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mtexescape[39;49;00m[90m [39;49;00m[94mimport[39;49;00m tex_replace_map[90m[39;49;00m
    [90m[39;49;00m
    [94mtry[39;49;00m:[90m[39;49;00m
>       [94mfrom[39;49;00m[90m [39;49;00m[04m[96mdocutils[39;49;00m[04m[96m.[39;49;00m[04m[96mutils[39;49;00m[04m[96m.[39;49;00m[04m[96mroman[39;49;00m[90m [39;49;00m[94mimport[39;49;00m toRoman[90m[39;49;00m
[1m[31mE       ModuleNotFoundError: No module named 'docutils.utils.roman'[0m

[1m[31msphinx/writers/latex.py[0m:37: ModuleNotFoundError

[33mDuring handling of the above exception, another exception occurred:[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7f64e5567cd0>
app = <sphinx.application.Sphinx object at 0x7f64e5567190>
extname = 'sphinx.builders.latex'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
>               mod = import_module(extname)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:417: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/importlib/__init__.py[0m:127: in import_module
    [0m[94mreturn[39;49;00m _bootstrap._gcd_import(name[level:], package, level)[90m[39;49;00m
[1m[31msphinx/builders/latex/__init__.py[0m:39: in <module>
    [0m[94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mwriters[39;49;00m[04m[96m.[39;49;00m[04m[96mlatex[39;49;00m[90m [39;49;00m[94mimport[39;49;00m LaTeXTranslator, LaTeXWriter[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    [0m[33m"""[39;49;00m
    [33m    sphinx.writers.latex[39;49;00m
    [33m    ~~~~~~~~~~~~~~~~~~~~[39;49;00m
    [33m[39;49;00m
    [33m    Custom docutils writer for LaTeX.[39;49;00m
    [33m[39;49;00m
    [33m    Much of this code is adapted from Dave Kuhlman's "docpy" writer from his[39;49;00m
    [33m    docutils sandbox.[39;49;00m
    [33m[39;49;00m
    [33m    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.[39;49;00m
    [33m    :license: BSD, see LICENSE for details.[39;49;00m
    [33m"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
    [94mimport[39;49;00m[90m [39;49;00m[04m[96mre[39;49;00m[90m[39;49;00m
    [94mimport[39;49;00m[90m [39;49;00m[04m[96mwarnings[39;49;00m[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mcollections[39;49;00m[90m [39;49;00m[94mimport[39;49;00m defaultdict[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mos[39;49;00m[90m [39;49;00m[94mimport[39;49;00m path[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mtyping[39;49;00m[90m [39;49;00m[94mimport[39;49;00m Any, Dict, Iterable, Iterator, List, Set, Tuple, Union, cast[90m[39;49;00m
    [90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mdocutils[39;49;00m[90m [39;49;00m[94mimport[39;49;00m nodes, writers[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96mdocutils[39;49;00m[04m[96m.[39;49;00m[04m[96mnodes[39;49;00m[90m [39;49;00m[94mimport[39;49;00m Element, Node, Text[90m[39;49;00m
    [90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[90m [39;49;00m[94mimport[39;49;00m addnodes, highlighting[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mdeprecation[39;49;00m[90m [39;49;00m[94mimport[39;49;00m (RemovedInSphinx40Warning, RemovedInSphinx50Warning,[90m[39;49;00m
                                    deprecated_alias)[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mdomains[39;49;00m[90m [39;49;00m[94mimport[39;49;00m IndexEntry[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mdomains[39;49;00m[04m[96m.[39;49;00m[04m[96mstd[39;49;00m[90m [39;49;00m[94mimport[39;49;00m StandardDomain[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96merrors[39;49;00m[90m [39;49;00m[94mimport[39;49;00m SphinxError[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mlocale[39;49;00m[90m [39;49;00m[94mimport[39;49;00m _, __, admonitionlabels[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[90m [39;49;00m[94mimport[39;49;00m logging, split_into, texescape[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mdocutils[39;49;00m[90m [39;49;00m[94mimport[39;49;00m SphinxTranslator[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mnodes[39;49;00m[90m [39;49;00m[94mimport[39;49;00m clean_astext, get_prev_node[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mtemplate[39;49;00m[90m [39;49;00m[94mimport[39;49;00m LaTeXRenderer[90m[39;49;00m
    [94mfrom[39;49;00m[90m [39;49;00m[04m[96msphinx[39;49;00m[04m[96m.[39;49;00m[04m[96mutil[39;49;00m[04m[96m.[39;49;00m[04m[96mtexescape[39;49;00m[90m [39;49;00m[94mimport[39;49;00m tex_replace_map[90m[39;49;00m
    [90m[39;49;00m
    [94mtry[39;49;00m:[90m[39;49;00m
        [94mfrom[39;49;00m[90m [39;49;00m[04m[96mdocutils[39;49;00m[04m[96m.[39;49;00m[04m[96mutils[39;49;00m[04m[96m.[39;49;00m[04m[96mroman[39;49;00m[90m [39;49;00m[94mimport[39;49;00m toRoman[90m[39;49;00m
    [94mexcept[39;49;00m [96mImportError[39;49;00m:[90m[39;49;00m
        [90m# In Debain/Ubuntu, roman package is provided as roman, not as docutils.utils.roman[39;49;00m[90m[39;49;00m
>       [94mfrom[39;49;00m[90m [39;49;00m[04m[96mroman[39;49;00m[90m [39;49;00m[94mimport[39;49;00m toRoman  [90m# type: ignore[39;49;00m[90m[39;49;00m
[1m[31mE       ModuleNotFoundError: No module named 'roman'[0m

[1m[31msphinx/writers/latex.py[0m:40: ModuleNotFoundError

[33mThe above exception was the direct cause of the following exception:[0m

setup_sphinx_environment = PosixPath('/tmp/pytest-of-root/pytest-0/test_empty_all_attribute_expos0/docs')

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_empty_all_attribute_exposes_bug[39;49;00m(setup_sphinx_environment):[90m[39;49;00m
        docs_dir = setup_sphinx_environment[90m[39;49;00m
    [90m[39;49;00m
        [90m# Run the Sphinx build process[39;49;00m[90m[39;49;00m
>       app = Sphinx([90m[39;49;00m
            srcdir=[96mstr[39;49;00m(docs_dir),[90m[39;49;00m
            confdir=[96mstr[39;49;00m(docs_dir),[90m[39;49;00m
            outdir=[96mstr[39;49;00m(docs_dir / [33m"[39;49;00m[33m_build[39;49;00m[33m"[39;49;00m),[90m[39;49;00m
            doctreedir=[96mstr[39;49;00m(docs_dir / [33m"[39;49;00m[33m_doctrees[39;49;00m[33m"[39;49;00m),[90m[39;49;00m
            buildername=[33m"[39;49;00m[33mhtml[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
        )[90m[39;49;00m

[1m[31mtests/test_coverup_sphinx-doc__sphinx-8595.py[0m:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7f64e5567cd0>
app = <sphinx.application.Sphinx object at 0x7f64e5567190>
extname = 'sphinx.builders.latex'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
>               [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m[90m [39;49;00m[04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE               sphinx.errors.ExtensionError: Could not import extension sphinx.builders.latex (exception: No module named 'roman')[0m

[1m[31msphinx/registry.py[0m:420: ExtensionError
----------------------------- Captured stdout call -----------------------------
[01mRunning Sphinx v3.5.0+/b19bce971[39;49;00m
----------------------------- Captured stderr call -----------------------------
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m
[33m=============================== warnings summary ===============================[0m
sphinx/util/docutils.py:45
  /testbed/sphinx/util/docutils.py:45: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    __version_info__ = tuple(LooseVersion(docutils.__version__).version)

sphinx/registry.py:22
  /testbed/sphinx/registry.py:22: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    from pkg_resources import iter_entry_points

../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3147
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3147
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3147
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3147
  /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3147: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.
  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
    declare_namespace(pkg)

sphinx/directives/patches.py:14
  /testbed/sphinx/directives/patches.py:14: DeprecationWarning: The `docutils.parsers.rst.directive.html` module will be removed in Docutils 2.0. Since Docutils 0.18, the "Meta" node is defined in `docutils.parsers.rst.directives.misc`.
    from docutils.parsers.rst.directives import html, images, tables

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
============================= slowest 25 durations =============================
0.13s call     tests/test_coverup_sphinx-doc__sphinx-8595.py::test_empty_all_attribute_exposes_bug

(2 durations < 0.005s hidden.  Use -vv to show these durations.)
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/test_coverup_sphinx-doc__sphinx-8595.py::[1mtest_empty_all_attribute_exposes_bug[0m - sphinx.errors.ExtensionError: Could not import extension sphinx.builders.la...
[31m======================== [31m[1m1 failed[0m, [33m7 warnings[0m[31m in 0.71s[0m[31m =========================[0m
py39: exit 0 (1.61 seconds) /testbed> python -X dev -m pytest -rA --durations 25 tests/test_coverup_sphinx-doc__sphinx-8595.py pid=151
  py39: OK (5.76=setup[4.15]+cmd[1.61] seconds)
  congratulations :) (6.91 seconds)
+ cat coverage.cover
cat: coverage.cover: No such file or directory
+ git checkout b19bce971e82f2497d67fdacdeca8db08ae0ba56
Note: switching to 'b19bce971e82f2497d67fdacdeca8db08ae0ba56'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at b19bce971 Merge pull request #8593 from tk0miya/8592_meta_public_doesnt_affect_to_variables
M	setup.py
M	tox.ini
+ git apply /root/pre_state.patch
error: unrecognized input
