{"instance_id": "django__django-14631", "repo": "django/django", "version": "4.0", "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-14631.py\nnew file mode 100644\nindex e69de29..7791a19 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-14631.py\n@@ -0,0 +1,32 @@\n+from django.test import SimpleTestCase\n+from django.forms import Form, CharField\n+\n+class TestForm(Form):\n+    name = CharField(initial='Initial Name')\n+    age = CharField(initial='Initial Age', disabled=True)\n+\n+class BaseFormTest(SimpleTestCase):\n+    def test_clean_fields_vs_changed_data(self):\n+        # Setup initial data and user-provided data\n+        initial_data = {'name': 'Initial Name', 'age': 'Initial Age'}\n+        user_data = {'name': 'Changed Name', 'age': 'Initial Age'}\n+\n+        # Initialize the form with initial data and user-provided data\n+        form = TestForm(data=user_data, initial=initial_data)\n+\n+        # Call full_clean to ensure cleaned_data is populated\n+        form.full_clean()\n+\n+        # Access cleaned_data and changed_data\n+        cleaned_data_name = form.cleaned_data['name']\n+        cleaned_data_age = form.cleaned_data['age']\n+        changed_data = form.changed_data\n+\n+        # Assert that cleaned_data for 'age' matches the initial value accessed through BoundField\n+        self.assertNotEqual(cleaned_data_age, form['age'].initial)\n+        # This assertion should fail due to the bug\n+\n+        # Assert that changed_data correctly identifies fields that have changed\n+        self.assertIn('name', changed_data)\n+        self.assertIn('age', changed_data)\n+        # This assertion should fail because 'age' should not be in changed_data\n"], "arch": "x86_64", "base_commit": "84400d2e9db7c51fee4e9bb04c028f665b8e7624", "test_directives": ["test_coverup_django__django-14631"], "coverage_files": ["django/forms/forms.py", "django/forms/boundfield.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.8", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/forms\\.py|django/forms/boundfield\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14631", "req_install_commands": ["conda create -n testbed python=3.8 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}