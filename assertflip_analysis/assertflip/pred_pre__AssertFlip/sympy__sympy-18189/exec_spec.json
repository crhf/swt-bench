{"instance_id": "sympy__sympy-18189", "repo": "sympy/sympy", "version": "1.6", "environment_setup_commit": "28b41c73c12b70d6ad9f6e45109a80649c4456da", "patch_list": ["diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-18189.py\nnew file mode 100644\nindex e69de29..c85d627 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-18189.py\n@@ -0,0 +1,11 @@\n+from sympy.solvers.diophantine import diophantine\n+from sympy.abc import m, n\n+from sympy import S\n+\n+def test_diophantine_permute_syms_order_bug():\n+    eq = n**4 + m**4 - 2**4 - 3**4\n+    result_mn = diophantine(eq, syms=(m, n), permute=True)\n+    result_nm = diophantine(eq, syms=(n, m), permute=True)\n+    \n+    # The results should be the same regardless of the order of syms.\n+    assert result_mn == result_nm\n"], "arch": "x86_64", "base_commit": "1923822ddf8265199dbd9ef9ce09641d3fd042b9", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-18189.py"], "coverage_files": ["sympy/solvers/diophantine.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/solvers/diophantine\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-18189.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}