+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD f9fe062de5fc0896d6bbbf3f260b5c44473b3c77
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit f9fe062de5fc0896d6bbbf3f260b5c44473b3c77
Author: Adam Johnson <me@adamj.eu>
Date:   Tue Apr 14 13:53:42 2020 +0100

    Doc'd that Meta.indexes is preferred to Field.db_index.

diff --git a/docs/ref/models/fields.txt b/docs/ref/models/fields.txt
index 81f3013892..c449a1381c 100644
--- a/docs/ref/models/fields.txt
+++ b/docs/ref/models/fields.txt
@@ -351,6 +351,13 @@ looking at your Django code. For example::
 
 If ``True``, a database index will be created for this field.
 
+.. admonition:: Use the :attr:`~Options.indexes` option instead.
+
+    Where possible, use the :attr:`Meta.indexes <Options.indexes>` option
+    instead. In nearly all cases, :attr:`~Options.indexes` provides more
+    functionality than ``db_index``. ``db_index`` may be deprecated in the
+    future.
+
 ``db_tablespace``
 -----------------
 
+ git diff f9fe062de5fc0896d6bbbf3f260b5c44473b3c77
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.6.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230224080859) (3.9.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230224080859) (0.5.3)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-5.0.dev20230224080859-0.editable-py3-none-any.whl size=27432 sha256=386dacf9b810966c50246f66183f86463e7402e650904a524252755f3a9d56b9
  Stored in directory: /tmp/pip-ephem-wheel-cache-gc6essxg/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 5.0.dev20230224080859
    Uninstalling Django-5.0.dev20230224080859:
      Successfully uninstalled Django-5.0.dev20230224080859
Successfully installed Django-5.0.dev20230224080859
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch tests/test_coverup_django__django-16595.py...
Applied patch tests/test_coverup_django__django-16595.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/operations/fields\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16595
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/db/migrations/operations/fields\\.py)']
Testing against Django installed in '/testbed/django'
0.49 /testbed/django/db/migrations/operations/fields.py(1): from django.db.migrations.utils import field_references
0.49 /testbed/django/db/migrations/operations/fields.py(2): from django.db.models import NOT_PROVIDED
0.49 /testbed/django/db/migrations/operations/fields.py(3): from django.utils.functional import cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(5): from .base import Operation
0.49 /testbed/django/db/migrations/operations/fields.py(8): class FieldOperation(Operation):
0.49 /testbed/django/db/migrations/operations/fields.py(8): class FieldOperation(Operation):
0.49 /testbed/django/db/migrations/operations/fields.py(9):     def __init__(self, model_name, name, field=None):
0.49 /testbed/django/db/migrations/operations/fields.py(14):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(15):     def model_name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(14):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(15):     def model_name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(18):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(19):     def name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(18):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(19):     def name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(22):     def is_same_model_operation(self, operation):
0.49 /testbed/django/db/migrations/operations/fields.py(25):     def is_same_field_operation(self, operation):
0.49 /testbed/django/db/migrations/operations/fields.py(31):     def references_model(self, name, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(45):     def references_field(self, model_name, name, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(69):     def reduce(self, operation, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(75): class AddField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(75): class AddField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(76):     """Add a field to a model."""
0.49 /testbed/django/db/migrations/operations/fields.py(78):     def __init__(self, model_name, name, field, preserve_default=True):
0.49 /testbed/django/db/migrations/operations/fields.py(82):     def deconstruct(self):
0.49 /testbed/django/db/migrations/operations/fields.py(92):     def state_forwards(self, app_label, state):
0.49 /testbed/django/db/migrations/operations/fields.py(101):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(115):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(122):     def describe(self):
0.49 /testbed/django/db/migrations/operations/fields.py(125):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(126):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(125):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(126):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(129):     def reduce(self, operation, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(154): class RemoveField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(154): class RemoveField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(155):     """Remove a field from a model."""
0.49 /testbed/django/db/migrations/operations/fields.py(157):     def deconstruct(self):
0.49 /testbed/django/db/migrations/operations/fields.py(164):     def state_forwards(self, app_label, state):
0.49 /testbed/django/db/migrations/operations/fields.py(167):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(174):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(180):     def describe(self):
0.49 /testbed/django/db/migrations/operations/fields.py(183):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(184):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(183):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(184):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(187):     def reduce(self, operation, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(198): class AlterField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(198): class AlterField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(199):     """
0.49 /testbed/django/db/migrations/operations/fields.py(204):     def __init__(self, model_name, name, field, preserve_default=True):
0.49 /testbed/django/db/migrations/operations/fields.py(208):     def deconstruct(self):
0.49 /testbed/django/db/migrations/operations/fields.py(218):     def state_forwards(self, app_label, state):
0.49 /testbed/django/db/migrations/operations/fields.py(227):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(239):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(242):     def describe(self):
0.49 /testbed/django/db/migrations/operations/fields.py(245):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(246):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(245):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(246):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(249):     def reduce(self, operation, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(270): class RenameField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(270): class RenameField(FieldOperation):
0.49 /testbed/django/db/migrations/operations/fields.py(271):     """Rename a field on the model. Might affect db_column too."""
0.49 /testbed/django/db/migrations/operations/fields.py(273):     def __init__(self, model_name, old_name, new_name):
0.49 /testbed/django/db/migrations/operations/fields.py(278):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(279):     def old_name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(278):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(279):     def old_name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(282):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(283):     def new_name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(282):     @cached_property
0.49 /testbed/django/db/migrations/operations/fields.py(283):     def new_name_lower(self):
0.49 /testbed/django/db/migrations/operations/fields.py(286):     def deconstruct(self):
0.49 /testbed/django/db/migrations/operations/fields.py(294):     def state_forwards(self, app_label, state):
0.49 /testbed/django/db/migrations/operations/fields.py(299):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(309):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.49 /testbed/django/db/migrations/operations/fields.py(319):     def describe(self):
0.49 /testbed/django/db/migrations/operations/fields.py(326):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(327):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(326):     @property
0.49 /testbed/django/db/migrations/operations/fields.py(327):     def migration_name_fragment(self):
0.49 /testbed/django/db/migrations/operations/fields.py(334):     def references_field(self, model_name, name, app_label):
0.49 /testbed/django/db/migrations/operations/fields.py(339):     def reduce(self, operation, app_label):
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
test_alterfield_operations_not_reduced (test_coverup_django__django-16595.MigrationOptimizerBugTest.test_alterfield_operations_not_reduced) ... FAIL

======================================================================
FAIL: test_alterfield_operations_not_reduced (test_coverup_django__django-16595.MigrationOptimizerBugTest.test_alterfield_operations_not_reduced)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-16595.py", line 40, in test_alterfield_operations_not_reduced
    self.assertEqual(len(reduced_operations), 1)
AssertionError: 3 != 1

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
0.66 /testbed/django/db/migrations/operations/fields.py(205):         self.preserve_default = preserve_default
0.66 /testbed/django/db/migrations/operations/fields.py(206):         super().__init__(model_name, name, field)
0.66 /testbed/django/db/migrations/operations/fields.py(10):         self.model_name = model_name
0.66 /testbed/django/db/migrations/operations/fields.py(11):         self.name = name
0.66 /testbed/django/db/migrations/operations/fields.py(12):         self.field = field
0.66 /testbed/django/db/migrations/operations/fields.py(205):         self.preserve_default = preserve_default
0.66 /testbed/django/db/migrations/operations/fields.py(206):         super().__init__(model_name, name, field)
0.66 /testbed/django/db/migrations/operations/fields.py(10):         self.model_name = model_name
0.66 /testbed/django/db/migrations/operations/fields.py(11):         self.name = name
0.66 /testbed/django/db/migrations/operations/fields.py(12):         self.field = field
0.66 /testbed/django/db/migrations/operations/fields.py(205):         self.preserve_default = preserve_default
0.66 /testbed/django/db/migrations/operations/fields.py(206):         super().__init__(model_name, name, field)
0.66 /testbed/django/db/migrations/operations/fields.py(10):         self.model_name = model_name
0.66 /testbed/django/db/migrations/operations/fields.py(11):         self.name = name
0.66 /testbed/django/db/migrations/operations/fields.py(12):         self.field = field
0.66 /testbed/django/db/migrations/operations/fields.py(250):         if isinstance(operation, RemoveField) and self.is_same_field_operation(
0.66 /testbed/django/db/migrations/operations/fields.py(255):             isinstance(operation, RenameField)
0.66 /testbed/django/db/migrations/operations/fields.py(254):         elif (
0.66 /testbed/django/db/migrations/operations/fields.py(267):         return super().reduce(operation, app_label)
0.66 /testbed/django/db/migrations/operations/fields.py(70):         return super().reduce(operation, app_label) or not operation.references_field(
0.66 /testbed/django/db/migrations/operations/fields.py(71):             self.model_name, self.name, app_label
0.66 /testbed/django/db/migrations/operations/fields.py(70):         return super().reduce(operation, app_label) or not operation.references_field(
0.66 /testbed/django/db/migrations/operations/fields.py(46):         model_name_lower = model_name.lower()
0.66 /testbed/django/db/migrations/operations/fields.py(48):         if model_name_lower == self.model_name_lower:
0.66 /testbed/django/db/migrations/operations/fields.py(16):         return self.model_name.lower()
0.66 /testbed/django/db/migrations/operations/fields.py(49):             if name == self.name:
0.66 /testbed/django/db/migrations/operations/fields.py(50):                 return True
0.66 /testbed/django/db/migrations/operations/fields.py(250):         if isinstance(operation, RemoveField) and self.is_same_field_operation(
0.66 /testbed/django/db/migrations/operations/fields.py(255):             isinstance(operation, RenameField)
0.66 /testbed/django/db/migrations/operations/fields.py(254):         elif (
0.66 /testbed/django/db/migrations/operations/fields.py(267):         return super().reduce(operation, app_label)
0.66 /testbed/django/db/migrations/operations/fields.py(70):         return super().reduce(operation, app_label) or not operation.references_field(
0.66 /testbed/django/db/migrations/operations/fields.py(71):             self.model_name, self.name, app_label
0.66 /testbed/django/db/migrations/operations/fields.py(70):         return super().reduce(operation, app_label) or not operation.references_field(
0.66 /testbed/django/db/migrations/operations/fields.py(46):         model_name_lower = model_name.lower()
0.66 /testbed/django/db/migrations/operations/fields.py(48):         if model_name_lower == self.model_name_lower:
0.66 /testbed/django/db/migrations/operations/fields.py(16):         return self.model_name.lower()
0.66 /testbed/django/db/migrations/operations/fields.py(49):             if name == self.name:
0.66 /testbed/django/db/migrations/operations/fields.py(50):                 return True
+ cat coverage.cover
{"/testbed/django/db/migrations/operations/fields.py": {"0": 0, "1": 1, "2": 1, "3": 1, "5": 1, "8": 2, "75": 2, "154": 2, "198": 2, "270": 2, "9": 1, "14": 2, "15": 2, "18": 2, "19": 2, "22": 1, "25": 1, "31": 1, "45": 1, "69": 1, "10": 3, "11": 3, "12": 3, "16": 2, "20": 0, "23": 0, "27": 0, "28": 0, "26": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "43": 0, "46": 2, "48": 2, "49": 2, "50": 2, "52": 0, "51": 0, "53": 0, "54": 0, "56": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "70": 4, "71": 2, "78": 1, "82": 1, "92": 1, "101": 1, "115": 1, "122": 1, "125": 2, "126": 2, "129": 1, "79": 0, "80": 0, "84": 0, "85": 0, "86": 0, "83": 0, "88": 0, "89": 0, "90": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "112": 0, "113": 0, "116": 0, "117": 0, "118": 0, "119": 0, "123": 0, "127": 0, "130": 0, "131": 0, "133": 0, "135": 0, "136": 0, "137": 0, "138": 0, "134": 0, "141": 0, "142": 0, "143": 0, "145": 0, "146": 0, "147": 0, "148": 0, "144": 0, "151": 0, "157": 1, "164": 1, "167": 1, "174": 1, "180": 1, "183": 2, "184": 2, "187": 1, "159": 0, "160": 0, "158": 0, "162": 0, "165": 0, "168": 0, "169": 0, "170": 0, "171": 0, "175": 0, "176": 0, "177": 0, "178": 0, "181": 0, "185": 0, "188": 0, "191": 0, "190": 0, "192": 0, "194": 0, "195": 0, "204": 1, "208": 1, "218": 1, "227": 1, "239": 1, "242": 1, "245": 2, "246": 2, "249": 1, "205": 3, "206": 3, "210": 0, "211": 0, "212": 0, "209": 0, "214": 0, "215": 0, "216": 0, "219": 0, "220": 0, "221": 0, "222": 0, "223": 0, "224": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "234": 0, "235": 0, "236": 0, "237": 0, "240": 0, "243": 0, "247": 0, "250": 2, "251": 0, "253": 0, "255": 2, "254": 2, "256": 0, "257": 0, "260": 0, "261": 0, "262": 0, "263": 0, "264": 0, "259": 0, "267": 2, "273": 1, "278": 2, "279": 2, "282": 2, "283": 2, "286": 1, "294": 1, "299": 1, "309": 1, "319": 1, "326": 2, "327": 2, "334": 1, "339": 1, "274": 0, "275": 0, "276": 0, "280": 0, "284": 0, "288": 0, "289": 0, "290": 0, "287": 0, "292": 0, "295": 0, "296": 0, "300": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "310": 0, "311": 0, "312": 0, "313": 0, "314": 0, "315": 0, "316": 0, "321": 0, "322": 0, "323": 0, "320": 0, "329": 0, "330": 0, "331": 0, "328": 0, "335": 0, "336": 0, "341": 0, "340": 0, "342": 0, "343": 0, "346": 0, "347": 0, "348": 0, "349": 0, "345": 0, "354": 0, "355": 0, "356": 0}}
+ git checkout f9fe062de5fc0896d6bbbf3f260b5c44473b3c77
Note: switching to 'f9fe062de5fc0896d6bbbf3f260b5c44473b3c77'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at f9fe062de5 Doc'd that Meta.indexes is preferred to Field.db_index.
+ git apply /root/pre_state.patch
error: unrecognized input
