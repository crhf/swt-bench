{"instance_id": "django__django-11532", "repo": "django/django", "version": "3.0", "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-11532.py\nnew file mode 100644\nindex e69de29..1f94e5f 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11532.py\n@@ -0,0 +1,19 @@\n+from django.test import SimpleTestCase\n+from unittest.mock import patch\n+from django.core.mail import EmailMessage\n+\n+class EmailMessageTest(SimpleTestCase):\n+    def test_unicode_dns_message_id_encoding(self):\n+        \"\"\"\n+        Test that when the DNS_NAME is set to a non-ASCII value and the email encoding is set to 'iso-8859-1',\n+        the Message-ID header is correctly encoded, ensuring the bug is fixed.\n+        \"\"\"\n+        with patch(\"django.core.mail.message.DNS_NAME\", \"\u6f22\u5b57\"):\n+            email = EmailMessage('subject', '', 'from@example.com', ['to@example.com'])\n+            email.encoding = 'iso-8859-1'\n+            try:\n+                message = email.message()\n+                # The test should fail if the bug is present, expecting a UnicodeEncodeError.\n+                self.assertIn('xn--p8s937b', message['Message-ID'])\n+            except UnicodeEncodeError:\n+                self.fail(\"Expected Message-ID to be encoded correctly, but UnicodeEncodeError was raised.\")\n"], "arch": "x86_64", "base_commit": "a5308514fb4bc5086c9a16a8a24a945eeebb073c", "test_directives": ["test_coverup_django__django-11532"], "coverage_files": ["django/core/validators.py", "django/core/mail/message.py", "django/utils/encoding.py", "django/utils/html.py", "django/core/mail/utils.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/core/validators\\.py|django/core/mail/message\\.py|django/utils/encoding\\.py|django/utils/html\\.py|django/core/mail/utils\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11532", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref ~= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow != 5.4.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}