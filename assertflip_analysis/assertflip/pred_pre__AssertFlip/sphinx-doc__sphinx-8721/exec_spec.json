{"instance_id": "sphinx-doc__sphinx-8721", "repo": "sphinx-doc/sphinx", "version": "3.5", "environment_setup_commit": "4f8cb861e3b29186b38248fe81e4944fd987fcce", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-8721.py\nnew file mode 100644\nindex e69de29..51ecbd4 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-8721.py\n@@ -0,0 +1,54 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+def test_viewcode_pages_generated_for_epub_when_disabled(tmpdir):\n+    # Setup a minimal Sphinx project\n+    srcdir = tmpdir.mkdir(\"src\")\n+    conf_file = srcdir.join(\"conf.py\")\n+    conf_file.write(\"\"\"\n+extensions = ['sphinx.ext.viewcode']\n+viewcode_enable_epub = False\n+\"\"\")\n+    index_file = srcdir.join(\"index.rst\")\n+    index_file.write(\"\"\"\n+Welcome to the test documentation!\n+==================================\n+\n+.. toctree::\n+   :maxdepth: 2\n+   :caption: Contents:\n+\n+   module1\n+\"\"\")\n+    module_file = srcdir.join(\"module1.rst\")\n+    module_file.write(\"\"\"\n+Module 1\n+========\n+\n+.. automodule:: module1\n+    :members:\n+\"\"\")\n+    py_module_file = srcdir.join(\"module1.py\")\n+    py_module_file.write(\"\"\"\n+def foo():\n+    pass\n+\"\"\")\n+\n+    # Build the Sphinx project\n+    app = Sphinx(\n+        srcdir=str(srcdir),\n+        confdir=str(srcdir),\n+        outdir=str(tmpdir.join(\"out\")),\n+        doctreedir=str(tmpdir.join(\"doctree\")),\n+        buildername='epub'\n+    )\n+    app.build()\n+\n+    # Check for the presence of viewcode pages in the EPUB output\n+    epub_output_dir = tmpdir.join(\"out\")\n+    viewcode_page = epub_output_dir.join(\"_modules/module1.html\")\n+    \n+    # Assert that the viewcode page is not present, which is the expected behavior\n+    assert viewcode_page.exists(), \"BUG: viewcode page should not be generated for EPUB when viewcode_enable_epub=False\"\n+\n"], "arch": "x86_64", "base_commit": "82ef497a8c88f0f6e50d84520e7276bfbf65025d", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-8721.py"], "coverage_files": ["sphinx/ext/viewcode.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp/sphinxcontrib-htmlhelp<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml/sphinxcontrib-serializinghtml<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/ext/viewcode\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-8721.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}