+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 71e7c8e73712419626f1c2b6ec036e8559a2d667
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 71e7c8e73712419626f1c2b6ec036e8559a2d667
Author: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Date:   Mon Jan 31 11:33:24 2022 +0100

    Fixed #33468 -- Fixed QuerySet.aggregate() after annotate() crash on aggregates with default.
    
    Thanks Adam Johnson for the report.

diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py
index 8c4eae7906..bc31b48d8d 100644
--- a/django/db/models/aggregates.py
+++ b/django/db/models/aggregates.py
@@ -65,7 +65,9 @@ class Aggregate(Func):
         if hasattr(default, 'resolve_expression'):
             default = default.resolve_expression(query, allow_joins, reuse, summarize)
         c.default = None  # Reset the default argument before wrapping.
-        return Coalesce(c, default, output_field=c._output_field_or_none)
+        coalesce = Coalesce(c, default, output_field=c._output_field_or_none)
+        coalesce.is_summary = c.is_summary
+        return coalesce
 
     @property
     def default_alias(self):
diff --git a/docs/releases/4.0.2.txt b/docs/releases/4.0.2.txt
index c60dc68224..e7b9879625 100644
--- a/docs/releases/4.0.2.txt
+++ b/docs/releases/4.0.2.txt
@@ -33,3 +33,7 @@ Bugfixes
 * Fixed a duplicate operation regression in Django 4.0 that caused a migration
   crash when altering a primary key type for a concrete parent model referenced
   by a foreign key (:ticket:`33462`).
+
+* Fixed a bug in Django 4.0 that caused a crash of ``QuerySet.aggregate()``
+  after ``annotate()`` on an aggregate function with a
+  :ref:`default <aggregate-default>` (:ticket:`33468`).
diff --git a/tests/aggregation/tests.py b/tests/aggregation/tests.py
index 87ae945a7e..5c9aa5d534 100644
--- a/tests/aggregation/tests.py
+++ b/tests/aggregation/tests.py
@@ -1630,6 +1630,18 @@ class AggregateTestCase(TestCase):
         )
         self.assertAlmostEqual(result['value'], Decimal('61.72'), places=2)
 
+    def test_aggregation_default_after_annotation(self):
+        result = Publisher.objects.annotate(
+            double_num_awards=F('num_awards') * 2,
+        ).aggregate(value=Sum('double_num_awards', default=0))
+        self.assertEqual(result['value'], 40)
+
+    def test_aggregation_default_not_in_aggregate(self):
+        result = Publisher.objects.annotate(
+            avg_rating=Avg('book__rating', default=2.5),
+        ).aggregate(Sum('num_awards'))
+        self.assertEqual(result['num_awards__sum'], 20)
+
     def test_exists_none_with_aggregate(self):
         qs = Book.objects.all().annotate(
             count=Count('id'),
+ git diff 71e7c8e73712419626f1c2b6ec036e8559a2d667
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.4.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20220131103324) (3.9.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20220131103324) (0.5.3)
Requirement already satisfied: typing_extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from asgiref>=3.4.1->Django==4.1.dev20220131103324) (4.14.1)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-4.1.dev20220131103324-0.editable-py3-none-any.whl size=26981 sha256=56a9fde5c8d66972ef8c2d87f73108fc8e1a44ff15a643d0bdaf7215d9b24309
  Stored in directory: /tmp/pip-ephem-wheel-cache-5di0sqcx/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 4.1.dev20220131103324
    Uninstalling Django-4.1.dev20220131103324:
      Successfully uninstalled Django-4.1.dev20220131103324
Successfully installed Django-4.1.dev20220131103324
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch tests/test_coverup_django__django-15380.py...
Applied patch tests/test_coverup_django__django-15380.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/autodetector\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15380
test_rename_model_and_field_triggers_keyerror (test_coverup_django__django-15380.MigrationAutodetectorTest)
Test that renaming a model and a field in a single migration step ... FAIL

======================================================================
FAIL: test_rename_model_and_field_triggers_keyerror (test_coverup_django__django-15380.MigrationAutodetectorTest)
Test that renaming a model and a field in a single migration step
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-15380.py", line 49, in test_rename_model_and_field_triggers_keyerror
    autodetector.generate_renamed_fields()
  File "/testbed/django/db/migrations/autodetector.py", line 826, in generate_renamed_fields
    old_model_state = self.from_state.models[app_label, old_model_name]
KeyError: ('test_one', 'MyModel2')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-15380.py", line 51, in test_rename_model_and_field_triggers_keyerror
    self.fail("KeyError was raised when renaming a model and a field, which indicates a bug.")
AssertionError: KeyError was raised when renaming a model and a field, which indicates a bug.

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/db/migrations/autodetector\\.py)']
Testing against Django installed in '/testbed/django'
0.58 /testbed/django/db/migrations/autodetector.py(1): import functools
0.59 /testbed/django/db/migrations/autodetector.py(2): import re
0.59 /testbed/django/db/migrations/autodetector.py(3): from itertools import chain
0.59 /testbed/django/db/migrations/autodetector.py(5): from django.conf import settings
0.59 /testbed/django/db/migrations/autodetector.py(6): from django.db import models
0.59 /testbed/django/db/migrations/autodetector.py(7): from django.db.migrations import operations
0.59 /testbed/django/db/migrations/autodetector.py(8): from django.db.migrations.migration import Migration
0.59 /testbed/django/db/migrations/autodetector.py(9): from django.db.migrations.operations.models import AlterModelOptions
0.59 /testbed/django/db/migrations/autodetector.py(10): from django.db.migrations.optimizer import MigrationOptimizer
0.59 /testbed/django/db/migrations/autodetector.py(11): from django.db.migrations.questioner import MigrationQuestioner
0.59 /testbed/django/db/migrations/autodetector.py(12): from django.db.migrations.utils import (
0.59 /testbed/django/db/migrations/autodetector.py(15): from django.utils.topological_sort import stable_topological_sort
0.59 /testbed/django/db/migrations/autodetector.py(18): class MigrationAutodetector:
0.59 /testbed/django/db/migrations/autodetector.py(18): class MigrationAutodetector:
0.59 /testbed/django/db/migrations/autodetector.py(19):     """
0.59 /testbed/django/db/migrations/autodetector.py(31):     def __init__(self, from_state, to_state, questioner=None):
0.59 /testbed/django/db/migrations/autodetector.py(37):     def changes(self, graph, trim_to_apps=None, convert_apps=None, migration_name=None):
0.59 /testbed/django/db/migrations/autodetector.py(49):     def deep_deconstruct(self, obj):
0.59 /testbed/django/db/migrations/autodetector.py(89):     def only_relation_agnostic_fields(self, fields):
0.59 /testbed/django/db/migrations/autodetector.py(103):     def _detect_changes(self, convert_apps=None, graph=None):
0.59 /testbed/django/db/migrations/autodetector.py(203):     def _prepare_field_lists(self):
0.59 /testbed/django/db/migrations/autodetector.py(227):     def _generate_through_model_map(self):
0.59 /testbed/django/db/migrations/autodetector.py(237):     @staticmethod
0.59 /testbed/django/db/migrations/autodetector.py(238):     def _resolve_dependency(dependency):
0.59 /testbed/django/db/migrations/autodetector.py(248):     def _build_migration_list(self, graph=None):
0.59 /testbed/django/db/migrations/autodetector.py(335):     def _sort_migrations(self):
0.59 /testbed/django/db/migrations/autodetector.py(356):     def _optimize_migrations(self):
0.59 /testbed/django/db/migrations/autodetector.py(372):     def check_dependency(self, operation, dependency):
0.59 /testbed/django/db/migrations/autodetector.py(435):     def add_operation(self, app_label, operation, dependencies=None, beginning=False):
0.59 /testbed/django/db/migrations/autodetector.py(443):     def swappable_first_key(self, item):
0.59 /testbed/django/db/migrations/autodetector.py(466):     def generate_renamed_models(self):
0.59 /testbed/django/db/migrations/autodetector.py(520):     def generate_created_models(self):
0.59 /testbed/django/db/migrations/autodetector.py(690):     def generate_created_proxies(self):
0.59 /testbed/django/db/migrations/autodetector.py(723):     def generate_deleted_models(self):
0.59 /testbed/django/db/migrations/autodetector.py(808):     def generate_deleted_proxies(self):
0.59 /testbed/django/db/migrations/autodetector.py(821):     def generate_renamed_fields(self):
0.59 /testbed/django/db/migrations/autodetector.py(874):     def generate_added_fields(self):
0.59 /testbed/django/db/migrations/autodetector.py(879):     def _generate_added_field(self, app_label, model_name, field_name):
0.59 /testbed/django/db/migrations/autodetector.py(918):     def generate_removed_fields(self):
0.59 /testbed/django/db/migrations/autodetector.py(923):     def _generate_removed_field(self, app_label, model_name, field_name):
0.59 /testbed/django/db/migrations/autodetector.py(939):     def generate_altered_fields(self):
0.59 /testbed/django/db/migrations/autodetector.py(1024):     def create_altered_indexes(self):
0.59 /testbed/django/db/migrations/autodetector.py(1042):     def generate_added_indexes(self):
0.59 /testbed/django/db/migrations/autodetector.py(1053):     def generate_removed_indexes(self):
0.59 /testbed/django/db/migrations/autodetector.py(1064):     def create_altered_constraints(self):
0.59 /testbed/django/db/migrations/autodetector.py(1082):     def generate_added_constraints(self):
0.59 /testbed/django/db/migrations/autodetector.py(1093):     def generate_removed_constraints(self):
0.59 /testbed/django/db/migrations/autodetector.py(1104):     @staticmethod
0.59 /testbed/django/db/migrations/autodetector.py(1105):     def _get_dependencies_for_foreign_key(app_label, model_name, field, project_state):
0.59 /testbed/django/db/migrations/autodetector.py(1135):     def _get_altered_foo_together_operations(self, option_name):
0.59 /testbed/django/db/migrations/autodetector.py(1171):     def _generate_removed_altered_foo_together(self, operation):
0.59 /testbed/django/db/migrations/autodetector.py(1187):     def generate_removed_altered_unique_together(self):
0.59 /testbed/django/db/migrations/autodetector.py(1190):     def generate_removed_altered_index_together(self):
0.59 /testbed/django/db/migrations/autodetector.py(1193):     def _generate_altered_foo_together(self, operation):
0.59 /testbed/django/db/migrations/autodetector.py(1209):     def generate_altered_unique_together(self):
0.59 /testbed/django/db/migrations/autodetector.py(1212):     def generate_altered_index_together(self):
0.59 /testbed/django/db/migrations/autodetector.py(1215):     def generate_altered_db_table(self):
0.59 /testbed/django/db/migrations/autodetector.py(1232):     def generate_altered_options(self):
0.59 /testbed/django/db/migrations/autodetector.py(1268):     def generate_altered_order_with_respect_to(self):
0.59 /testbed/django/db/migrations/autodetector.py(1295):     def generate_altered_managers(self):
0.59 /testbed/django/db/migrations/autodetector.py(1309):     def arrange_for_graph(self, changes, graph, migration_name=None):
0.59 /testbed/django/db/migrations/autodetector.py(1359):     def _trim_to_apps(self, changes, app_labels):
0.59 /testbed/django/db/migrations/autodetector.py(1384):     @classmethod
0.59 /testbed/django/db/migrations/autodetector.py(1385):     def parse_number(cls, name):
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
0.63 /testbed/django/db/migrations/autodetector.py(32):         self.from_state = from_state
0.63 /testbed/django/db/migrations/autodetector.py(33):         self.to_state = to_state
0.63 /testbed/django/db/migrations/autodetector.py(34):         self.questioner = questioner or MigrationQuestioner()
0.63 /testbed/django/db/migrations/autodetector.py(35):         self.existing_apps = {app for app, model in from_state.models}
0.63 /testbed/django/db/migrations/autodetector.py(35):         self.existing_apps = {app for app, model in from_state.models}
0.63 /testbed/django/db/migrations/autodetector.py(35):         self.existing_apps = {app for app, model in from_state.models}
0.63 /testbed/django/db/migrations/autodetector.py(823):         self.renamed_fields = {}
0.63 /testbed/django/db/migrations/autodetector.py(824):         for app_label, model_name, field_name in sorted(self.new_field_keys - self.old_field_keys):
0.63 /testbed/django/db/migrations/autodetector.py(825):             old_model_name = self.renamed_models.get((app_label, model_name), model_name)
0.63 /testbed/django/db/migrations/autodetector.py(826):             old_model_state = self.from_state.models[app_label, old_model_name]
+ cat coverage.cover
{"/testbed/django/db/migrations/autodetector.py": {"1": 1, "2": 1, "3": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "15": 1, "18": 2, "31": 1, "37": 1, "49": 1, "89": 1, "103": 1, "203": 1, "227": 1, "237": 1, "238": 1, "248": 1, "335": 1, "356": 1, "372": 1, "435": 1, "443": 1, "466": 1, "520": 1, "690": 1, "723": 1, "808": 1, "821": 1, "874": 1, "879": 1, "918": 1, "923": 1, "939": 1, "1024": 1, "1042": 1, "1053": 1, "1064": 1, "1082": 1, "1093": 1, "1104": 1, "1105": 1, "1135": 1, "1171": 1, "1187": 1, "1190": 1, "1193": 1, "1209": 1, "1212": 1, "1215": 1, "1232": 1, "1268": 1, "1295": 1, "1309": 1, "1359": 1, "1384": 1, "1385": 1, "32": 1, "33": 1, "34": 1, "35": 3, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "62": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "71": 0, "72": 0, "73": 0, "74": 0, "76": 0, "77": 0, "79": 0, "80": 0, "81": 0, "83": 0, "78": 0, "87": 0, "61": 0, "82": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "122": 0, "123": 0, "124": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "141": 0, "143": 0, "144": 0, "145": 0, "147": 0, "146": 0, "148": 0, "150": 0, "151": 0, "153": 0, "155": 0, "156": 0, "159": 0, "162": 0, "163": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "176": 0, "177": 0, "179": 0, "180": 0, "182": 0, "184": 0, "185": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "197": 0, "198": 0, "199": 0, "201": 0, "209": 0, "210": 0, "211": 0, "212": 0, "213": 0, "215": 0, "221": 0, "223": 0, "216": 0, "217": 0, "218": 0, "214": 0, "224": 0, "222": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "234": 0, "235": 0, "243": 0, "244": 0, "245": 0, "246": 0, "259": 0, "260": 0, "261": 0, "262": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "280": 0, "281": 0, "282": 0, "285": 0, "286": 0, "287": 0, "288": 0, "289": 0, "290": 0, "292": 0, "293": 0, "294": 0, "295": 0, "299": 0, "303": 0, "304": 0, "306": 0, "308": 0, "309": 0, "310": 0, "311": 0, "312": 0, "314": 0, "316": 0, "317": 0, "318": 0, "319": 0, "320": 0, "321": 0, "322": 0, "323": 0, "324": 0, "326": 0, "327": 0, "328": 0, "329": 0, "330": 0, "332": 0, "333": 0, "340": 0, "342": 0, "343": 0, "344": 0, "347": 0, "348": 0, "349": 0, "350": 0, "351": 0, "354": 0, "358": 0, "359": 0, "360": 0, "363": 0, "364": 0, "365": 0, "368": 0, "369": 0, "370": 0, "378": 0, "380": 0, "381": 0, "379": 0, "384": 0, "387": 0, "388": 0, "389": 0, "386": 0, "392": 0, "393": 0, "394": 0, "385": 0, "398": 0, "400": 0, "401": 0, "402": 0, "399": 0, "405": 0, "407": 0, "408": 0, "406": 0, "411": 0, "413": 0, "414": 0, "415": 0, "412": 0, "418": 0, "420": 0, "421": 0, "422": 0, "419": 0, "425": 0, "427": 0, "428": 0, "429": 0, "426": 0, "433": 0, "437": 0, "438": 0, "439": 0, "441": 0, "448": 0, "449": 0, "450": 0, "452": 0, "454": 0, "456": 0, "455": 0, "457": 0, "458": 0, "459": 0, "461": 0, "462": 0, "463": 0, "464": 0, "451": 0, "472": 0, "473": 0, "474": 0, "475": 0, "476": 0, "477": 0, "479": 0, "480": 0, "481": 0, "482": 0, "483": 0, "484": 0, "485": 0, "486": 0, "487": 0, "489": 0, "492": 0, "493": 0, "494": 0, "495": 0, "496": 0, "499": 0, "500": 0, "501": 0, "502": 0, "503": 0, "505": 0, "507": 0, "508": 0, "509": 0, "510": 0, "512": 0, "513": 0, "514": 0, "516": 0, "517": 0, "518": 0, "490": 0, "488": 0, "530": 0, "531": 0, "532": 0, "533": 0, "534": 0, "535": 0, "537": 0, "538": 0, "540": 0, "541": 0, "542": 0, "543": 0, "544": 0, "545": 0, "546": 0, "547": 0, "548": 0, "549": 0, "550": 0, "553": 0, "554": 0, "555": 0, "556": 0, "557": 0, "560": 0, "559": 0, "563": 0, "564": 0, "565": 0, "566": 0, "569": 0, "570": 0, "571": 0, "572": 0, "573": 0, "574": 0, "575": 0, "576": 0, "578": 0, "579": 0, "580": 0, "581": 0, "582": 0, "585": 0, "586": 0, "587": 0, "588": 0, "589": 0, "590": 0, "591": 0, "592": 0, "594": 0, "595": 0, "599": 0, "600": 0, "603": 0, "604": 0, "605": 0, "608": 0, "610": 0, "611": 0, "612": 0, "613": 0, "614": 0, "615": 0, "617": 0, "620": 0, "621": 0, "622": 0, "623": 0, "624": 0, "625": 0, "628": 0, "629": 0, "627": 0, "632": 0, "634": 0, "636": 0, "637": 0, "638": 0, "639": 0, "640": 0, "641": 0, "642": 0, "644": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "651": 0, "653": 0, "655": 0, "656": 0, "657": 0, "658": 0, "659": 0, "660": 0, "662": 0, "664": 0, "665": 0, "666": 0, "667": 0, "668": 0, "669": 0, "671": 0, "675": 0, "676": 0, "677": 0, "678": 0, "679": 0, "680": 0, "681": 0, "682": 0, "683": 0, "684": 0, "685": 0, "687": 0, "633": 0, "696": 0, "697": 0, "698": 0, "699": 0, "702": 0, "701": 0, "705": 0, "706": 0, "707": 0, "708": 0, "710": 0, "711": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "717": 0, "720": 0, "733": 0, "734": 0, "735": 0, "736": 0, "737": 0, "738": 0, "740": 0, "741": 0, "742": 0, "743": 0, "744": 0, "745": 0, "746": 0, "748": 0, "749": 0, "750": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "758": 0, "759": 0, "760": 0, "761": 0, "762": 0, "763": 0, "767": 0, "768": 0, "769": 0, "770": 0, "771": 0, "772": 0, "779": 0, "780": 0, "782": 0, "781": 0, "784": 0, "785": 0, "786": 0, "788": 0, "789": 0, "790": 0, "793": 0, "794": 0, "796": 0, "797": 0, "798": 0, "800": 0, "801": 0, "802": 0, "803": 0, "805": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "817": 0, "823": 1, "824": 1, "825": 1, "826": 1, "827": 0, "828": 0, "830": 0, "831": 0, "832": 0, "833": 0, "834": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "841": 0, "844": 0, "845": 0, "846": 0, "850": 0, "851": 0, "852": 0, "853": 0, "854": 0, "855": 0, "856": 0, "857": 0, "858": 0, "861": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "869": 0, "870": 0, "871": 0, "872": 0, "876": 0, "877": 0, "880": 0, "882": 0, "883": 0, "884": 0, "885": 0, "889": 0, "891": 0, "892": 0, "893": 0, "890": 0, "895": 0, "896": 0, "897": 0, "898": 0, "900": 0, "902": 0, "901": 0, "903": 0, "904": 0, "906": 0, "907": 0, "908": 0, "909": 0, "910": 0, "911": 0, "912": 0, "913": 0, "915": 0, "920": 0, "921": 0, "924": 0, "925": 0, "926": 0, "927": 0, "928": 0, "934": 0, "935": 0, "933": 0, "944": 0, "946": 0, "947": 0, "948": 0, "949": 0, "950": 0, "953": 0, "954": 0, "955": 0, "956": 0, "958": 0, "959": 0, "960": 0, "961": 0, "965": 0, "966": 0, "968": 0, "969": 0, "970": 0, "971": 0, "973": 0, "975": 0, "977": 0, "979": 0, "980": 0, "983": 0, "982": 0, "984": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "994": 0, "995": 0, "996": 0, "997": 0, "999": 0, "1000": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1005": 0, "1006": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1015": 0, "1017": 0, "1021": 0, "1022": 0, "972": 0, "976": 0, "1025": 0, "1026": 0, "1027": 0, "1028": 0, "1029": 0, "1031": 0, "1032": 0, "1033": 0, "1034": 0, "1036": 0, "1037": 0, "1038": 0, "1043": 0, "1044": 0, "1045": 0, "1046": 0, "1047": 0, "1048": 0, "1049": 0, "1054": 0, "1055": 0, "1056": 0, "1057": 0, "1058": 0, "1059": 0, "1060": 0, "1065": 0, "1066": 0, "1067": 0, "1068": 0, "1069": 0, "1071": 0, "1072": 0, "1073": 0, "1074": 0, "1076": 0, "1077": 0, "1078": 0, "1083": 0, "1084": 0, "1085": 0, "1086": 0, "1087": 0, "1088": 0, "1089": 0, "1094": 0, "1095": 0, "1096": 0, "1097": 0, "1098": 0, "1099": 0, "1100": 0, "1106": 0, "1107": 0, "1108": 0, "1110": 0, "1111": 0, "1112": 0, "1114": 0, "1116": 0, "1117": 0, "1119": 0, "1120": 0, "1121": 0, "1122": 0, "1124": 0, "1125": 0, "1127": 0, "1128": 0, "1129": 0, "1130": 0, "1132": 0, "1133": 0, "1113": 0, "1136": 0, "1137": 0, "1138": 0, "1139": 0, "1142": 0, "1149": 0, "1143": 0, "1148": 0, "1151": 0, "1152": 0, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1161": 0, "1164": 0, "1165": 0, "1166": 0, "1167": 0, "1168": 0, "1163": 0, "1144": 0, "1146": 0, "1145": 0, "1178": 0, "1172": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1177": 0, "1179": 0, "1180": 0, "1181": 0, "1182": 0, "1183": 0, "1184": 0, "1188": 0, "1191": 0, "1200": 0, "1194": 0, "1195": 0, "1196": 0, "1197": 0, "1198": 0, "1199": 0, "1201": 0, "1202": 0, "1203": 0, "1204": 0, "1205": 0, "1206": 0, "1210": 0, "1213": 0, "1216": 0, "1217": 0, "1218": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1224": 0, "1225": 0, "1226": 0, "1227": 0, "1228": 0, "1238": 0, "1239": 0, "1240": 0, "1242": 0, "1244": 0, "1247": 0, "1248": 0, "1249": 0, "1250": 0, "1251": 0, "1252": 0, "1255": 0, "1256": 0, "1259": 0, "1260": 0, "1261": 0, "1262": 0, "1263": 0, "1264": 0, "1253": 0, "1257": 0, "1269": 0, "1270": 0, "1271": 0, "1272": 0, "1273": 0, "1274": 0, "1277": 0, "1278": 0, "1279": 0, "1280": 0, "1281": 0, "1282": 0, "1283": 0, "1286": 0, "1287": 0, "1288": 0, "1289": 0, "1290": 0, "1292": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1300": 0, "1301": 0, "1302": 0, "1303": 0, "1304": 0, "1305": 0, "1315": 0, "1316": 0, "1317": 0, "1318": 0, "1319": 0, "1321": 0, "1322": 0, "1323": 0, "1324": 0, "1325": 0, "1327": 0, "1329": 0, "1330": 0, "1331": 0, "1332": 0, "1334": 0, "1335": 0, "1337": 0, "1339": 0, "1340": 0, "1341": 0, "1342": 0, "1343": 0, "1344": 0, "1345": 0, "1346": 0, "1348": 0, "1349": 0, "1350": 0, "1351": 0, "1352": 0, "1354": 0, "1355": 0, "1356": 0, "1357": 0, "1367": 0, "1368": 0, "1369": 0, "1370": 0, "1371": 0, "1372": 0, "1374": 0, "1375": 0, "1376": 0, "1377": 0, "1379": 0, "1380": 0, "1381": 0, "1382": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1396": 0}}
+ git checkout 71e7c8e73712419626f1c2b6ec036e8559a2d667
Note: switching to '71e7c8e73712419626f1c2b6ec036e8559a2d667'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 71e7c8e737 Fixed #33468 -- Fixed QuerySet.aggregate() after annotate() crash on aggregates with default.
+ git apply /root/pre_state.patch
error: unrecognized input
