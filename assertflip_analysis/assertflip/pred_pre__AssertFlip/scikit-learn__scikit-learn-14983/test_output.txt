+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 06632c0d185128a53c57ccc73b25b6408e90bb89
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 06632c0d185128a53c57ccc73b25b6408e90bb89
Author: catajara <48599015+catajara@users.noreply.github.com>
Date:   Fri Sep 13 15:19:56 2019 -0400

    DOC add missing attributes to OneVsRestClassifier (#14783)

diff --git a/sklearn/multiclass.py b/sklearn/multiclass.py
index 8b28507906..9cee966148 100644
--- a/sklearn/multiclass.py
+++ b/sklearn/multiclass.py
@@ -170,11 +170,17 @@ class OneVsRestClassifier(MultiOutputMixin, ClassifierMixin,
 
     classes_ : array, shape = [`n_classes`]
         Class labels.
+
+    n_classes_ : int
+        Number of classes.
+
     label_binarizer_ : LabelBinarizer object
         Object used to transform multiclass labels to binary labels and
         vice-versa.
+
     multilabel_ : boolean
         Whether a OneVsRestClassifier is a multilabel classifier.
+
     """
     def __init__(self, estimator, n_jobs=None):
         self.estimator = estimator
+ git diff 06632c0d185128a53c57ccc73b25b6408e90bb89
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -v --no-use-pep517 --no-build-isolation -e .
Using pip 21.2.2 from /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/pip (python 3.6)
Obtaining file:///testbed
    Running command python setup.py egg_info
    running egg_info
    creating /tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info
    writing /tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/PKG-INFO
    writing dependency_links to /tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/dependency_links.txt
    writing requirements to /tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/requires.txt
    writing top-level names to /tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/top_level.txt
    writing manifest file '/tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/SOURCES.txt'
    reading manifest file '/tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    adding license file 'COPYING'
    writing manifest file '/tmp/pip-pip-egg-info-75e0ufzs/scikit_learn.egg-info/SOURCES.txt'
    Partial import of sklearn during the build process.
Requirement already satisfied: numpy>=1.11.0 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.19.2)
Requirement already satisfied: scipy>=0.17.0 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.5.2)
Requirement already satisfied: joblib>=0.11 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.1.1)
Installing collected packages: scikit-learn
  Attempting uninstall: scikit-learn
    Found existing installation: scikit-learn 0.22.dev0
    Uninstalling scikit-learn-0.22.dev0:
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/scikit-learn.egg-link
      Removing pth entries from /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/easy-install.pth:
      Removing entry: /testbed
      Successfully uninstalled scikit-learn-0.22.dev0
  Running setup.py develop for scikit-learn
    Running command /opt/miniconda3/envs/testbed/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '"'"'/testbed/setup.py'"'"'; __file__='"'"'/testbed/setup.py'"'"';f = getattr(tokenize, '"'"'open'"'"', open)(__file__) if os.path.exists(__file__) else io.StringIO('"'"'from setuptools import setup; setup()'"'"');code = f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' develop --no-deps
    C compiler: gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC

    compile options: '-c'
    extra options: '-fopenmp'
    gcc: test_openmp.c
    gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ objects/test_openmp.o -o test_openmp -fopenmp
    running develop
    running build_scripts
    running egg_info
    running build_src
    build_src
    building library "libsvm-skl" sources
    building extension "sklearn.__check_build._check_build" sources
    building extension "sklearn.preprocessing._csr_polynomial_expansion" sources
    building extension "sklearn.cluster._dbscan_inner" sources
    building extension "sklearn.cluster._hierarchical" sources
    building extension "sklearn.cluster._k_means_elkan" sources
    building extension "sklearn.cluster._k_means" sources
    building extension "sklearn.datasets._svmlight_format" sources
    building extension "sklearn.decomposition._online_lda" sources
    building extension "sklearn.decomposition.cdnmf_fast" sources
    building extension "sklearn.ensemble._gradient_boosting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._gradient_boosting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.histogram" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.splitting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._binning" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._predictor" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._loss" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.common" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.utils" sources
    building extension "sklearn.feature_extraction._hashing" sources
    building extension "sklearn.manifold._utils" sources
    building extension "sklearn.manifold._barnes_hut_tsne" sources
    building extension "sklearn.metrics.cluster.expected_mutual_info_fast" sources
    building extension "sklearn.metrics.pairwise_fast" sources
    building extension "sklearn.neighbors.ball_tree" sources
    building extension "sklearn.neighbors.kd_tree" sources
    building extension "sklearn.neighbors.dist_metrics" sources
    building extension "sklearn.neighbors.typedefs" sources
    building extension "sklearn.neighbors.quad_tree" sources
    building extension "sklearn.tree._tree" sources
    building extension "sklearn.tree._splitter" sources
    building extension "sklearn.tree._criterion" sources
    building extension "sklearn.tree._utils" sources
    building extension "sklearn.utils.sparsefuncs_fast" sources
    building extension "sklearn.utils._cython_blas" sources
    building extension "sklearn.utils.arrayfuncs" sources
    building extension "sklearn.utils.murmurhash" sources
    building extension "sklearn.utils.graph_shortest_path" sources
    building extension "sklearn.utils.fast_dict" sources
    building extension "sklearn.utils.seq_dataset" sources
    building extension "sklearn.utils.weight_vector" sources
    building extension "sklearn.utils._random" sources
    building extension "sklearn.utils._logistic_sigmoid" sources
    building extension "sklearn.svm.libsvm" sources
    building extension "sklearn.svm.liblinear" sources
    building extension "sklearn.svm.libsvm_sparse" sources
    building extension "sklearn.linear_model.cd_fast" sources
    building extension "sklearn.linear_model.sgd_fast" sources
    building extension "sklearn.linear_model.sag_fast" sources
    building extension "sklearn._isotonic" sources
    building data_files sources
    build_src: building npy-pkg config files
    writing scikit_learn.egg-info/PKG-INFO
    writing dependency_links to scikit_learn.egg-info/dependency_links.txt
    writing requirements to scikit_learn.egg-info/requires.txt
    writing top-level names to scikit_learn.egg-info/top_level.txt
    reading manifest file 'scikit_learn.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    adding license file 'COPYING'
    writing manifest file 'scikit_learn.egg-info/SOURCES.txt'
    running build_ext
    customize UnixCCompiler
    customize UnixCCompiler using build_clib
    customize UnixCCompiler
    customize UnixCCompiler using build_ext_subclass
    customize UnixCCompiler
    customize UnixCCompiler using build_ext_subclass
    Creating /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/scikit-learn.egg-link (link to .)
    Adding scikit-learn 0.22.dev0 to easy-install.pth file

    Installed /testbed
    Partial import of sklearn during the build process.
Successfully installed scikit-learn-0.22.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git apply -v -
Checking patch sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py...
Applied patch sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/model_selection/_split\.py)' -m pytest --no-header -rA -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sklearn/model_selection/_split\\.py)']
============================= test session starts ==============================
collected 2 items

sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py FF        [100%]

=================================== FAILURES ===================================
___________________________ test_repeated_kfold_repr ___________________________

    def test_repeated_kfold_repr():
        rkf = RepeatedKFold()
        # Capture the __repr__ output
        repr_output = repr(rkf)
        # Assert that the output is the correct representation
>       assert repr_output == "RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)", \
            "The __repr__ output is incorrect"
E       AssertionError: The __repr__ output is incorrect
E       assert '<sklearn.mod...7fed48b105f8>' == 'RepeatedKFol...m_state=None)'
E         - RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)
E         + <sklearn.model_selection._split.RepeatedKFold object at 0x7fed48b105f8>

sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py:9: AssertionError
----------------------------- Captured stdout call -----------------------------
0.64 /testbed/sklearn/model_selection/_split.py(1216):         super().__init__(
0.64 /testbed/sklearn/model_selection/_split.py(1217):             KFold, n_repeats, random_state, n_splits=n_splits)
0.64 /testbed/sklearn/model_selection/_split.py(1091):         if not isinstance(n_repeats, numbers.Integral):
0.64 /testbed/sklearn/model_selection/_split.py(1094):         if n_repeats <= 0:
0.64 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.64 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.64 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.64 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.64 /testbed/sklearn/model_selection/_split.py(1101):         self.cv = cv
0.64 /testbed/sklearn/model_selection/_split.py(1102):         self.n_repeats = n_repeats
0.64 /testbed/sklearn/model_selection/_split.py(1103):         self.random_state = random_state
0.64 /testbed/sklearn/model_selection/_split.py(1104):         self.cvargs = cvargs
_____________________ test_repeated_stratified_kfold_repr ______________________

    def test_repeated_stratified_kfold_repr():
        rskf = RepeatedStratifiedKFold()
        # Capture the __repr__ output
        repr_output = repr(rskf)
        # Assert that the output is the correct representation
>       assert repr_output == "RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)", \
            "The __repr__ output is incorrect"
E       AssertionError: The __repr__ output is incorrect
E       assert '<sklearn.mod...7fed47a24ef0>' == 'RepeatedStra...m_state=None)'
E         - RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)
E         + <sklearn.model_selection._split.RepeatedStratifiedKFold object at 0x7fed47a24ef0>

sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py:17: AssertionError
----------------------------- Captured stdout call -----------------------------
0.75 /testbed/sklearn/model_selection/_split.py(1269):         super().__init__(
0.75 /testbed/sklearn/model_selection/_split.py(1270):             StratifiedKFold, n_repeats, random_state, n_splits=n_splits)
0.75 /testbed/sklearn/model_selection/_split.py(1091):         if not isinstance(n_repeats, numbers.Integral):
0.75 /testbed/sklearn/model_selection/_split.py(1094):         if n_repeats <= 0:
0.75 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.75 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.75 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.75 /testbed/sklearn/model_selection/_split.py(1097):         if any(key in cvargs for key in ('random_state', 'shuffle')):
0.75 /testbed/sklearn/model_selection/_split.py(1101):         self.cv = cv
0.75 /testbed/sklearn/model_selection/_split.py(1102):         self.n_repeats = n_repeats
0.75 /testbed/sklearn/model_selection/_split.py(1103):         self.random_state = random_state
0.75 /testbed/sklearn/model_selection/_split.py(1104):         self.cvargs = cvargs
=========================== short test summary info ============================
FAILED sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py::test_repeated_kfold_repr
FAILED sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py::test_repeated_stratified_kfold_repr
========================= 2 failed, 1 warning in 0.37s =========================
+ cat coverage.cover
{"/testbed/sklearn/model_selection/_split.py": {"12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "20": 1, "22": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 1, "28": 1, "30": 1, "31": 1, "32": 1, "33": 1, "34": 1, "35": 1, "36": 1, "37": 1, "38": 1, "39": 1, "40": 1, "41": 1, "42": 1, "43": 1, "44": 1, "45": 1, "48": 2, "109": 2, "190": 2, "269": 2, "351": 2, "439": 2, "556": 2, "723": 2, "826": 2, "935": 2, "1066": 2, "1167": 2, "1220": 2, "1273": 2, "1347": 2, "1434": 2, "1558": 2, "1728": 1, "1797": 2, "1897": 2, "1949": 1, "2004": 1, "2135": 1, "2138": 1, "54": 1, "87": 1, "97": 1, "101": 1, "102": 1, "105": 1, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "92": 0, "93": 0, "94": 0, "95": 0, "99": 0, "106": 0, "156": 1, "165": 1, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "163": 0, "185": 0, "186": 0, "187": 0, "236": 1, "239": 1, "249": 1, "237": 0, "240": 0, "241": 0, "242": 0, "243": 0, "244": 0, "246": 0, "247": 0, "264": 0, "265": 0, "266": 0, "272": 1, "294": 1, "329": 1, "274": 0, "275": 0, "277": 0, "278": 0, "280": 0, "281": 0, "282": 0, "284": 0, "286": 0, "287": 0, "288": 0, "290": 0, "291": 0, "292": 0, "318": 0, "319": 0, "320": 0, "321": 0, "322": 0, "324": 0, "326": 0, "327": 0, "348": 0, "420": 1, "423": 1, "421": 0, "424": 0, "425": 0, "426": 0, "427": 0, "429": 0, "430": 0, "431": 0, "432": 0, "433": 0, "434": 0, "435": 0, "436": 0, "489": 1, "492": 1, "529": 1, "490": 0, "493": 0, "494": 0, "495": 0, "497": 0, "498": 0, "500": 0, "501": 0, "503": 0, "506": 0, "509": 0, "510": 0, "513": 0, "516": 0, "519": 0, "520": 0, "521": 0, "522": 0, "524": 0, "526": 0, "527": 0, "553": 0, "624": 1, "627": 1, "680": 1, "685": 1, "625": 0, "628": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "634": 0, "635": 0, "637": 0, "639": 0, "643": 0, "644": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "652": 0, "653": 0, "654": 0, "656": 0, "661": 0, "662": 0, "663": 0, "664": 0, "669": 0, "670": 0, "674": 0, "675": 0, "676": 0, "677": 0, "678": 0, "681": 0, "682": 0, "683": 0, "719": 0, "720": 0, "777": 1, "781": 1, "778": 0, "779": 0, "804": 0, "805": 0, "806": 0, "807": 0, "808": 0, "809": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "817": 0, "818": 0, "819": 0, "820": 0, "822": 0, "823": 0, "868": 1, "881": 1, "908": 1, "869": 0, "870": 0, "872": 0, "873": 0, "874": 0, "875": 0, "876": 0, "877": 0, "878": 0, "879": 0, "903": 0, "904": 0, "905": 0, "906": 0, "932": 0, "991": 1, "994": 1, "1012": 1, "1039": 1, "992": 0, "995": 0, "996": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1001": 0, "1004": 0, "1005": 0, "1006": 0, "1007": 0, "1008": 0, "1009": 0, "1010": 0, "1034": 0, "1035": 0, "1036": 0, "1037": 0, "1063": 0, "1090": 1, "1106": 1, "1139": 1, "1091": 2, "1092": 0, "1094": 2, "1095": 0, "1097": 8, "1098": 0, "1099": 0, "1101": 2, "1102": 2, "1103": 2, "1104": 2, "1130": 0, "1131": 0, "1133": 0, "1134": 0, "1135": 0, "1136": 0, "1137": 0, "1161": 0, "1162": 0, "1163": 0, "1164": 0, "1215": 1, "1216": 1, "1217": 1, "1268": 1, "1269": 1, "1270": 1, "1277": 1, "1284": 1, "1318": 1, "1319": 1, "1322": 1, "1343": 1, "1278": 0, "1279": 0, "1280": 0, "1281": 0, "1282": 0, "1314": 0, "1315": 0, "1316": 0, "1341": 0, "1344": 0, "1411": 1, "1419": 1, "1412": 0, "1413": 0, "1414": 0, "1415": 0, "1416": 0, "1417": 0, "1420": 0, "1421": 0, "1422": 0, "1423": 0, "1425": 0, "1426": 0, "1428": 0, "1429": 0, "1430": 0, "1431": 0, "1503": 1, "1511": 1, "1525": 1, "1504": 0, "1505": 0, "1506": 0, "1507": 0, "1508": 0, "1509": 0, "1512": 0, "1513": 0, "1514": 0, "1515": 0, "1516": 0, "1520": 0, "1521": 0, "1523": 0, "1555": 0, "1620": 1, "1628": 1, "1689": 1, "1621": 0, "1622": 0, "1623": 0, "1624": 0, "1625": 0, "1626": 0, "1629": 0, "1630": 0, "1631": 0, "1632": 0, "1633": 0, "1635": 0, "1638": 0, "1640": 0, "1641": 0, "1643": 0, "1644": 0, "1645": 0, "1650": 0, "1651": 0, "1653": 0, "1654": 0, "1655": 0, "1657": 0, "1661": 0, "1662": 0, "1664": 0, "1666": 0, "1669": 0, "1670": 0, "1671": 0, "1673": 0, "1674": 0, "1676": 0, "1677": 0, "1678": 0, "1679": 0, "1681": 0, "1682": 0, "1684": 0, "1685": 0, "1687": 0, "1723": 0, "1724": 0, "1733": 0, "1734": 0, "1736": 0, "1737": 0, "1739": 0, "1740": 0, "1741": 0, "1743": 0, "1745": 0, "1746": 0, "1747": 0, "1749": 0, "1751": 0, "1752": 0, "1753": 0, "1754": 0, "1756": 0, "1757": 0, "1758": 0, "1759": 0, "1761": 0, "1763": 0, "1764": 0, "1765": 0, "1766": 0, "1768": 0, "1769": 0, "1770": 0, "1771": 0, "1773": 0, "1774": 0, "1775": 0, "1776": 0, "1778": 0, "1779": 0, "1782": 0, "1784": 0, "1786": 0, "1787": 0, "1788": 0, "1790": 0, "1791": 0, "1794": 0, "1833": 1, "1839": 1, "1867": 1, "1875": 1, "1834": 0, "1835": 0, "1836": 0, "1837": 0, "1861": 0, "1862": 0, "1863": 0, "1864": 0, "1865": 0, "1869": 0, "1870": 0, "1871": 0, "1872": 0, "1873": 0, "1894": 0, "1899": 1, "1902": 1, "1923": 1, "1900": 0, "1921": 0, "1945": 0, "1946": 0, "1986": 0, "1987": 0, "1988": 0, "1989": 0, "1990": 0, "1992": 0, "1994": 0, "1995": 0, "1996": 0, "1998": 0, "1999": 0, "2001": 0, "2090": 0, "2091": 0, "2092": 0, "2093": 0, "2094": 0, "2095": 0, "2096": 0, "2097": 0, "2099": 0, "2100": 0, "2102": 0, "2104": 0, "2105": 0, "2106": 0, "2108": 0, "2109": 0, "2110": 0, "2111": 0, "2114": 0, "2115": 0, "2118": 0, "2119": 0, "2121": 0, "2123": 0, "2124": 0, "2125": 0, "2127": 0, "2129": 0, "2130": 0, "2140": 0, "2141": 0, "2143": 0, "2145": 0, "2146": 0, "2148": 0, "2150": 0, "2151": 0, "2152": 0, "2157": 0, "2158": 0, "2159": 0, "2160": 0, "2161": 0, "2163": 0, "2165": 0, "2166": 0, "2168": 0, "2149": 0}}
+ git checkout 06632c0d185128a53c57ccc73b25b6408e90bb89
Note: switching to '06632c0d185128a53c57ccc73b25b6408e90bb89'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 06632c0d18 DOC add missing attributes to OneVsRestClassifier (#14783)
+ git apply /root/pre_state.patch
error: unrecognized input
