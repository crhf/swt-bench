{"instance_id": "scikit-learn__scikit-learn-14983", "repo": "scikit-learn/scikit-learn", "version": "0.22", "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d", "patch_list": ["diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py\nnew file mode 100644\nindex e69de29..65e0362 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py\n@@ -0,0 +1,18 @@\n+import pytest\n+from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\n+\n+def test_repeated_kfold_repr():\n+    rkf = RepeatedKFold()\n+    # Capture the __repr__ output\n+    repr_output = repr(rkf)\n+    # Assert that the output is the correct representation\n+    assert repr_output == \"RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)\", \\\n+        \"The __repr__ output is incorrect\"\n+\n+def test_repeated_stratified_kfold_repr():\n+    rskf = RepeatedStratifiedKFold()\n+    # Capture the __repr__ output\n+    repr_output = repr(rskf)\n+    # Assert that the output is the correct representation\n+    assert repr_output == \"RepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)\", \\\n+        \"The __repr__ output is incorrect\"\n"], "arch": "x86_64", "base_commit": "06632c0d185128a53c57ccc73b25b6408e90bb89", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py"], "coverage_files": ["sklearn/model_selection/_split.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/model_selection/_split\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-14983.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}