+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD d7c3045115693e887bcd03599b7ca4650ac5f2cb
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit d7c3045115693e887bcd03599b7ca4650ac5f2cb
Merge: 0626a3043d 733900237b
Author: Aaron Meurer <asmeurer@gmail.com>
Date:   Fri Feb 3 14:50:52 2017 -0600

    Merge pull request #12105 from asmeurer/S-docs
    
    Add a docstring to S

+ git diff d7c3045115693e887bcd03599b7ca4650ac5f2cb
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.0.1.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.0.1.dev0
    Uninstalling sympy-1.0.1.dev0:
      Successfully uninstalled sympy-1.0.1.dev0
  DEPRECATION: Legacy editable install of sympy==1.0.1.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
<stdin>:14: trailing whitespace.
    
<stdin>:17: trailing whitespace.
    
<stdin>:20: trailing whitespace.
    
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-12096.py...
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-12096.py cleanly.
warning: 3 lines add whitespace errors.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/core/function\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-12096.p
/testbed/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/core/function\\.py)']
0.27 /testbed/sympy/core/function.py(1): """
0.27 /testbed/sympy/core/function.py(32): from __future__ import print_function, division
0.27 /testbed/sympy/core/function.py(34): from .add import Add
0.27 /testbed/sympy/core/function.py(35): from .assumptions import ManagedProperties
0.27 /testbed/sympy/core/function.py(36): from .basic import Basic
0.27 /testbed/sympy/core/function.py(37): from .cache import cacheit
0.27 /testbed/sympy/core/function.py(38): from .compatibility import iterable, is_sequence, as_int, ordered
0.27 /testbed/sympy/core/function.py(39): from .decorators import _sympifyit
0.27 /testbed/sympy/core/function.py(40): from .expr import Expr, AtomicExpr
0.27 /testbed/sympy/core/function.py(41): from .numbers import Rational, Float
0.27 /testbed/sympy/core/function.py(42): from .operations import LatticeOp
0.27 /testbed/sympy/core/function.py(43): from .rules import Transform
0.28 /testbed/sympy/core/function.py(44): from .singleton import S
0.28 /testbed/sympy/core/function.py(45): from .sympify import sympify
0.28 /testbed/sympy/core/function.py(47): from sympy.core.containers import Tuple, Dict
0.28 /testbed/sympy/core/function.py(48): from sympy.core.logic import fuzzy_and
0.28 /testbed/sympy/core/function.py(49): from sympy.core.compatibility import string_types, with_metaclass, range
0.28 /testbed/sympy/core/function.py(50): from sympy.utilities import default_sort_key
0.28 /testbed/sympy/core/function.py(51): from sympy.utilities.misc import filldedent
0.28 /testbed/sympy/core/function.py(52): from sympy.utilities.iterables import uniq
0.28 /testbed/sympy/core/function.py(53): from sympy.core.evaluate import global_evaluate
0.28 /testbed/sympy/core/function.py(55): import sys
0.28 /testbed/sympy/core/function.py(57): import mpmath
0.28 /testbed/sympy/core/function.py(58): import mpmath.libmp as mlib
0.28 /testbed/sympy/core/function.py(60): import inspect
0.28 /testbed/sympy/core/function.py(61): import collections
0.28 /testbed/sympy/core/function.py(63): def _coeff_isneg(a):
0.28 /testbed/sympy/core/function.py(87): class PoleError(Exception):
0.28 /testbed/sympy/core/function.py(87): class PoleError(Exception):
0.28 /testbed/sympy/core/function.py(88):     pass
0.28 /testbed/sympy/core/function.py(91): class ArgumentIndexError(ValueError):
0.28 /testbed/sympy/core/function.py(91): class ArgumentIndexError(ValueError):
0.28 /testbed/sympy/core/function.py(92):     def __str__(self):
0.28 /testbed/sympy/core/function.py(96): def _getnargs(cls):
0.28 /testbed/sympy/core/function.py(105): def _getnargs_old(eval_):
0.28 /testbed/sympy/core/function.py(120): def _getnargs_new(eval_):
0.28 /testbed/sympy/core/function.py(135): class FunctionClass(ManagedProperties):
0.28 /testbed/sympy/core/function.py(135): class FunctionClass(ManagedProperties):
0.28 /testbed/sympy/core/function.py(136):     """
0.28 /testbed/sympy/core/function.py(142):     _new = type.__new__
0.28 /testbed/sympy/core/function.py(144):     def __init__(cls, *args, **kwargs):
0.28 /testbed/sympy/core/function.py(165):     @property
0.28 /testbed/sympy/core/function.py(166):     def __signature__(self):
0.28 /testbed/sympy/core/function.py(181):     @property
0.28 /testbed/sympy/core/function.py(182):     def nargs(self):
0.28 /testbed/sympy/core/function.py(221):     def __repr__(cls):
0.28 /testbed/sympy/core/function.py(225): class Application(with_metaclass(FunctionClass, Basic)):
0.28 /testbed/sympy/core/function.py(225): class Application(with_metaclass(FunctionClass, Basic)):
0.28 /testbed/sympy/core/function.py(226):     """
0.28 /testbed/sympy/core/function.py(233):     is_Function = True
0.28 /testbed/sympy/core/function.py(235):     @cacheit
0.28 /testbed/sympy/core/function.py(236):     def __new__(cls, *args, **options):
0.28 /testbed/sympy/core/function.py(278):     @classmethod
0.28 /testbed/sympy/core/function.py(279):     def eval(cls, *args):
0.28 /testbed/sympy/core/function.py(306):     @property
0.28 /testbed/sympy/core/function.py(307):     def func(self):
0.28 /testbed/sympy/core/function.py(310):     def _eval_subs(self, old, new):
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(317): class Function(Application, Expr):
0.28 /testbed/sympy/core/function.py(317): class Function(Application, Expr):
0.28 /testbed/sympy/core/function.py(318):     """Base class for applied mathematical functions.
0.28 /testbed/sympy/core/function.py(388):     @property
0.28 /testbed/sympy/core/function.py(389):     def _diff_wrt(self):
0.28 /testbed/sympy/core/function.py(404):     @cacheit
0.28 /testbed/sympy/core/function.py(405):     def __new__(cls, *args, **options):
0.28 /testbed/sympy/core/function.py(437):     @classmethod
0.28 /testbed/sympy/core/function.py(438):     def _should_evalf(cls, arg):
0.28 /testbed/sympy/core/function.py(462):     @classmethod
0.28 /testbed/sympy/core/function.py(463):     def class_key(cls):
0.28 /testbed/sympy/core/function.py(490):     @property
0.28 /testbed/sympy/core/function.py(491):     def is_commutative(self):
0.28 /testbed/sympy/core/function.py(500):     def _eval_evalf(self, prec):
0.28 /testbed/sympy/core/function.py(549):     def _eval_derivative(self, s):
0.28 /testbed/sympy/core/function.py(565):     def _eval_is_commutative(self):
0.28 /testbed/sympy/core/function.py(568):     def _eval_is_complex(self):
0.28 /testbed/sympy/core/function.py(571):     def as_base_exp(self):
0.28 /testbed/sympy/core/function.py(577):     def _eval_aseries(self, n, args0, x, logx):
0.28 /testbed/sympy/core/function.py(589):     def _eval_nseries(self, x, n, logx):
0.28 /testbed/sympy/core/function.py(694):     def fdiff(self, argindex=1):
0.28 /testbed/sympy/core/function.py(718):     def _eval_as_leading_term(self, x):
0.28 /testbed/sympy/core/function.py(746):     def _sage_(self):
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(754): class AppliedUndef(Function):
0.28 /testbed/sympy/core/function.py(754): class AppliedUndef(Function):
0.28 /testbed/sympy/core/function.py(755):     """
0.28 /testbed/sympy/core/function.py(760):     def __new__(cls, *args, **options):
0.28 /testbed/sympy/core/function.py(765):     def _eval_as_leading_term(self, x):
0.28 /testbed/sympy/core/function.py(768):     def _sage_(self):
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(775): class UndefinedFunction(FunctionClass):
0.28 /testbed/sympy/core/function.py(775): class UndefinedFunction(FunctionClass):
0.28 /testbed/sympy/core/function.py(776):     """
0.28 /testbed/sympy/core/function.py(779):     def __new__(mcl, name, bases=(AppliedUndef,), __dict__=None, **kwargs):
0.28 /testbed/sympy/core/function.py(786):     def __instancecheck__(cls, instance):
0.28 /testbed/sympy/core/function.py(789): UndefinedFunction.__eq__ = lambda s, o: (isinstance(o, s.__class__) and
0.28 /testbed/sympy/core/function.py(792): class WildFunction(Function, AtomicExpr):
0.28 /testbed/sympy/core/function.py(792): class WildFunction(Function, AtomicExpr):
0.28 /testbed/sympy/core/function.py(793):     """
0.28 /testbed/sympy/core/function.py(840):     include = set()
0.28 /testbed/sympy/core/function.py(842):     def __init__(cls, name, **assumptions):
0.28 /testbed/sympy/core/function.py(855):     def matches(self, expr, repl_dict={}, old=False):
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(866): class Derivative(Expr):
0.28 /testbed/sympy/core/function.py(866): class Derivative(Expr):
0.28 /testbed/sympy/core/function.py(867):     """
0.28 /testbed/sympy/core/function.py(1038):     is_Derivative = True
0.28 /testbed/sympy/core/function.py(1040):     @property
0.28 /testbed/sympy/core/function.py(1041):     def _diff_wrt(self):
0.28 /testbed/sympy/core/function.py(1060):     def __new__(cls, expr, *variables, **assumptions):
0.28 /testbed/sympy/core/function.py(1225):     @classmethod
0.28 /testbed/sympy/core/function.py(1226):     def _sort_variables(cls, vars):
0.28 /testbed/sympy/core/function.py(1289):     def _eval_is_commutative(self):
0.28 /testbed/sympy/core/function.py(1292):     def _eval_derivative(self, v):
0.28 /testbed/sympy/core/function.py(1312):     def doit(self, **hints):
0.28 /testbed/sympy/core/function.py(1319):     @_sympifyit('z0', NotImplementedError)
0.28 /testbed/sympy/core/function.py(1320):     def doit_numerically(self, z0):
0.28 /testbed/sympy/core/function.py(1341):     @property
0.28 /testbed/sympy/core/function.py(1342):     def expr(self):
0.28 /testbed/sympy/core/function.py(1345):     @property
0.28 /testbed/sympy/core/function.py(1346):     def variables(self):
0.28 /testbed/sympy/core/function.py(1349):     @property
0.28 /testbed/sympy/core/function.py(1350):     def free_symbols(self):
0.28 /testbed/sympy/core/function.py(1353):     def _eval_subs(self, old, new):
0.28 /testbed/sympy/core/function.py(1375):     def _eval_lseries(self, x, logx):
0.28 /testbed/sympy/core/function.py(1380):     def _eval_nseries(self, x, n, logx):
0.28 /testbed/sympy/core/function.py(1389):     def _eval_as_leading_term(self, x):
0.28 /testbed/sympy/core/function.py(1398):     def _sage_(self):
0.28 /testbed/sympy/core/function.py(1403):     def as_finite_difference(self, points=1, x0=None, wrt=None):
0.28 /testbed/sympy/core/function.py(1481): class Lambda(Expr):
0.28 /testbed/sympy/core/function.py(1481): class Lambda(Expr):
0.28 /testbed/sympy/core/function.py(1482):     """
0.28 /testbed/sympy/core/function.py(1510):     is_Function = True
0.28 /testbed/sympy/core/function.py(1512):     def __new__(cls, variables, expr):
0.28 /testbed/sympy/core/function.py(1525):     @property
0.28 /testbed/sympy/core/function.py(1526):     def variables(self):
0.28 /testbed/sympy/core/function.py(1530):     @property
0.28 /testbed/sympy/core/function.py(1531):     def expr(self):
0.28 /testbed/sympy/core/function.py(1535):     @property
0.28 /testbed/sympy/core/function.py(1536):     def free_symbols(self):
0.28 /testbed/sympy/core/function.py(1539):     def __call__(self, *args):
0.28 /testbed/sympy/core/function.py(1557):     def __eq__(self, other):
0.28 /testbed/sympy/core/function.py(1568):     def __ne__(self, other):
0.28 /testbed/sympy/core/function.py(1571):     def __hash__(self):
0.28 /testbed/sympy/core/function.py(1574):     def _hashable_content(self):
0.28 /testbed/sympy/core/function.py(1577):     @property
0.28 /testbed/sympy/core/function.py(1578):     def is_identity(self):
0.28 /testbed/sympy/core/function.py(1586): class Subs(Expr):
0.28 /testbed/sympy/core/function.py(1586): class Subs(Expr):
0.28 /testbed/sympy/core/function.py(1587):     """
0.28 /testbed/sympy/core/function.py(1629):     def __new__(cls, expr, variables, point, **assumptions):
0.28 /testbed/sympy/core/function.py(1681):     def _eval_is_commutative(self):
0.28 /testbed/sympy/core/function.py(1684):     def doit(self):
0.28 /testbed/sympy/core/function.py(1687):     def evalf(self, prec=None, **options):
0.28 /testbed/sympy/core/function.py(1690):     n = evalf
0.28 /testbed/sympy/core/function.py(1692):     @property
0.28 /testbed/sympy/core/function.py(1693):     def variables(self):
0.28 /testbed/sympy/core/function.py(1697):     @property
0.28 /testbed/sympy/core/function.py(1698):     def expr(self):
0.28 /testbed/sympy/core/function.py(1702):     @property
0.28 /testbed/sympy/core/function.py(1703):     def point(self):
0.28 /testbed/sympy/core/function.py(1707):     @property
0.28 /testbed/sympy/core/function.py(1708):     def free_symbols(self):
0.28 /testbed/sympy/core/function.py(1712):     def _has(self, pattern):
0.28 /testbed/sympy/core/function.py(1717):     def __eq__(self, other):
0.28 /testbed/sympy/core/function.py(1722):     def __ne__(self, other):
0.28 /testbed/sympy/core/function.py(1725):     def __hash__(self):
0.28 /testbed/sympy/core/function.py(1728):     def _hashable_content(self):
0.28 /testbed/sympy/core/function.py(1731):     def _eval_subs(self, old, new):
0.28 /testbed/sympy/core/function.py(1738):     def _eval_derivative(self, s):
0.28 /testbed/sympy/core/function.py(1746):     def _eval_nseries(self, x, n, logx):
0.28 /testbed/sympy/core/function.py(1760):     def _eval_as_leading_term(self, x):
0.28 /testbed/sympy/core/function.py(1773): def diff(f, *symbols, **kwargs):
0.28 /testbed/sympy/core/function.py(1842): def expand(e, deep=True, modulus=None, power_base=True, power_exp=True,
0.28 /testbed/sympy/core/function.py(2173): def _mexpand(expr, recursive=False):
0.28 /testbed/sympy/core/function.py(2190): def expand_mul(expr, deep=True):
0.28 /testbed/sympy/core/function.py(2208): def expand_multinomial(expr, deep=True):
0.28 /testbed/sympy/core/function.py(2226): def expand_log(expr, deep=True, force=False):
0.28 /testbed/sympy/core/function.py(2245): def expand_func(expr, deep=True):
0.28 /testbed/sympy/core/function.py(2263): def expand_trig(expr, deep=True):
0.28 /testbed/sympy/core/function.py(2281): def expand_complex(expr, deep=True):
0.28 /testbed/sympy/core/function.py(2304): def expand_power_base(expr, deep=True, force=False):
0.28 /testbed/sympy/core/function.py(2369): def expand_power_exp(expr, deep=True):
0.28 /testbed/sympy/core/function.py(2387): def count_ops(expr, visual=False):
0.28 /testbed/sympy/core/function.py(2590): def nfloat(expr, n=15, exponent=False):
0.28 /testbed/sympy/core/function.py(2650): from sympy.core.symbol import Dummy, Symbol
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.36 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.36 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.36 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.36 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.36 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.36 /testbed/sympy/core/function.py(129):             return num_no_default
0.36 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.36 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.36 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.36 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.36 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.36 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.36 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.36 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.36 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.36 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.36 /testbed/sympy/core/function.py(129):             return num_no_default
0.36 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.36 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.36 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.36 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.36 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.36 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.36 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.36 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.36 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.36 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.36 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.36 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.36 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.36 /testbed/sympy/core/function.py(152):             if not nargs:
0.36 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.36 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.36 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.36 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.36 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.36 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.36 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.36 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.36 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.36 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.36 /testbed/sympy/core/function.py(152):             if not nargs:
0.36 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.36 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.36 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.36 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.36 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.36 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.36 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.36 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.36 /testbed/sympy/core/function.py(129):             return num_no_default
0.36 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.36 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.36 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.36 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.36 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.36 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.36 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.36 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.36 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.36 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.37 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.37 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.37 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.37 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.37 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.37 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.37 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.37 /testbed/sympy/core/function.py(129):             return num_no_default
0.37 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.37 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.37 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.37 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.37 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.37 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.37 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.37 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.37 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.37 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.37 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.37 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.37 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.37 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.37 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.37 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.37 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.37 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.37 /testbed/sympy/core/function.py(129):             return num_no_default
0.37 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.37 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.37 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.37 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.37 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.44 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.44 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.44 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.44 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.44 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.44 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.44 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.44 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.44 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.44 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.44 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.44 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.44 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.44 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.44 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.44 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.44 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.44 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.44 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.44 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.44 /testbed/sympy/core/function.py(129):             return num_no_default
0.44 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.44 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.44 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.44 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.44 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(123):         return None
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.48 /testbed/sympy/core/function.py(129):             return num_no_default
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(123):         return None
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.48 /testbed/sympy/core/function.py(129):             return num_no_default
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.48 /testbed/sympy/core/function.py(129):             return num_no_default
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.48 /testbed/sympy/core/function.py(129):             return num_no_default
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.48 /testbed/sympy/core/function.py(129):             return num_no_default
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.48 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.48 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.48 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.48 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.48 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.48 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.48 /testbed/sympy/core/function.py(129):             return num_no_default
0.48 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.48 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.48 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.48 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.48 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.49 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.49 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.49 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.49 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.49 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.49 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.49 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.49 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.49 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.49 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.49 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.49 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.49 /testbed/sympy/core/function.py(129):             return num_no_default
0.49 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.49 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.49 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.49 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.49 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.49 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.49 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.49 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.49 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.49 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.49 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.49 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.49 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.49 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.49 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.49 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.49 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.49 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.49 /testbed/sympy/core/function.py(129):             return num_no_default
0.49 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.49 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.49 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.49 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.49 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.49 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.49 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.49 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.49 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.49 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.50 /testbed/sympy/core/function.py(129):             return num_no_default
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.50 /testbed/sympy/core/function.py(129):             return num_no_default
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(123):         return None
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(123):         return None
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(123):         return None
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(123):         return None
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(123):         return None
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.50 /testbed/sympy/core/function.py(129):             return num_no_default
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.50 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.50 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(152):             if not nargs:
0.50 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.50 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.50 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.50 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.50 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.50 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.50 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.50 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.50 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.50 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.50 /testbed/sympy/core/function.py(152):             if not nargs:
0.50 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.50 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(123):         return None
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(123):         return None
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(123):         return None
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.53 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.53 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.53 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.53 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.53 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.53 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.53 /testbed/sympy/core/function.py(129):             return num_no_default
0.53 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.53 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.53 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.53 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.53 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(407):         if cls is Function:
0.54 /testbed/sympy/core/function.py(408):             return UndefinedFunction(*args, **options)
0.54 /testbed/sympy/core/function.py(780):         __dict__ = __dict__ or {}
0.54 /testbed/sympy/core/function.py(781):         __dict__.update(kwargs)
0.54 /testbed/sympy/core/function.py(782):         __dict__['__module__'] = None # For pickling
0.54 /testbed/sympy/core/function.py(783):         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)
0.54 /testbed/sympy/core/function.py(784):         return ret
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(123):         return None
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(152):             if not nargs:
0.54 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(152):             if not nargs:
0.54 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(152):             if not nargs:
0.54 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(152):             if not nargs:
0.54 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(123):         return None
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(129):             return num_no_default
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.54 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.54 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.54 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.54 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.54 /testbed/sympy/core/function.py(152):             if not nargs:
0.54 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.54 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.54 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.54 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.54 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.54 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.54 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.54 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.55 /testbed/sympy/core/function.py(129):             return num_no_default
0.55 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.55 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.55 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.55 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.55 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.55 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.55 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.55 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.55 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.55 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.55 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.55 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.55 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.55 /testbed/sympy/core/function.py(152):             if not nargs:
0.55 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.55 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.55 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.55 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.55 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.55 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.55 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(123):         return None
0.55 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.55 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.55 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.55 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.55 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.55 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.55 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.55 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.55 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.55 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.55 /testbed/sympy/core/function.py(129):             return num_no_default
0.55 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.55 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.55 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.55 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.55 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.55 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.55 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.55 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.55 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.55 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(123):         return None
0.55 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.55 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.55 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.55 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.55 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.55 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.55 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.55 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.55 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.55 /testbed/sympy/core/function.py(123):         return None
0.55 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(123):         return None
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(129):             return num_no_default
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.56 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.56 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.56 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.56 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.56 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.56 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.56 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.56 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.56 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.56 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.56 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.56 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(152):             if not nargs:
0.57 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(152):             if not nargs:
0.57 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(152):             if not nargs:
0.57 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(152):             if not nargs:
0.57 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(123):         return None
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.57 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.57 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.57 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.57 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.57 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.57 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.57 /testbed/sympy/core/function.py(129):             return num_no_default
0.57 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.57 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.57 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.57 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.57 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(123):         return None
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.58 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.58 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.58 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.58 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.58 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.58 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.58 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.58 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.58 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.58 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.58 /testbed/sympy/core/function.py(129):             return num_no_default
0.58 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(123):         return None
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.59 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.59 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.59 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.59 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.59 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.59 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.59 /testbed/sympy/core/function.py(129):             return num_no_default
0.59 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.59 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.59 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.59 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.59 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.65 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.65 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.65 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.65 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.65 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.65 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.65 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.65 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.65 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.65 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.65 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.65 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.65 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.65 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.65 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.65 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.65 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.65 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.65 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.65 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.65 /testbed/sympy/core/function.py(129):             return num_no_default
0.65 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.65 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.65 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.65 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.65 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/testbed/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/core/function\\.py)']
0.19 /testbed/sympy/core/function.py(1): """
0.19 /testbed/sympy/core/function.py(32): from __future__ import print_function, division
0.19 /testbed/sympy/core/function.py(34): from .add import Add
0.19 /testbed/sympy/core/function.py(35): from .assumptions import ManagedProperties
0.19 /testbed/sympy/core/function.py(36): from .basic import Basic
0.19 /testbed/sympy/core/function.py(37): from .cache import cacheit
0.19 /testbed/sympy/core/function.py(38): from .compatibility import iterable, is_sequence, as_int, ordered
0.19 /testbed/sympy/core/function.py(39): from .decorators import _sympifyit
0.19 /testbed/sympy/core/function.py(40): from .expr import Expr, AtomicExpr
0.19 /testbed/sympy/core/function.py(41): from .numbers import Rational, Float
0.19 /testbed/sympy/core/function.py(42): from .operations import LatticeOp
0.19 /testbed/sympy/core/function.py(43): from .rules import Transform
0.19 /testbed/sympy/core/function.py(44): from .singleton import S
0.19 /testbed/sympy/core/function.py(45): from .sympify import sympify
0.19 /testbed/sympy/core/function.py(47): from sympy.core.containers import Tuple, Dict
0.19 /testbed/sympy/core/function.py(48): from sympy.core.logic import fuzzy_and
0.19 /testbed/sympy/core/function.py(49): from sympy.core.compatibility import string_types, with_metaclass, range
0.19 /testbed/sympy/core/function.py(50): from sympy.utilities import default_sort_key
0.19 /testbed/sympy/core/function.py(51): from sympy.utilities.misc import filldedent
0.19 /testbed/sympy/core/function.py(52): from sympy.utilities.iterables import uniq
0.19 /testbed/sympy/core/function.py(53): from sympy.core.evaluate import global_evaluate
0.19 /testbed/sympy/core/function.py(55): import sys
0.19 /testbed/sympy/core/function.py(57): import mpmath
0.19 /testbed/sympy/core/function.py(58): import mpmath.libmp as mlib
0.19 /testbed/sympy/core/function.py(60): import inspect
0.19 /testbed/sympy/core/function.py(61): import collections
0.19 /testbed/sympy/core/function.py(63): def _coeff_isneg(a):
0.19 /testbed/sympy/core/function.py(87): class PoleError(Exception):
0.19 /testbed/sympy/core/function.py(87): class PoleError(Exception):
0.19 /testbed/sympy/core/function.py(88):     pass
0.19 /testbed/sympy/core/function.py(91): class ArgumentIndexError(ValueError):
0.19 /testbed/sympy/core/function.py(91): class ArgumentIndexError(ValueError):
0.19 /testbed/sympy/core/function.py(92):     def __str__(self):
0.19 /testbed/sympy/core/function.py(96): def _getnargs(cls):
0.19 /testbed/sympy/core/function.py(105): def _getnargs_old(eval_):
0.19 /testbed/sympy/core/function.py(120): def _getnargs_new(eval_):
0.19 /testbed/sympy/core/function.py(135): class FunctionClass(ManagedProperties):
0.19 /testbed/sympy/core/function.py(135): class FunctionClass(ManagedProperties):
0.19 /testbed/sympy/core/function.py(136):     """
0.19 /testbed/sympy/core/function.py(142):     _new = type.__new__
0.19 /testbed/sympy/core/function.py(144):     def __init__(cls, *args, **kwargs):
0.19 /testbed/sympy/core/function.py(165):     @property
0.19 /testbed/sympy/core/function.py(166):     def __signature__(self):
0.19 /testbed/sympy/core/function.py(181):     @property
0.19 /testbed/sympy/core/function.py(182):     def nargs(self):
0.19 /testbed/sympy/core/function.py(221):     def __repr__(cls):
0.19 /testbed/sympy/core/function.py(225): class Application(with_metaclass(FunctionClass, Basic)):
0.19 /testbed/sympy/core/function.py(225): class Application(with_metaclass(FunctionClass, Basic)):
0.19 /testbed/sympy/core/function.py(226):     """
0.19 /testbed/sympy/core/function.py(233):     is_Function = True
0.19 /testbed/sympy/core/function.py(235):     @cacheit
0.19 /testbed/sympy/core/function.py(236):     def __new__(cls, *args, **options):
0.19 /testbed/sympy/core/function.py(278):     @classmethod
0.19 /testbed/sympy/core/function.py(279):     def eval(cls, *args):
0.19 /testbed/sympy/core/function.py(306):     @property
0.19 /testbed/sympy/core/function.py(307):     def func(self):
0.19 /testbed/sympy/core/function.py(310):     def _eval_subs(self, old, new):
0.19 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.19 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.19 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.19 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.19 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(123):         return None
0.19 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.19 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.19 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.19 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.19 /testbed/sympy/core/function.py(317): class Function(Application, Expr):
0.19 /testbed/sympy/core/function.py(317): class Function(Application, Expr):
0.19 /testbed/sympy/core/function.py(318):     """Base class for applied mathematical functions.
0.19 /testbed/sympy/core/function.py(388):     @property
0.19 /testbed/sympy/core/function.py(389):     def _diff_wrt(self):
0.19 /testbed/sympy/core/function.py(404):     @cacheit
0.19 /testbed/sympy/core/function.py(405):     def __new__(cls, *args, **options):
0.19 /testbed/sympy/core/function.py(437):     @classmethod
0.19 /testbed/sympy/core/function.py(438):     def _should_evalf(cls, arg):
0.19 /testbed/sympy/core/function.py(462):     @classmethod
0.19 /testbed/sympy/core/function.py(463):     def class_key(cls):
0.19 /testbed/sympy/core/function.py(490):     @property
0.19 /testbed/sympy/core/function.py(491):     def is_commutative(self):
0.19 /testbed/sympy/core/function.py(500):     def _eval_evalf(self, prec):
0.19 /testbed/sympy/core/function.py(549):     def _eval_derivative(self, s):
0.19 /testbed/sympy/core/function.py(565):     def _eval_is_commutative(self):
0.19 /testbed/sympy/core/function.py(568):     def _eval_is_complex(self):
0.19 /testbed/sympy/core/function.py(571):     def as_base_exp(self):
0.19 /testbed/sympy/core/function.py(577):     def _eval_aseries(self, n, args0, x, logx):
0.19 /testbed/sympy/core/function.py(589):     def _eval_nseries(self, x, n, logx):
0.19 /testbed/sympy/core/function.py(694):     def fdiff(self, argindex=1):
0.19 /testbed/sympy/core/function.py(718):     def _eval_as_leading_term(self, x):
0.19 /testbed/sympy/core/function.py(746):     def _sage_(self):
0.19 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.19 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.19 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.19 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.19 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(123):         return None
0.19 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.19 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.19 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.19 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.19 /testbed/sympy/core/function.py(754): class AppliedUndef(Function):
0.19 /testbed/sympy/core/function.py(754): class AppliedUndef(Function):
0.19 /testbed/sympy/core/function.py(755):     """
0.19 /testbed/sympy/core/function.py(760):     def __new__(cls, *args, **options):
0.19 /testbed/sympy/core/function.py(765):     def _eval_as_leading_term(self, x):
0.19 /testbed/sympy/core/function.py(768):     def _sage_(self):
0.19 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.19 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.19 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.19 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.19 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(123):         return None
0.19 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.19 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.19 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.19 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.19 /testbed/sympy/core/function.py(775): class UndefinedFunction(FunctionClass):
0.19 /testbed/sympy/core/function.py(775): class UndefinedFunction(FunctionClass):
0.19 /testbed/sympy/core/function.py(776):     """
0.19 /testbed/sympy/core/function.py(779):     def __new__(mcl, name, bases=(AppliedUndef,), __dict__=None, **kwargs):
0.19 /testbed/sympy/core/function.py(786):     def __instancecheck__(cls, instance):
0.19 /testbed/sympy/core/function.py(789): UndefinedFunction.__eq__ = lambda s, o: (isinstance(o, s.__class__) and
0.19 /testbed/sympy/core/function.py(792): class WildFunction(Function, AtomicExpr):
0.19 /testbed/sympy/core/function.py(792): class WildFunction(Function, AtomicExpr):
0.19 /testbed/sympy/core/function.py(793):     """
0.19 /testbed/sympy/core/function.py(840):     include = set()
0.19 /testbed/sympy/core/function.py(842):     def __init__(cls, name, **assumptions):
0.19 /testbed/sympy/core/function.py(855):     def matches(self, expr, repl_dict={}, old=False):
0.19 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.19 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.19 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.19 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.19 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.19 /testbed/sympy/core/function.py(123):         return None
0.19 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.19 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.19 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.19 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.19 /testbed/sympy/core/function.py(866): class Derivative(Expr):
0.19 /testbed/sympy/core/function.py(866): class Derivative(Expr):
0.19 /testbed/sympy/core/function.py(867):     """
0.19 /testbed/sympy/core/function.py(1038):     is_Derivative = True
0.19 /testbed/sympy/core/function.py(1040):     @property
0.19 /testbed/sympy/core/function.py(1041):     def _diff_wrt(self):
0.19 /testbed/sympy/core/function.py(1060):     def __new__(cls, expr, *variables, **assumptions):
0.19 /testbed/sympy/core/function.py(1225):     @classmethod
0.19 /testbed/sympy/core/function.py(1226):     def _sort_variables(cls, vars):
0.19 /testbed/sympy/core/function.py(1289):     def _eval_is_commutative(self):
0.19 /testbed/sympy/core/function.py(1292):     def _eval_derivative(self, v):
0.19 /testbed/sympy/core/function.py(1312):     def doit(self, **hints):
0.19 /testbed/sympy/core/function.py(1319):     @_sympifyit('z0', NotImplementedError)
0.19 /testbed/sympy/core/function.py(1320):     def doit_numerically(self, z0):
0.19 /testbed/sympy/core/function.py(1341):     @property
0.19 /testbed/sympy/core/function.py(1342):     def expr(self):
0.19 /testbed/sympy/core/function.py(1345):     @property
0.19 /testbed/sympy/core/function.py(1346):     def variables(self):
0.19 /testbed/sympy/core/function.py(1349):     @property
0.19 /testbed/sympy/core/function.py(1350):     def free_symbols(self):
0.19 /testbed/sympy/core/function.py(1353):     def _eval_subs(self, old, new):
0.19 /testbed/sympy/core/function.py(1375):     def _eval_lseries(self, x, logx):
0.19 /testbed/sympy/core/function.py(1380):     def _eval_nseries(self, x, n, logx):
0.19 /testbed/sympy/core/function.py(1389):     def _eval_as_leading_term(self, x):
0.19 /testbed/sympy/core/function.py(1398):     def _sage_(self):
0.19 /testbed/sympy/core/function.py(1403):     def as_finite_difference(self, points=1, x0=None, wrt=None):
0.19 /testbed/sympy/core/function.py(1481): class Lambda(Expr):
0.19 /testbed/sympy/core/function.py(1481): class Lambda(Expr):
0.19 /testbed/sympy/core/function.py(1482):     """
0.19 /testbed/sympy/core/function.py(1510):     is_Function = True
0.19 /testbed/sympy/core/function.py(1512):     def __new__(cls, variables, expr):
0.19 /testbed/sympy/core/function.py(1525):     @property
0.19 /testbed/sympy/core/function.py(1526):     def variables(self):
0.19 /testbed/sympy/core/function.py(1530):     @property
0.19 /testbed/sympy/core/function.py(1531):     def expr(self):
0.19 /testbed/sympy/core/function.py(1535):     @property
0.19 /testbed/sympy/core/function.py(1536):     def free_symbols(self):
0.19 /testbed/sympy/core/function.py(1539):     def __call__(self, *args):
0.19 /testbed/sympy/core/function.py(1557):     def __eq__(self, other):
0.19 /testbed/sympy/core/function.py(1568):     def __ne__(self, other):
0.19 /testbed/sympy/core/function.py(1571):     def __hash__(self):
0.19 /testbed/sympy/core/function.py(1574):     def _hashable_content(self):
0.19 /testbed/sympy/core/function.py(1577):     @property
0.19 /testbed/sympy/core/function.py(1578):     def is_identity(self):
0.19 /testbed/sympy/core/function.py(1586): class Subs(Expr):
0.19 /testbed/sympy/core/function.py(1586): class Subs(Expr):
0.19 /testbed/sympy/core/function.py(1587):     """
0.19 /testbed/sympy/core/function.py(1629):     def __new__(cls, expr, variables, point, **assumptions):
0.19 /testbed/sympy/core/function.py(1681):     def _eval_is_commutative(self):
0.19 /testbed/sympy/core/function.py(1684):     def doit(self):
0.19 /testbed/sympy/core/function.py(1687):     def evalf(self, prec=None, **options):
0.19 /testbed/sympy/core/function.py(1690):     n = evalf
0.19 /testbed/sympy/core/function.py(1692):     @property
0.19 /testbed/sympy/core/function.py(1693):     def variables(self):
0.19 /testbed/sympy/core/function.py(1697):     @property
0.19 /testbed/sympy/core/function.py(1698):     def expr(self):
0.19 /testbed/sympy/core/function.py(1702):     @property
0.19 /testbed/sympy/core/function.py(1703):     def point(self):
0.19 /testbed/sympy/core/function.py(1707):     @property
0.19 /testbed/sympy/core/function.py(1708):     def free_symbols(self):
0.19 /testbed/sympy/core/function.py(1712):     def _has(self, pattern):
0.19 /testbed/sympy/core/function.py(1717):     def __eq__(self, other):
0.19 /testbed/sympy/core/function.py(1722):     def __ne__(self, other):
0.19 /testbed/sympy/core/function.py(1725):     def __hash__(self):
0.19 /testbed/sympy/core/function.py(1728):     def _hashable_content(self):
0.19 /testbed/sympy/core/function.py(1731):     def _eval_subs(self, old, new):
0.19 /testbed/sympy/core/function.py(1738):     def _eval_derivative(self, s):
0.19 /testbed/sympy/core/function.py(1746):     def _eval_nseries(self, x, n, logx):
0.19 /testbed/sympy/core/function.py(1760):     def _eval_as_leading_term(self, x):
0.20 /testbed/sympy/core/function.py(1773): def diff(f, *symbols, **kwargs):
0.20 /testbed/sympy/core/function.py(1842): def expand(e, deep=True, modulus=None, power_base=True, power_exp=True,
0.20 /testbed/sympy/core/function.py(2173): def _mexpand(expr, recursive=False):
0.20 /testbed/sympy/core/function.py(2190): def expand_mul(expr, deep=True):
0.20 /testbed/sympy/core/function.py(2208): def expand_multinomial(expr, deep=True):
0.20 /testbed/sympy/core/function.py(2226): def expand_log(expr, deep=True, force=False):
0.20 /testbed/sympy/core/function.py(2245): def expand_func(expr, deep=True):
0.20 /testbed/sympy/core/function.py(2263): def expand_trig(expr, deep=True):
0.20 /testbed/sympy/core/function.py(2281): def expand_complex(expr, deep=True):
0.20 /testbed/sympy/core/function.py(2304): def expand_power_base(expr, deep=True, force=False):
0.20 /testbed/sympy/core/function.py(2369): def expand_power_exp(expr, deep=True):
0.20 /testbed/sympy/core/function.py(2387): def count_ops(expr, visual=False):
0.20 /testbed/sympy/core/function.py(2590): def nfloat(expr, n=15, exponent=False):
0.20 /testbed/sympy/core/function.py(2650): from sympy.core.symbol import Dummy, Symbol
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.20 /testbed/sympy/core/function.py(129):             return num_no_default
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(123):         return None
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.20 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.20 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.20 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.20 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.20 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.20 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.20 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.20 /testbed/sympy/core/function.py(129):             return num_no_default
0.20 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.20 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.20 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.20 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.20 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(129):             return num_no_default
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.22 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(129):             return num_no_default
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.22 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(152):             if not nargs:
0.22 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(152):             if not nargs:
0.22 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(129):             return num_no_default
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.22 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(129):             return num_no_default
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.22 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.22 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.22 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.22 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.22 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.22 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.22 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.22 /testbed/sympy/core/function.py(129):             return num_no_default
0.22 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.22 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.22 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.22 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.22 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.23 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.23 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.23 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.23 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.23 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.23 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.23 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.23 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.23 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.23 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.23 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.23 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.23 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.23 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.23 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.23 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.23 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.23 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.23 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.23 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.23 /testbed/sympy/core/function.py(129):             return num_no_default
0.23 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.23 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.23 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.23 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.23 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(123):         return None
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.24 /testbed/sympy/core/function.py(129):             return num_no_default
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(123):         return None
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.24 /testbed/sympy/core/function.py(129):             return num_no_default
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.24 /testbed/sympy/core/function.py(129):             return num_no_default
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.24 /testbed/sympy/core/function.py(129):             return num_no_default
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.24 /testbed/sympy/core/function.py(129):             return num_no_default
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.24 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.24 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.24 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.24 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.24 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.24 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.24 /testbed/sympy/core/function.py(129):             return num_no_default
0.24 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.24 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.24 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.24 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.24 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(152):             if not nargs:
0.25 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(152):             if not nargs:
0.25 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(123):         return None
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.25 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.25 /testbed/sympy/core/function.py(129):             return num_no_default
0.25 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.25 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.25 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.25 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.25 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.25 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.25 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.25 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.25 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.25 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.25 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(123):         return None
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(407):         if cls is Function:
0.26 /testbed/sympy/core/function.py(408):             return UndefinedFunction(*args, **options)
0.26 /testbed/sympy/core/function.py(780):         __dict__ = __dict__ or {}
0.26 /testbed/sympy/core/function.py(781):         __dict__.update(kwargs)
0.26 /testbed/sympy/core/function.py(782):         __dict__['__module__'] = None # For pickling
0.26 /testbed/sympy/core/function.py(783):         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)
0.26 /testbed/sympy/core/function.py(784):         return ret
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(123):         return None
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(152):             if not nargs:
0.26 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(152):             if not nargs:
0.26 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(152):             if not nargs:
0.26 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(152):             if not nargs:
0.26 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(123):         return None
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(152):             if not nargs:
0.26 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(129):             return num_no_default
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.26 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.26 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.26 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.26 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.26 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.26 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.26 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.26 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.26 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.26 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.26 /testbed/sympy/core/function.py(152):             if not nargs:
0.26 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.26 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(123):         return None
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.27 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(152):             if not nargs:
0.27 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.27 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.27 /testbed/sympy/core/function.py(152):             if not nargs:
0.27 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.27 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.27 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.27 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.27 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.27 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.27 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.27 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.27 /testbed/sympy/core/function.py(129):             return num_no_default
0.27 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(152):             if not nargs:
0.28 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(130):         return tuple(range(num_no_default, num_no_default+num_with_default+1))
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(152):             if not nargs:
0.28 /testbed/sympy/core/function.py(160):             nargs = tuple(ordered(set(nargs)))
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(123):         return None
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.28 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.28 /testbed/sympy/core/function.py(129):             return num_no_default
0.28 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.28 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.28 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.28 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.28 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.28 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.28 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.28 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.28 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.28 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.28 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(123):         return None
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.29 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.29 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.29 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.29 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.29 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.29 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.29 /testbed/sympy/core/function.py(129):             return num_no_default
0.29 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.29 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.29 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.29 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.29 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.30 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.30 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.30 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.30 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.30 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.30 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.30 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.30 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.30 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.30 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.30 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.30 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.30 /testbed/sympy/core/function.py(125):         p_or_k = [p for n,p in parameters if p.kind == p.POSITIONAL_OR_KEYWORD]
0.30 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.30 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.30 /testbed/sympy/core/function.py(126):         num_no_default = len(list(filter(lambda p:p.default == p.empty, p_or_k)))
0.30 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.30 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.30 /testbed/sympy/core/function.py(127):         num_with_default = len(list(filter(lambda p:p.default != p.empty, p_or_k)))
0.30 /testbed/sympy/core/function.py(128):         if not num_with_default:
0.30 /testbed/sympy/core/function.py(129):             return num_no_default
0.30 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.31 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.31 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.31 /testbed/sympy/core/function.py(162):             nargs = (as_int(nargs),)
0.31 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.33 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.33 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.33 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.33 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.33 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.33 /testbed/sympy/core/function.py(123):         return None
0.33 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.33 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.33 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.33 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.34 /testbed/sympy/core/function.py(1513):         from sympy.sets.sets import FiniteSet
0.34 /testbed/sympy/core/function.py(1514):         v = list(variables) if iterable(variables) else [variables]
0.34 /testbed/sympy/core/function.py(1515):         for i in v:
0.34 /testbed/sympy/core/function.py(1516):             if not getattr(i, 'is_Symbol', False):
0.34 /testbed/sympy/core/function.py(1515):         for i in v:
0.34 /testbed/sympy/core/function.py(1516):             if not getattr(i, 'is_Symbol', False):
0.34 /testbed/sympy/core/function.py(1515):         for i in v:
0.34 /testbed/sympy/core/function.py(1518):         if len(v) == 1 and v[0] == expr:
0.34 /testbed/sympy/core/function.py(1521):         obj = Expr.__new__(cls, Tuple(*v), sympify(expr))
0.34 /testbed/sympy/core/function.py(1522):         obj.nargs = FiniteSet(len(v))
0.34 /testbed/sympy/core/function.py(1523):         return obj
0.34 /testbed/sympy/core/function.py(1533):         return self._args[1]
0.34 /testbed/sympy/core/function.py(1533):         return self._args[1]
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
random seed:        65424790
hash randomization: on (PYTHONHASHSEED=1799484313)

sympy/polys/tests/test_coverup_sympy__sympy-12096.py[1] 
test_evalf_composition_bug 0.38 /testbed/sympy/core/function.py(780):         __dict__ = __dict__ or {}
0.38 /testbed/sympy/core/function.py(781):         __dict__.update(kwargs)
0.38 /testbed/sympy/core/function.py(782):         __dict__['__module__'] = None # For pickling
0.38 /testbed/sympy/core/function.py(783):         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)
0.38 /testbed/sympy/core/function.py(784):         return ret
0.38 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.38 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.38 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.38 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.38 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.38 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.38 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.38 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.38 /testbed/sympy/core/function.py(123):         return None
0.38 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.38 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.38 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.38 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.38 /testbed/sympy/core/function.py(780):         __dict__ = __dict__ or {}
0.38 /testbed/sympy/core/function.py(781):         __dict__.update(kwargs)
0.38 /testbed/sympy/core/function.py(782):         __dict__['__module__'] = None # For pickling
0.38 /testbed/sympy/core/function.py(783):         ret = super(UndefinedFunction, mcl).__new__(mcl, name, bases, __dict__)
0.38 /testbed/sympy/core/function.py(784):         return ret
0.38 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.38 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.38 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.38 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.38 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.38 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.38 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.38 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.38 /testbed/sympy/core/function.py(123):         return None
0.38 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.38 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.38 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.38 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.38 /testbed/sympy/core/function.py(761):         args = list(map(sympify, args))
0.38 /testbed/sympy/core/function.py(762):         obj = super(AppliedUndef, cls).__new__(cls, *args, **options)
0.38 /testbed/sympy/core/function.py(407):         if cls is Function:
0.38 /testbed/sympy/core/function.py(410):         n = len(args)
0.38 /testbed/sympy/core/function.py(411):         if n not in cls.nargs:
0.38 /testbed/sympy/core/function.py(216):         from sympy.sets.sets import FiniteSet
0.38 /testbed/sympy/core/function.py(219):         return FiniteSet(*self._nargs) if self._nargs else S.Naturals0
0.38 /testbed/sympy/core/function.py(426):         evaluate = options.get('evaluate', global_evaluate[0])
0.38 /testbed/sympy/core/function.py(427):         result = super(Function, cls).__new__(cls, *args, **options)
0.38 /testbed/sympy/core/function.py(237):         from sympy.sets.fancysets import Naturals0
0.38 /testbed/sympy/core/function.py(238):         from sympy.sets.sets import FiniteSet
0.38 /testbed/sympy/core/function.py(240):         args = list(map(sympify, args))
0.38 /testbed/sympy/core/function.py(241):         evaluate = options.pop('evaluate', global_evaluate[0])
0.38 /testbed/sympy/core/function.py(244):         options.pop('nargs', None)
0.38 /testbed/sympy/core/function.py(246):         if options:
0.38 /testbed/sympy/core/function.py(249):         if evaluate:
0.38 /testbed/sympy/core/function.py(250):             evaluated = cls.eval(*args)
0.38 /testbed/sympy/core/function.py(304):         return
0.38 /testbed/sympy/core/function.py(251):             if evaluated is not None:
0.38 /testbed/sympy/core/function.py(254):         obj = super(Application, cls).__new__(cls, *args, **options)
0.38 /testbed/sympy/core/function.py(257):         try:
0.38 /testbed/sympy/core/function.py(263):             if is_sequence(obj.nargs):
0.38 /testbed/sympy/core/function.py(269):         except AttributeError:
0.38 /testbed/sympy/core/function.py(273):             nargs = obj._nargs  # note the underscore here
0.38 /testbed/sympy/core/function.py(275):         obj.nargs = FiniteSet(*nargs) if nargs else Naturals0()
0.38 /testbed/sympy/core/function.py(276):         return obj
0.38 /testbed/sympy/core/function.py(428):         if not evaluate or not isinstance(result, cls):
0.38 /testbed/sympy/core/function.py(431):         pr = max(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(431):         pr = max(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(448):         from sympy.core.symbol import Wild
0.38 /testbed/sympy/core/function.py(449):         if arg.is_Float:
0.38 /testbed/sympy/core/function.py(451):         if not arg.is_Add:
0.38 /testbed/sympy/core/function.py(452):             return -1
0.38 /testbed/sympy/core/function.py(431):         pr = max(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(432):         pr2 = min(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(432):         pr2 = min(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(448):         from sympy.core.symbol import Wild
0.38 /testbed/sympy/core/function.py(449):         if arg.is_Float:
0.38 /testbed/sympy/core/function.py(451):         if not arg.is_Add:
0.38 /testbed/sympy/core/function.py(452):             return -1
0.38 /testbed/sympy/core/function.py(432):         pr2 = min(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(433):         if pr2 > 0:
0.38 /testbed/sympy/core/function.py(435):         return result
0.38 /testbed/sympy/core/function.py(763):         return obj
0.38 /testbed/sympy/core/function.py(761):         args = list(map(sympify, args))
0.38 /testbed/sympy/core/function.py(762):         obj = super(AppliedUndef, cls).__new__(cls, *args, **options)
0.38 /testbed/sympy/core/function.py(407):         if cls is Function:
0.38 /testbed/sympy/core/function.py(410):         n = len(args)
0.38 /testbed/sympy/core/function.py(411):         if n not in cls.nargs:
0.38 /testbed/sympy/core/function.py(216):         from sympy.sets.sets import FiniteSet
0.38 /testbed/sympy/core/function.py(219):         return FiniteSet(*self._nargs) if self._nargs else S.Naturals0
0.38 /testbed/sympy/core/function.py(426):         evaluate = options.get('evaluate', global_evaluate[0])
0.38 /testbed/sympy/core/function.py(427):         result = super(Function, cls).__new__(cls, *args, **options)
0.38 /testbed/sympy/core/function.py(237):         from sympy.sets.fancysets import Naturals0
0.38 /testbed/sympy/core/function.py(238):         from sympy.sets.sets import FiniteSet
0.38 /testbed/sympy/core/function.py(240):         args = list(map(sympify, args))
0.38 /testbed/sympy/core/function.py(241):         evaluate = options.pop('evaluate', global_evaluate[0])
0.38 /testbed/sympy/core/function.py(244):         options.pop('nargs', None)
0.38 /testbed/sympy/core/function.py(246):         if options:
0.38 /testbed/sympy/core/function.py(249):         if evaluate:
0.38 /testbed/sympy/core/function.py(250):             evaluated = cls.eval(*args)
0.38 /testbed/sympy/core/function.py(304):         return
0.38 /testbed/sympy/core/function.py(251):             if evaluated is not None:
0.38 /testbed/sympy/core/function.py(254):         obj = super(Application, cls).__new__(cls, *args, **options)
0.38 /testbed/sympy/core/function.py(257):         try:
0.38 /testbed/sympy/core/function.py(263):             if is_sequence(obj.nargs):
0.38 /testbed/sympy/core/function.py(269):         except AttributeError:
0.38 /testbed/sympy/core/function.py(273):             nargs = obj._nargs  # note the underscore here
0.38 /testbed/sympy/core/function.py(275):         obj.nargs = FiniteSet(*nargs) if nargs else Naturals0()
0.38 /testbed/sympy/core/function.py(276):         return obj
0.38 /testbed/sympy/core/function.py(428):         if not evaluate or not isinstance(result, cls):
0.38 /testbed/sympy/core/function.py(431):         pr = max(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(431):         pr = max(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(448):         from sympy.core.symbol import Wild
0.38 /testbed/sympy/core/function.py(449):         if arg.is_Float:
0.38 /testbed/sympy/core/function.py(451):         if not arg.is_Add:
0.38 /testbed/sympy/core/function.py(452):             return -1
0.38 /testbed/sympy/core/function.py(431):         pr = max(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(432):         pr2 = min(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(432):         pr2 = min(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(448):         from sympy.core.symbol import Wild
0.38 /testbed/sympy/core/function.py(449):         if arg.is_Float:
0.38 /testbed/sympy/core/function.py(451):         if not arg.is_Add:
0.38 /testbed/sympy/core/function.py(452):             return -1
0.38 /testbed/sympy/core/function.py(432):         pr2 = min(cls._should_evalf(a) for a in result.args)
0.38 /testbed/sympy/core/function.py(433):         if pr2 > 0:
0.38 /testbed/sympy/core/function.py(435):         return result
0.38 /testbed/sympy/core/function.py(763):         return obj
0.38 /testbed/sympy/core/function.py(308):         return self.__class__
0.38 /testbed/sympy/core/function.py(502):         fname = self.func.__name__
0.38 /testbed/sympy/core/function.py(308):         return self.__class__
0.38 /testbed/sympy/core/function.py(503):         try:
0.38 /testbed/sympy/core/function.py(504):             if not hasattr(mpmath, fname):
0.38 /testbed/sympy/core/function.py(505):                 from sympy.utilities.lambdify import MPMATH_TRANSLATIONS
0.38 /testbed/sympy/core/function.py(506):                 fname = MPMATH_TRANSLATIONS[fname]
0.38 /testbed/sympy/core/function.py(508):         except (AttributeError, KeyError):
0.38 /testbed/sympy/core/function.py(509):             try:
0.38 /testbed/sympy/core/function.py(510):                 return Float(self._imp_(*self.args), prec)
0.38 /testbed/sympy/core/function.py(82):     if a.is_Mul:
0.38 /testbed/sympy/core/function.py(84):     return a.is_Number and a.is_negative
0.38 /testbed/sympy/core/function.py(495):         if all(getattr(t, 'is_commutative') for t in self.args):
0.38 /testbed/sympy/core/function.py(495):         if all(getattr(t, 'is_commutative') for t in self.args):
0.38 /testbed/sympy/core/function.py(495):         if all(getattr(t, 'is_commutative') for t in self.args):
0.38 /testbed/sympy/core/function.py(496):             return True
0.38 /testbed/sympy/core/function.py(308):         return self.__class__
0.38 /testbed/sympy/core/function.py(511):             except (AttributeError, TypeError, ValueError):
0.38 /testbed/sympy/core/function.py(512):                 return
0.38 /testbed/sympy/core/function.py(502):         fname = self.func.__name__
0.38 /testbed/sympy/core/function.py(308):         return self.__class__
0.38 /testbed/sympy/core/function.py(503):         try:
0.38 /testbed/sympy/core/function.py(504):             if not hasattr(mpmath, fname):
0.38 /testbed/sympy/core/function.py(505):                 from sympy.utilities.lambdify import MPMATH_TRANSLATIONS
0.38 /testbed/sympy/core/function.py(506):                 fname = MPMATH_TRANSLATIONS[fname]
0.38 /testbed/sympy/core/function.py(508):         except (AttributeError, KeyError):
0.38 /testbed/sympy/core/function.py(509):             try:
0.38 /testbed/sympy/core/function.py(510):                 return Float(self._imp_(*self.args), prec)
0.38 /testbed/sympy/core/function.py(82):     if a.is_Mul:
0.38 /testbed/sympy/core/function.py(84):     return a.is_Number and a.is_negative
0.38 /testbed/sympy/core/function.py(495):         if all(getattr(t, 'is_commutative') for t in self.args):
0.38 /testbed/sympy/core/function.py(495):         if all(getattr(t, 'is_commutative') for t in self.args):
0.38 /testbed/sympy/core/function.py(495):         if all(getattr(t, 'is_commutative') for t in self.args):
0.38 /testbed/sympy/core/function.py(496):             return True
0.38 /testbed/sympy/core/function.py(308):         return self.__class__
0.38 /testbed/sympy/core/function.py(511):             except (AttributeError, TypeError, ValueError):
0.38 /testbed/sympy/core/function.py(512):                 return
F                                              [FAIL]


________________________________________________________________________________
 sympy/polys/tests/test_coverup_sympy__sympy-12096.py:test_evalf_composition_bug 
  File "/testbed/sympy/polys/tests/test_coverup_sympy__sympy-12096.py", line 16, in test_evalf_composition_bug
    assert result == 16.0
AssertionError

============= tests finished: 0 passed, 1 failed, in 0.01 seconds ==============
DO *NOT* COMMIT!
/testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.79 /testbed/sympy/core/function.py(147):         nargs = kwargs.pop('nargs', cls.__dict__.get('nargs', _getnargs(cls)))
0.79 /testbed/sympy/core/function.py(97):     if hasattr(cls, 'eval'):
0.79 /testbed/sympy/core/function.py(98):         if sys.version_info < (3, ):
0.79 /testbed/sympy/core/function.py(101):             return _getnargs_new(cls.eval)
0.79 /testbed/sympy/core/function.py(121):     parameters = inspect.signature(eval_).parameters.items()
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(122):     if [p for n,p in parameters if p.kind == p.VAR_POSITIONAL]:
0.79 /testbed/sympy/core/function.py(123):         return None
0.79 /testbed/sympy/core/function.py(148):         super(FunctionClass, cls).__init__(args, kwargs)
0.79 /testbed/sympy/core/function.py(151):         if is_sequence(nargs):
0.79 /testbed/sympy/core/function.py(161):         elif nargs is not None:
0.79 /testbed/sympy/core/function.py(163):         cls._nargs = nargs
0.82 /testbed/sympy/core/function.py(1513):         from sympy.sets.sets import FiniteSet
0.82 /testbed/sympy/core/function.py(1514):         v = list(variables) if iterable(variables) else [variables]
0.82 /testbed/sympy/core/function.py(1515):         for i in v:
0.82 /testbed/sympy/core/function.py(1516):             if not getattr(i, 'is_Symbol', False):
0.82 /testbed/sympy/core/function.py(1515):         for i in v:
0.82 /testbed/sympy/core/function.py(1516):             if not getattr(i, 'is_Symbol', False):
0.82 /testbed/sympy/core/function.py(1515):         for i in v:
0.82 /testbed/sympy/core/function.py(1518):         if len(v) == 1 and v[0] == expr:
0.82 /testbed/sympy/core/function.py(1521):         obj = Expr.__new__(cls, Tuple(*v), sympify(expr))
0.82 /testbed/sympy/core/function.py(1522):         obj.nargs = FiniteSet(len(v))
0.82 /testbed/sympy/core/function.py(1523):         return obj
0.82 /testbed/sympy/core/function.py(1533):         return self._args[1]
0.82 /testbed/sympy/core/function.py(1533):         return self._args[1]
+ cat coverage.cover
{"/testbed/sympy/core/function.py": {"32": 1, "34": 1, "35": 1, "36": 1, "37": 1, "38": 1, "39": 1, "40": 1, "41": 1, "42": 1, "43": 1, "44": 1, "45": 1, "47": 1, "48": 1, "49": 1, "50": 1, "51": 1, "52": 1, "53": 1, "55": 1, "57": 1, "58": 1, "60": 1, "61": 1, "63": 1, "87": 2, "91": 2, "96": 1, "105": 1, "120": 1, "135": 2, "225": 2, "317": 2, "754": 2, "775": 2, "789": 1, "792": 2, "866": 2, "1481": 2, "1586": 2, "1773": 1, "1842": 1, "2173": 1, "2190": 1, "2208": 1, "2226": 1, "2245": 1, "2263": 1, "2281": 1, "2304": 1, "2369": 1, "2387": 1, "2590": 1, "2650": 1, "82": 2, "83": 0, "84": 2, "88": 1, "92": 1, "93": 0, "94": 0, "97": 206, "98": 206, "99": 0, "101": 206, "103": 0, "106": 0, "107": 0, "108": 0, "110": 0, "111": 0, "115": 0, "116": 0, "118": 0, "121": 206, "122": 700, "123": 63, "125": 511, "126": 368, "127": 368, "128": 143, "129": 129, "130": 14, "142": 1, "144": 1, "165": 1, "166": 1, "181": 1, "182": 1, "221": 1, "147": 206, "148": 206, "151": 206, "152": 14, "153": 0, "159": 0, "160": 14, "161": 192, "162": 129, "163": 206, "173": 0, "174": 0, "175": 0, "176": 0, "179": 0, "216": 2, "219": 2, "222": 0, "233": 1, "235": 1, "236": 1, "278": 1, "279": 1, "306": 1, "307": 1, "310": 1, "237": 2, "238": 2, "240": 2, "241": 2, "244": 2, "246": 2, "247": 0, "249": 2, "250": 2, "251": 2, "252": 0, "254": 2, "257": 2, "263": 2, "264": 0, "265": 0, "266": 0, "268": 0, "269": 2, "273": 2, "275": 2, "276": 2, "304": 2, "308": 5, "311": 0, "312": 0, "313": 0, "314": 0, "388": 1, "389": 1, "404": 1, "405": 1, "437": 1, "438": 1, "462": 1, "463": 1, "490": 1, "491": 1, "500": 1, "549": 1, "565": 1, "568": 1, "571": 1, "577": 1, "589": 1, "694": 1, "718": 1, "746": 1, "402": 0, "407": 3, "408": 1, "410": 2, "411": 2, "417": 0, "419": 0, "420": 0, "421": 0, "422": 0, "423": 0, "424": 0, "426": 2, "427": 2, "428": 2, "429": 0, "431": 6, "432": 6, "433": 2, "434": 0, "435": 2, "448": 4, "449": 4, "450": 0, "451": 4, "452": 4, "454": 0, "455": 0, "456": 0, "457": 0, "458": 0, "459": 0, "460": 0, "464": 0, "466": 0, "467": 0, "468": 0, "469": 0, "470": 0, "471": 0, "472": 0, "473": 0, "474": 0, "475": 0, "476": 0, "477": 0, "478": 0, "479": 0, "465": 0, "481": 0, "483": 0, "484": 0, "485": 0, "486": 0, "488": 0, "495": 6, "496": 2, "498": 0, "502": 2, "503": 2, "504": 2, "505": 2, "506": 2, "507": 0, "508": 2, "509": 2, "510": 2, "511": 2, "512": 2, "519": 0, "520": 0, "521": 0, "539": 0, "540": 0, "541": 0, "542": 0, "544": 0, "545": 0, "547": 0, "522": 0, "530": 0, "531": 0, "532": 0, "533": 0, "534": 0, "535": 0, "536": 0, "538": 0, "551": 0, "552": 0, "553": 0, "554": 0, "555": 0, "556": 0, "557": 0, "558": 0, "559": 0, "560": 0, "561": 0, "562": 0, "563": 0, "566": 0, "569": 0, "575": 0, "584": 0, "585": 0, "587": 0, "611": 0, "612": 0, "613": 0, "614": 0, "615": 0, "616": 0, "619": 0, "620": 0, "621": 0, "622": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "634": 0, "635": 0, "636": 0, "637": 0, "638": 0, "639": 0, "641": 0, "642": 0, "643": 0, "644": 0, "645": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "651": 0, "652": 0, "653": 0, "654": 0, "655": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "665": 0, "666": 0, "667": 0, "668": 0, "669": 0, "670": 0, "672": 0, "673": 0, "674": 0, "675": 0, "676": 0, "677": 0, "678": 0, "679": 0, "680": 0, "681": 0, "682": 0, "684": 0, "685": 0, "686": 0, "687": 0, "688": 0, "689": 0, "690": 0, "691": 0, "692": 0, "698": 0, "699": 0, "701": 0, "702": 0, "703": 0, "704": 0, "706": 0, "707": 0, "709": 0, "711": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "724": 0, "725": 0, "726": 0, "727": 0, "741": 0, "742": 0, "744": 0, "747": 0, "748": 0, "749": 0, "750": 0, "751": 0, "760": 1, "765": 1, "768": 1, "761": 2, "762": 2, "763": 2, "766": 0, "769": 0, "770": 0, "771": 0, "772": 0, "773": 0, "779": 1, "786": 1, "780": 3, "781": 3, "782": 3, "783": 3, "784": 3, "787": 0, "790": 0, "840": 1, "842": 1, "855": 1, "843": 0, "844": 0, "845": 0, "846": 0, "848": 0, "849": 0, "850": 0, "851": 0, "852": 0, "853": 0, "856": 0, "857": 0, "858": 0, "859": 0, "861": 0, "862": 0, "863": 0, "1038": 1, "1040": 1, "1041": 1, "1060": 1, "1225": 1, "1226": 1, "1289": 1, "1292": 1, "1312": 1, "1319": 1, "1320": 1, "1341": 1, "1342": 1, "1345": 1, "1346": 1, "1349": 1, "1350": 1, "1353": 1, "1375": 1, "1380": 1, "1389": 1, "1398": 1, "1403": 1, "1055": 0, "1056": 0, "1058": 0, "1062": 0, "1066": 0, "1067": 0, "1068": 0, "1069": 0, "1070": 0, "1071": 0, "1072": 0, "1073": 0, "1076": 0, "1078": 0, "1081": 0, "1085": 0, "1086": 0, "1087": 0, "1093": 0, "1094": 0, "1095": 0, "1096": 0, "1097": 0, "1098": 0, "1099": 0, "1102": 0, "1103": 0, "1104": 0, "1105": 0, "1106": 0, "1107": 0, "1109": 0, "1110": 0, "1111": 0, "1112": 0, "1113": 0, "1114": 0, "1116": 0, "1117": 0, "1119": 0, "1120": 0, "1124": 0, "1125": 0, "1129": 0, "1135": 0, "1136": 0, "1137": 0, "1138": 0, "1143": 0, "1148": 0, "1149": 0, "1150": 0, "1154": 0, "1156": 0, "1160": 0, "1161": 0, "1167": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1178": 0, "1179": 0, "1181": 0, "1182": 0, "1183": 0, "1184": 0, "1185": 0, "1186": 0, "1187": 0, "1188": 0, "1189": 0, "1190": 0, "1191": 0, "1194": 0, "1196": 0, "1197": 0, "1199": 0, "1200": 0, "1201": 0, "1202": 0, "1203": 0, "1204": 0, "1206": 0, "1208": 0, "1209": 0, "1210": 0, "1214": 0, "1215": 0, "1216": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1265": 0, "1266": 0, "1267": 0, "1268": 0, "1269": 0, "1270": 0, "1271": 0, "1272": 0, "1273": 0, "1274": 0, "1276": 0, "1277": 0, "1278": 0, "1279": 0, "1280": 0, "1281": 0, "1282": 0, "1283": 0, "1284": 0, "1285": 0, "1286": 0, "1287": 0, "1290": 0, "1295": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1300": 0, "1306": 0, "1310": 0, "1313": 0, "1314": 0, "1315": 0, "1316": 0, "1317": 0, "1327": 0, "1328": 0, "1329": 0, "1330": 0, "1331": 0, "1333": 0, "1337": 0, "1338": 0, "1339": 0, "1334": 0, "1335": 0, "1336": 0, "1343": 0, "1347": 0, "1351": 0, "1354": 0, "1356": 0, "1359": 0, "1361": 0, "1362": 0, "1363": 0, "1364": 0, "1367": 0, "1370": 0, "1371": 0, "1373": 0, "1368": 0, "1376": 0, "1377": 0, "1378": 0, "1381": 0, "1382": 0, "1383": 0, "1384": 0, "1385": 0, "1386": 0, "1387": 0, "1390": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1396": 0, "1399": 0, "1400": 0, "1401": 0, "1477": 0, "1478": 0, "1510": 1, "1512": 1, "1525": 1, "1526": 1, "1530": 1, "1531": 1, "1535": 1, "1536": 1, "1539": 1, "1557": 1, "1568": 1, "1571": 1, "1574": 1, "1577": 1, "1578": 1, "1513": 1, "1514": 1, "1515": 3, "1516": 2, "1517": 0, "1518": 1, "1519": 0, "1521": 1, "1522": 1, "1523": 1, "1528": 0, "1533": 2, "1537": 0, "1540": 0, "1541": 0, "1548": 0, "1550": 0, "1551": 0, "1552": 0, "1553": 0, "1554": 0, "1555": 0, "1558": 0, "1559": 0, "1560": 0, "1561": 0, "1563": 0, "1564": 0, "1565": 0, "1566": 0, "1569": 0, "1572": 0, "1575": 0, "1580": 0, "1581": 0, "1583": 0, "1629": 1, "1681": 1, "1684": 1, "1687": 1, "1690": 1, "1692": 1, "1693": 1, "1697": 1, "1698": 1, "1702": 1, "1703": 1, "1707": 1, "1708": 1, "1712": 1, "1717": 1, "1722": 1, "1725": 1, "1728": 1, "1731": 1, "1738": 1, "1746": 1, "1760": 1, "1630": 0, "1631": 0, "1632": 0, "1633": 0, "1635": 0, "1636": 0, "1637": 0, "1638": 0, "1640": 0, "1642": 0, "1643": 0, "1646": 0, "1650": 0, "1651": 0, "1652": 0, "1653": 0, "1656": 0, "1660": 0, "1661": 0, "1662": 0, "1669": 0, "1672": 0, "1673": 0, "1674": 0, "1675": 0, "1677": 0, "1678": 0, "1679": 0, "1654": 0, "1655": 0, "1657": 0, "1658": 0, "1670": 0, "1671": 0, "1682": 0, "1685": 0, "1688": 0, "1695": 0, "1700": 0, "1705": 0, "1709": 0, "1710": 0, "1713": 0, "1714": 0, "1715": 0, "1718": 0, "1719": 0, "1720": 0, "1723": 0, "1726": 0, "1729": 0, "1732": 0, "1733": 0, "1734": 0, "1735": 0, "1736": 0, "1739": 0, "1740": 0, "1741": 0, "1742": 0, "1743": 0, "1744": 0, "1747": 0, "1749": 0, "1750": 0, "1751": 0, "1752": 0, "1753": 0, "1754": 0, "1755": 0, "1756": 0, "1757": 0, "1758": 0, "1761": 0, "1762": 0, "1763": 0, "1764": 0, "1765": 0, "1768": 0, "1770": 0, "1834": 0, "1835": 0, "1836": 0, "1837": 0, "1838": 0, "1839": 0, "2163": 0, "2164": 0, "2165": 0, "2166": 0, "2167": 0, "2168": 0, "2169": 0, "2177": 0, "2178": 0, "2179": 0, "2180": 0, "2181": 0, "2182": 0, "2183": 0, "2184": 0, "2204": 0, "2205": 0, "2222": 0, "2223": 0, "2240": 0, "2241": 0, "2242": 0, "2259": 0, "2260": 0, "2277": 0, "2278": 0, "2300": 0, "2301": 0, "2364": 0, "2365": 0, "2366": 0, "2383": 0, "2384": 0, "2455": 0, "2456": 0, "2457": 0, "2459": 0, "2460": 0, "2462": 0, "2463": 0, "2464": 0, "2465": 0, "2466": 0, "2467": 0, "2468": 0, "2469": 0, "2472": 0, "2473": 0, "2475": 0, "2477": 0, "2478": 0, "2479": 0, "2480": 0, "2481": 0, "2482": 0, "2483": 0, "2484": 0, "2485": 0, "2486": 0, "2487": 0, "2489": 0, "2490": 0, "2491": 0, "2492": 0, "2493": 0, "2494": 0, "2495": 0, "2496": 0, "2497": 0, "2498": 0, "2499": 0, "2500": 0, "2501": 0, "2502": 0, "2503": 0, "2504": 0, "2505": 0, "2506": 0, "2507": 0, "2508": 0, "2509": 0, "2510": 0, "2511": 0, "2513": 0, "2514": 0, "2515": 0, "2516": 0, "2517": 0, "2518": 0, "2519": 0, "2520": 0, "2521": 0, "2522": 0, "2523": 0, "2524": 0, "2525": 0, "2526": 0, "2527": 0, "2528": 0, "2529": 0, "2531": 0, "2533": 0, "2534": 0, "2536": 0, "2537": 0, "2538": 0, "2540": 0, "2541": 0, "2542": 0, "2543": 0, "2544": 0, "2545": 0, "2546": 0, "2547": 0, "2548": 0, "2549": 0, "2550": 0, "2551": 0, "2552": 0, "2554": 0, "2555": 0, "2557": 0, "2558": 0, "2559": 0, "2560": 0, "2563": 0, "2564": 0, "2566": 0, "2567": 0, "2568": 0, "2569": 0, "2571": 0, "2572": 0, "2574": 0, "2575": 0, "2576": 0, "2577": 0, "2579": 0, "2581": 0, "2582": 0, "2584": 0, "2585": 0, "2587": 0, "2606": 0, "2607": 0, "2609": 0, "2610": 0, "2611": 0, "2612": 0, "2613": 0, "2614": 0, "2616": 0, "2617": 0, "2618": 0, "2620": 0, "2621": 0, "2622": 0, "2625": 0, "2630": 0, "2632": 0, "2633": 0, "2634": 0, "2635": 0, "2636": 0, "2637": 0, "2641": 0, "2642": 0, "2643": 0, "2645": 0, "2646": 0, "2647": 0}}
{"/testbed/sympy/core/function.py": {"32": 1, "34": 1, "35": 1, "36": 1, "37": 1, "38": 1, "39": 1, "40": 1, "41": 1, "42": 1, "43": 1, "44": 1, "45": 1, "47": 1, "48": 1, "49": 1, "50": 1, "51": 1, "52": 1, "53": 1, "55": 1, "57": 1, "58": 1, "60": 1, "61": 1, "63": 1, "87": 2, "91": 2, "96": 1, "105": 1, "120": 1, "135": 2, "225": 2, "317": 2, "754": 2, "775": 2, "789": 1, "792": 2, "866": 2, "1481": 2, "1586": 2, "1773": 1, "1842": 1, "2173": 1, "2190": 1, "2208": 1, "2226": 1, "2245": 1, "2263": 1, "2281": 1, "2304": 1, "2369": 1, "2387": 1, "2590": 1, "2650": 1, "82": 0, "83": 0, "84": 0, "88": 1, "92": 1, "93": 0, "94": 0, "97": 204, "98": 204, "99": 0, "101": 204, "103": 0, "106": 0, "107": 0, "108": 0, "110": 0, "111": 0, "115": 0, "116": 0, "118": 0, "121": 204, "122": 694, "123": 61, "125": 511, "126": 368, "127": 368, "128": 143, "129": 129, "130": 14, "142": 1, "144": 1, "165": 1, "166": 1, "181": 1, "182": 1, "221": 1, "147": 204, "148": 204, "151": 204, "152": 14, "153": 0, "159": 0, "160": 14, "161": 190, "162": 129, "163": 204, "173": 0, "174": 0, "175": 0, "176": 0, "179": 0, "216": 0, "219": 0, "222": 0, "233": 1, "235": 1, "236": 1, "278": 1, "279": 1, "306": 1, "307": 1, "310": 1, "237": 0, "238": 0, "240": 0, "241": 0, "244": 0, "246": 0, "247": 0, "249": 0, "250": 0, "251": 0, "252": 0, "254": 0, "257": 0, "263": 0, "264": 0, "265": 0, "266": 0, "268": 0, "269": 0, "273": 0, "275": 0, "276": 0, "304": 0, "308": 0, "311": 0, "312": 0, "313": 0, "314": 0, "388": 1, "389": 1, "404": 1, "405": 1, "437": 1, "438": 1, "462": 1, "463": 1, "490": 1, "491": 1, "500": 1, "549": 1, "565": 1, "568": 1, "571": 1, "577": 1, "589": 1, "694": 1, "718": 1, "746": 1, "402": 0, "407": 1, "408": 1, "410": 0, "411": 0, "417": 0, "419": 0, "420": 0, "421": 0, "422": 0, "423": 0, "424": 0, "426": 0, "427": 0, "428": 0, "429": 0, "431": 0, "432": 0, "433": 0, "434": 0, "435": 0, "448": 0, "449": 0, "450": 0, "451": 0, "452": 0, "454": 0, "455": 0, "456": 0, "457": 0, "458": 0, "459": 0, "460": 0, "464": 0, "466": 0, "467": 0, "468": 0, "469": 0, "470": 0, "471": 0, "472": 0, "473": 0, "474": 0, "475": 0, "476": 0, "477": 0, "478": 0, "479": 0, "465": 0, "481": 0, "483": 0, "484": 0, "485": 0, "486": 0, "488": 0, "495": 0, "496": 0, "498": 0, "502": 0, "503": 0, "504": 0, "505": 0, "506": 0, "507": 0, "508": 0, "509": 0, "510": 0, "511": 0, "512": 0, "519": 0, "520": 0, "521": 0, "539": 0, "540": 0, "541": 0, "542": 0, "544": 0, "545": 0, "547": 0, "522": 0, "530": 0, "531": 0, "532": 0, "533": 0, "534": 0, "535": 0, "536": 0, "538": 0, "551": 0, "552": 0, "553": 0, "554": 0, "555": 0, "556": 0, "557": 0, "558": 0, "559": 0, "560": 0, "561": 0, "562": 0, "563": 0, "566": 0, "569": 0, "575": 0, "584": 0, "585": 0, "587": 0, "611": 0, "612": 0, "613": 0, "614": 0, "615": 0, "616": 0, "619": 0, "620": 0, "621": 0, "622": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "634": 0, "635": 0, "636": 0, "637": 0, "638": 0, "639": 0, "641": 0, "642": 0, "643": 0, "644": 0, "645": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "651": 0, "652": 0, "653": 0, "654": 0, "655": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "665": 0, "666": 0, "667": 0, "668": 0, "669": 0, "670": 0, "672": 0, "673": 0, "674": 0, "675": 0, "676": 0, "677": 0, "678": 0, "679": 0, "680": 0, "681": 0, "682": 0, "684": 0, "685": 0, "686": 0, "687": 0, "688": 0, "689": 0, "690": 0, "691": 0, "692": 0, "698": 0, "699": 0, "701": 0, "702": 0, "703": 0, "704": 0, "706": 0, "707": 0, "709": 0, "711": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "724": 0, "725": 0, "726": 0, "727": 0, "741": 0, "742": 0, "744": 0, "747": 0, "748": 0, "749": 0, "750": 0, "751": 0, "760": 1, "765": 1, "768": 1, "761": 0, "762": 0, "763": 0, "766": 0, "769": 0, "770": 0, "771": 0, "772": 0, "773": 0, "779": 1, "786": 1, "780": 1, "781": 1, "782": 1, "783": 1, "784": 1, "787": 0, "790": 0, "840": 1, "842": 1, "855": 1, "843": 0, "844": 0, "845": 0, "846": 0, "848": 0, "849": 0, "850": 0, "851": 0, "852": 0, "853": 0, "856": 0, "857": 0, "858": 0, "859": 0, "861": 0, "862": 0, "863": 0, "1038": 1, "1040": 1, "1041": 1, "1060": 1, "1225": 1, "1226": 1, "1289": 1, "1292": 1, "1312": 1, "1319": 1, "1320": 1, "1341": 1, "1342": 1, "1345": 1, "1346": 1, "1349": 1, "1350": 1, "1353": 1, "1375": 1, "1380": 1, "1389": 1, "1398": 1, "1403": 1, "1055": 0, "1056": 0, "1058": 0, "1062": 0, "1066": 0, "1067": 0, "1068": 0, "1069": 0, "1070": 0, "1071": 0, "1072": 0, "1073": 0, "1076": 0, "1078": 0, "1081": 0, "1085": 0, "1086": 0, "1087": 0, "1093": 0, "1094": 0, "1095": 0, "1096": 0, "1097": 0, "1098": 0, "1099": 0, "1102": 0, "1103": 0, "1104": 0, "1105": 0, "1106": 0, "1107": 0, "1109": 0, "1110": 0, "1111": 0, "1112": 0, "1113": 0, "1114": 0, "1116": 0, "1117": 0, "1119": 0, "1120": 0, "1124": 0, "1125": 0, "1129": 0, "1135": 0, "1136": 0, "1137": 0, "1138": 0, "1143": 0, "1148": 0, "1149": 0, "1150": 0, "1154": 0, "1156": 0, "1160": 0, "1161": 0, "1167": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1178": 0, "1179": 0, "1181": 0, "1182": 0, "1183": 0, "1184": 0, "1185": 0, "1186": 0, "1187": 0, "1188": 0, "1189": 0, "1190": 0, "1191": 0, "1194": 0, "1196": 0, "1197": 0, "1199": 0, "1200": 0, "1201": 0, "1202": 0, "1203": 0, "1204": 0, "1206": 0, "1208": 0, "1209": 0, "1210": 0, "1214": 0, "1215": 0, "1216": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1265": 0, "1266": 0, "1267": 0, "1268": 0, "1269": 0, "1270": 0, "1271": 0, "1272": 0, "1273": 0, "1274": 0, "1276": 0, "1277": 0, "1278": 0, "1279": 0, "1280": 0, "1281": 0, "1282": 0, "1283": 0, "1284": 0, "1285": 0, "1286": 0, "1287": 0, "1290": 0, "1295": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1300": 0, "1306": 0, "1310": 0, "1313": 0, "1314": 0, "1315": 0, "1316": 0, "1317": 0, "1327": 0, "1328": 0, "1329": 0, "1330": 0, "1331": 0, "1333": 0, "1337": 0, "1338": 0, "1339": 0, "1334": 0, "1335": 0, "1336": 0, "1343": 0, "1347": 0, "1351": 0, "1354": 0, "1356": 0, "1359": 0, "1361": 0, "1362": 0, "1363": 0, "1364": 0, "1367": 0, "1370": 0, "1371": 0, "1373": 0, "1368": 0, "1376": 0, "1377": 0, "1378": 0, "1381": 0, "1382": 0, "1383": 0, "1384": 0, "1385": 0, "1386": 0, "1387": 0, "1390": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1396": 0, "1399": 0, "1400": 0, "1401": 0, "1477": 0, "1478": 0, "1510": 1, "1512": 1, "1525": 1, "1526": 1, "1530": 1, "1531": 1, "1535": 1, "1536": 1, "1539": 1, "1557": 1, "1568": 1, "1571": 1, "1574": 1, "1577": 1, "1578": 1, "1513": 1, "1514": 1, "1515": 3, "1516": 2, "1517": 0, "1518": 1, "1519": 0, "1521": 1, "1522": 1, "1523": 1, "1528": 0, "1533": 2, "1537": 0, "1540": 0, "1541": 0, "1548": 0, "1550": 0, "1551": 0, "1552": 0, "1553": 0, "1554": 0, "1555": 0, "1558": 0, "1559": 0, "1560": 0, "1561": 0, "1563": 0, "1564": 0, "1565": 0, "1566": 0, "1569": 0, "1572": 0, "1575": 0, "1580": 0, "1581": 0, "1583": 0, "1629": 1, "1681": 1, "1684": 1, "1687": 1, "1690": 1, "1692": 1, "1693": 1, "1697": 1, "1698": 1, "1702": 1, "1703": 1, "1707": 1, "1708": 1, "1712": 1, "1717": 1, "1722": 1, "1725": 1, "1728": 1, "1731": 1, "1738": 1, "1746": 1, "1760": 1, "1630": 0, "1631": 0, "1632": 0, "1633": 0, "1635": 0, "1636": 0, "1637": 0, "1638": 0, "1640": 0, "1642": 0, "1643": 0, "1646": 0, "1650": 0, "1651": 0, "1652": 0, "1653": 0, "1656": 0, "1660": 0, "1661": 0, "1662": 0, "1669": 0, "1672": 0, "1673": 0, "1674": 0, "1675": 0, "1677": 0, "1678": 0, "1679": 0, "1654": 0, "1655": 0, "1657": 0, "1658": 0, "1670": 0, "1671": 0, "1682": 0, "1685": 0, "1688": 0, "1695": 0, "1700": 0, "1705": 0, "1709": 0, "1710": 0, "1713": 0, "1714": 0, "1715": 0, "1718": 0, "1719": 0, "1720": 0, "1723": 0, "1726": 0, "1729": 0, "1732": 0, "1733": 0, "1734": 0, "1735": 0, "1736": 0, "1739": 0, "1740": 0, "1741": 0, "1742": 0, "1743": 0, "1744": 0, "1747": 0, "1749": 0, "1750": 0, "1751": 0, "1752": 0, "1753": 0, "1754": 0, "1755": 0, "1756": 0, "1757": 0, "1758": 0, "1761": 0, "1762": 0, "1763": 0, "1764": 0, "1765": 0, "1768": 0, "1770": 0, "1834": 0, "1835": 0, "1836": 0, "1837": 0, "1838": 0, "1839": 0, "2163": 0, "2164": 0, "2165": 0, "2166": 0, "2167": 0, "2168": 0, "2169": 0, "2177": 0, "2178": 0, "2179": 0, "2180": 0, "2181": 0, "2182": 0, "2183": 0, "2184": 0, "2204": 0, "2205": 0, "2222": 0, "2223": 0, "2240": 0, "2241": 0, "2242": 0, "2259": 0, "2260": 0, "2277": 0, "2278": 0, "2300": 0, "2301": 0, "2364": 0, "2365": 0, "2366": 0, "2383": 0, "2384": 0, "2455": 0, "2456": 0, "2457": 0, "2459": 0, "2460": 0, "2462": 0, "2463": 0, "2464": 0, "2465": 0, "2466": 0, "2467": 0, "2468": 0, "2469": 0, "2472": 0, "2473": 0, "2475": 0, "2477": 0, "2478": 0, "2479": 0, "2480": 0, "2481": 0, "2482": 0, "2483": 0, "2484": 0, "2485": 0, "2486": 0, "2487": 0, "2489": 0, "2490": 0, "2491": 0, "2492": 0, "2493": 0, "2494": 0, "2495": 0, "2496": 0, "2497": 0, "2498": 0, "2499": 0, "2500": 0, "2501": 0, "2502": 0, "2503": 0, "2504": 0, "2505": 0, "2506": 0, "2507": 0, "2508": 0, "2509": 0, "2510": 0, "2511": 0, "2513": 0, "2514": 0, "2515": 0, "2516": 0, "2517": 0, "2518": 0, "2519": 0, "2520": 0, "2521": 0, "2522": 0, "2523": 0, "2524": 0, "2525": 0, "2526": 0, "2527": 0, "2528": 0, "2529": 0, "2531": 0, "2533": 0, "2534": 0, "2536": 0, "2537": 0, "2538": 0, "2540": 0, "2541": 0, "2542": 0, "2543": 0, "2544": 0, "2545": 0, "2546": 0, "2547": 0, "2548": 0, "2549": 0, "2550": 0, "2551": 0, "2552": 0, "2554": 0, "2555": 0, "2557": 0, "2558": 0, "2559": 0, "2560": 0, "2563": 0, "2564": 0, "2566": 0, "2567": 0, "2568": 0, "2569": 0, "2571": 0, "2572": 0, "2574": 0, "2575": 0, "2576": 0, "2577": 0, "2579": 0, "2581": 0, "2582": 0, "2584": 0, "2585": 0, "2587": 0, "2606": 0, "2607": 0, "2609": 0, "2610": 0, "2611": 0, "2612": 0, "2613": 0, "2614": 0, "2616": 0, "2617": 0, "2618": 0, "2620": 0, "2621": 0, "2622": 0, "2625": 0, "2630": 0, "2632": 0, "2633": 0, "2634": 0, "2635": 0, "2636": 0, "2637": 0, "2641": 0, "2642": 0, "2643": 0, "2645": 0, "2646": 0, "2647": 0}}
+ git checkout d7c3045115693e887bcd03599b7ca4650ac5f2cb
Note: switching to 'd7c3045115693e887bcd03599b7ca4650ac5f2cb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at d7c3045115 Merge pull request #12105 from asmeurer/S-docs
+ git apply /root/pre_state.patch
error: unrecognized input
