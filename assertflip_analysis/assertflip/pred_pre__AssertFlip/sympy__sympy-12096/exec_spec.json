{"instance_id": "sympy__sympy-12096", "repo": "sympy/sympy", "version": "1.0", "environment_setup_commit": "50b81f9f6be151014501ffac44e5dc6b2416938f", "patch_list": ["diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-12096.py\nnew file mode 100644\nindex e69de29..a3a1afd 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-12096.py\n@@ -0,0 +1,16 @@\n+from sympy.utilities.lambdify import implemented_function\n+from sympy import Symbol\n+\n+def test_evalf_composition_bug():\n+    # Define implemented functions\n+    f = implemented_function('f', lambda x: x ** 2)\n+    g = implemented_function('g', lambda x: 2 * x)\n+    \n+    # Create a symbol for evaluation\n+    x = Symbol('x')\n+    \n+    # Evaluate the composition f(g(2))\n+    result = f(g(2)).evalf()\n+    \n+    # Assert that the result is correctly evaluated\n+    assert result == 16.0\n"], "arch": "x86_64", "base_commit": "d7c3045115693e887bcd03599b7ca4650ac5f2cb", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-12096.py"], "coverage_files": ["sympy/core/function.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/core/function\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-12096.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}