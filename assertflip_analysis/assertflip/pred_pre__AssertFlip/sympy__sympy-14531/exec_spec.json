{"instance_id": "sympy__sympy-14531", "repo": "sympy/sympy", "version": "1.1", "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3", "patch_list": ["diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-14531.py\nnew file mode 100644\nindex e69de29..9957fd2 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-14531.py\n@@ -0,0 +1,13 @@\n+from sympy import Symbol, S, Eq, Limit\n+from sympy.printing.str import sstr\n+\n+def test_sstr_eq_sympy_integers_bug():\n+    x = Symbol('x')\n+    y = S(1)/2\n+    result = sstr(Eq(x, y), sympy_integers=True)\n+    assert result == \"Eq(x, S(1)/2)\"\n+\n+def test_sstr_limit_sympy_integers_bug():\n+    x = Symbol('x')\n+    result = sstr(Limit(x, x, S(1)/2), sympy_integers=True)\n+    assert result == \"Limit(x, x, S(1)/2)\"\n"], "arch": "x86_64", "base_commit": "205da797006360fc629110937e39a19c9561313e", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-14531.py"], "coverage_files": ["sympy/printing/str.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/printing/str\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-14531.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}