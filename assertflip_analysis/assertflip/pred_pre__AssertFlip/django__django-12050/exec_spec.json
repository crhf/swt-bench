{"instance_id": "django__django-12050", "repo": "django/django", "version": "3.1", "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-12050.py\nnew file mode 100644\nindex e69de29..c57e186 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-12050.py\n@@ -0,0 +1,32 @@\n+from django.test import SimpleTestCase\n+from django.db.models.lookups import Lookup\n+\n+class MockField:\n+    def __init__(self):\n+        self.output_field = self\n+\n+    def get_prep_value(self, value):\n+        return value\n+\n+class TestLookup(SimpleTestCase):\n+    def test_resolve_lookup_value_coercion(self):\n+        class MockLookup(Lookup):\n+            lookup_name = 'exact'\n+            prepare_rhs = True\n+\n+            def get_prep_lookup(self):\n+                if isinstance(self.rhs, list):\n+                    # Simulate the bug: coerce list to tuple\n+                    return tuple(self.rhs)\n+                return self.rhs\n+\n+        # Create a mock field and a MockLookup instance with a list as rhs\n+        mock_field = MockField()\n+        input_value = [1, 2, 3]  # Input is a list\n+        mock_lookup = MockLookup(mock_field, input_value)\n+\n+        # Call get_prep_lookup to trigger the bug\n+        prepared_rhs = mock_lookup.get_prep_lookup()\n+\n+        # Assert that the prepared RHS is a list, which is the correct behavior\n+        self.assertIsInstance(prepared_rhs, list)  # Correct behavior: should be a list\n"], "arch": "x86_64", "base_commit": "b93a0e34d9b9b99d41103782b7e7aeabf47517e3", "test_directives": ["test_coverup_django__django-12050"], "coverage_files": ["django/db/models/sql/query.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/sql/query\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-12050", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}