{"instance_id": "sphinx-doc__sphinx-10466", "repo": "sphinx-doc/sphinx", "version": "5.0", "environment_setup_commit": "60775ec4c4ea08509eee4b564cbf90f316021aff", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-10466.py\nnew file mode 100644\nindex e69de29..6ea40ea 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-10466.py\n@@ -0,0 +1,23 @@\n+import pytest\n+from sphinx.builders.gettext import Message\n+\n+def test_message_locations_duplicates():\n+    # Simulate input with duplicate locations\n+    text = \"Sample text\"\n+    locations = [\n+        (\"../../manual/modeling/hair.rst\", 0),\n+        (\"../../manual/modeling/hair.rst\", 0),  # Duplicate\n+        (\"../../manual/modeling/hair.rst\", 0),  # Duplicate\n+        (\"../../manual/physics/dynamic_paint/brush.rst\", 0),\n+        (\"../../manual/physics/dynamic_paint/brush.rst\", 0)  # Duplicate\n+    ]\n+    uuids = [\"uuid1\", \"uuid2\", \"uuid3\", \"uuid4\", \"uuid5\"]\n+\n+    # Create a Message object\n+    message = Message(text, locations, uuids)\n+\n+    # Check for duplicates in the locations list\n+    assert len(message.locations) == len(set(message.locations)), \"BUG: locations list contains duplicates\"\n+\n+    # Cleanup: No state pollution as we are not modifying any global state\n+\n"], "arch": "x86_64", "base_commit": "cab2d93076d0cca7c53fac885f927dde3e2a5fec", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-10466.py"], "coverage_files": ["sphinx/builders/gettext.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/builders/gettext\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-10466.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}