{"instance_id": "astropy__astropy-14995", "repo": "astropy/astropy", "version": "5.2", "environment_setup_commit": "362f6df12abf9bd769d4915fabf955c993ea22cf", "patch_list": ["diff --git a/dev/null b/astropy/tests/test_coverup_astropy__astropy-14995.py\nnew file mode 100644\nindex e69de29..b24fd15 100644\n--- /dev/null\n+++ b/astropy/tests/test_coverup_astropy__astropy-14995.py\n@@ -0,0 +1,20 @@\n+import pytest\n+import numpy as np\n+from astropy.nddata import NDDataRef\n+\n+def test_nddataref_mask_propagation_bug():\n+    # Setup: Create an array and a mask\n+    array = np.array([[0, 1, 0], [1, 0, 1], [0, 1, 0]])\n+    mask = np.array([[0, 1, 64], [8, 0, 1], [2, 1, 0]])\n+\n+    # Create NDDataRef instances, one with a mask and one without\n+    nref_nomask = NDDataRef(array)\n+    nref_mask = NDDataRef(array, mask=mask)\n+\n+    # Test: multiply mask by constant (mask * no mask)\n+    result_mask = nref_mask.multiply(1., handle_mask=np.bitwise_or).mask\n+    assert np.array_equal(result_mask, mask), \"Mask should be propagated correctly when multiplied by a constant.\"\n+\n+    # Test: multiply mask by no mask (mask * no mask)\n+    result_mask = nref_mask.multiply(nref_nomask, handle_mask=np.bitwise_or).mask\n+    assert np.array_equal(result_mask, mask), \"Mask should be propagated correctly when multiplied by an unmasked NDDataRef.\"\n"], "arch": "x86_64", "base_commit": "b16c7d12ccbc7b2d20364b89fb44285bcbfede54", "test_directives": ["astropy/tests/test_coverup_astropy__astropy-14995.py"], "coverage_files": ["astropy/nddata/mixins/ndarithmetic.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "install": "python -m pip install -e .[test] --verbose", "pip_packages": ["attrs==23.1.0", "exceptiongroup==1.1.3", "execnet==2.0.2", "hypothesis==6.82.6", "iniconfig==2.0.0", "numpy==1.25.2", "packaging==23.1", "pluggy==1.3.0", "psutil==5.9.5", "pyerfa==2.0.0.3", "pytest-arraydiff==0.5.0", "pytest-astropy-header==0.2.2", "pytest-astropy==0.10.0", "pytest-cov==4.1.0", "pytest-doctestplus==1.0.0", "pytest-filter-subpackage==0.1.2", "pytest-mock==3.11.1", "pytest-openfiles==0.5.0", "pytest-remotedata==0.4.0", "pytest-xdist==3.3.1", "pytest==7.4.0", "PyYAML==6.0.1", "setuptools==68.0.0", "sortedcontainers==2.4.0", "tomli==2.0.1"], "pre_install": ["sed -i 's/requires = \\[\"setuptools\",/requires = \\[\"setuptools==68.0.0\",/' pyproject.toml"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(astropy/nddata/mixins/ndarithmetic\\.py)' -m pytest --no-header -rA  -p no:cacheprovider astropy/tests/test_coverup_astropy__astropy-14995.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}