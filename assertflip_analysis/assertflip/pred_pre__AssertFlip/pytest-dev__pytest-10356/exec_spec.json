{"instance_id": "pytest-dev__pytest-10356", "repo": "pytest-dev/pytest", "version": "7.2", "environment_setup_commit": "572b5657d7ca557593418ce0319fabff88800c73", "patch_list": ["diff --git a/dev/null b/testing/test_coverup_pytest-dev__pytest-10356.py\nnew file mode 100644\nindex e69de29..80e80a2 100644\n--- /dev/null\n+++ b/testing/test_coverup_pytest-dev__pytest-10356.py\n@@ -0,0 +1,27 @@\n+import pytest\n+\n+# Define two base classes with different markers\n+@pytest.mark.foo\n+class Foo:\n+    pass\n+\n+@pytest.mark.bar\n+class Bar:\n+    pass\n+\n+# Derived class inheriting from both base classes\n+class TestDings(Foo, Bar):\n+    def test_dings(self):\n+        pass\n+\n+def test_dings_markers():\n+    # Retrieve the markers on the TestDings class\n+    markers = getattr(TestDings, 'pytestmark', [])\n+\n+    # Assert that both markers are present\n+    assert len(markers) == 2, \"Expected both 'foo' and 'bar' markers to be present\"\n+\n+    # Assert that both 'foo' and 'bar' markers are present\n+    marker_names = {marker.name for marker in markers}\n+    assert 'foo' in marker_names, \"Expected 'foo' marker to be present\"\n+    assert 'bar' in marker_names, \"Expected 'bar' marker to be present\"\n"], "arch": "x86_64", "base_commit": "3c1534944cbd34e8a41bc9e76818018fadefc9a1", "test_directives": ["testing/test_coverup_pytest-dev__pytest-10356.py"], "coverage_files": ["src/_pytest/mark/structures.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "install": "python -m pip install -e .", "pip_packages": ["attrs==23.1.0", "iniconfig==2.0.0", "packaging==23.1", "pluggy==0.13.1", "py==1.11.0", "tomli==2.0.1"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(src/_pytest/mark/structures\\.py)' -m pytest -rA testing/test_coverup_pytest-dev__pytest-10356.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}