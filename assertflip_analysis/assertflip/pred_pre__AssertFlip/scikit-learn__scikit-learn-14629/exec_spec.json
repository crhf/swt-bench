{"instance_id": "scikit-learn__scikit-learn-14629", "repo": "scikit-learn/scikit-learn", "version": "0.22", "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d", "patch_list": ["diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14629.py\nnew file mode 100644\nindex e69de29..269cd4f 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14629.py\n@@ -0,0 +1,18 @@\n+import pytest\n+from sklearn.datasets import make_multilabel_classification\n+from sklearn.multioutput import MultiOutputClassifier\n+from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n+from sklearn.model_selection import cross_val_predict\n+\n+def test_cross_val_predict_with_multioutputclassifier_predict_proba():\n+    # Generate a multilabel classification dataset\n+    X, Y = make_multilabel_classification(n_samples=100, n_features=20, n_classes=3, n_labels=2, random_state=42)\n+\n+    # Initialize a MultiOutputClassifier with LinearDiscriminantAnalysis\n+    mo_lda = MultiOutputClassifier(LinearDiscriminantAnalysis())\n+\n+    # Expect the function to run without errors and return an array of prediction probabilities\n+    pred_proba = cross_val_predict(mo_lda, X, Y, cv=5, method='predict_proba')\n+    \n+    # Check if the output is of the expected shape\n+    assert pred_proba.shape == (100, 3, 2)\n"], "arch": "x86_64", "base_commit": "4aded39b5663d943f6a4809abacfa9cae3d7fb6a", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-14629.py"], "coverage_files": ["sklearn/multioutput.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/multioutput\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-14629.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}