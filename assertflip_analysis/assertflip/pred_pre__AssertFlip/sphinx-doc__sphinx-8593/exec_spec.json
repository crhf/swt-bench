{"instance_id": "sphinx-doc__sphinx-8593", "repo": "sphinx-doc/sphinx", "version": "3.5", "environment_setup_commit": "4f8cb861e3b29186b38248fe81e4944fd987fcce", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-8593.py\nnew file mode 100644\nindex e69de29..17df6ef 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-8593.py\n@@ -0,0 +1,52 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+@pytest.fixture\n+def sphinx_app(tmpdir):\n+    # Create a temporary directory for the Sphinx project\n+    srcdir = tmpdir.mkdir(\"src\")\n+    confdir = srcdir\n+    outdir = tmpdir.mkdir(\"out\")\n+    doctreedir = tmpdir.mkdir(\"doctree\")\n+\n+    # Create conf.py\n+    conf_content = \"\"\"\n+extensions = ['sphinx.ext.autodoc']\n+\"\"\"\n+    confdir.join(\"conf.py\").write(conf_content)\n+\n+    # Create example.py with a variable using :meta public:\n+    example_content = \"\"\"\n+_foo = None  #: :meta public:\n+\"\"\"\n+    srcdir.join(\"example.py\").write(example_content)\n+\n+    # Create index.rst to include the module\n+    index_content = \"\"\"\n+.. automodule:: example\n+   :members:\n+\"\"\"\n+    srcdir.join(\"index.rst\").write(index_content)\n+\n+    # Initialize the Sphinx application\n+    app = Sphinx(\n+        srcdir=str(srcdir),\n+        confdir=str(confdir),\n+        outdir=str(outdir),\n+        doctreedir=str(doctreedir),\n+        buildername='html'\n+    )\n+    return app, outdir\n+\n+def test_meta_public_variable_not_documented(sphinx_app):\n+    app, outdir = sphinx_app\n+\n+    # Build the documentation\n+    app.build()\n+\n+    # Check the output HTML file for the presence of _foo\n+    index_html = outdir.join(\"index.html\").read()\n+\n+    # Assert that _foo is documented\n+    assert \"_foo\" in index_html\n"], "arch": "x86_64", "base_commit": "07983a5a8704ad91ae855218ecbda1c8598200ca", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-8593.py"], "coverage_files": ["sphinx/ext/autodoc/__init__.py", "sphinx/ext/autodoc/importer.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp/sphinxcontrib-htmlhelp<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml/sphinxcontrib-serializinghtml<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/ext/autodoc/__init__\\.py|sphinx/ext/autodoc/importer\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-8593.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}