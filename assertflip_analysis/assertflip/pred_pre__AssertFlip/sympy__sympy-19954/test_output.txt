+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 6f54459aa0248bf1467ad12ee6333d8bc924a642
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit 6f54459aa0248bf1467ad12ee6333d8bc924a642
Merge: 87c9ea827f bc44b31f9c
Author: Gagandeep Singh <singh.23@iitj.ac.in>
Date:   Wed Aug 12 11:23:34 2020 +0530

    Merge pull request #19926 from Smit-create/wiener_typo
    
    [GSoC] Fix state space of Wiener Process

+ git diff 6f54459aa0248bf1467ad12ee6333d8bc924a642
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.7.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.7.dev0
    Uninstalling sympy-1.7.dev0:
      Successfully uninstalled sympy-1.7.dev0
  DEPRECATION: Legacy editable install of sympy==1.7.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
<stdin>:12: trailing whitespace.
    
<stdin>:18: trailing whitespace.
    
<stdin>:21: trailing whitespace.
    
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-19954.py...
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-19954.py cleanly.
warning: 3 lines add whitespace errors.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/combinatorics/perm_groups\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-19954.p
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/combinatorics/perm_groups\\.py)']
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        17822245
hash randomization: on (PYTHONHASHSEED=2799993068)

0.48 /testbed/sympy/combinatorics/perm_groups.py(1): from random import randrange, choice
0.48 /testbed/sympy/combinatorics/perm_groups.py(2): from math import log
0.48 /testbed/sympy/combinatorics/perm_groups.py(3): from sympy.ntheory import primefactors
0.48 /testbed/sympy/combinatorics/perm_groups.py(4): from sympy import multiplicity, factorint, Symbol
0.48 /testbed/sympy/combinatorics/perm_groups.py(6): from sympy.combinatorics import Permutation
0.48 /testbed/sympy/combinatorics/perm_groups.py(7): from sympy.combinatorics.permutations import (_af_commutes_with, _af_invert,
0.48 /testbed/sympy/combinatorics/perm_groups.py(9): from sympy.combinatorics.util import (_check_cycles_alt_sym,
0.48 /testbed/sympy/combinatorics/perm_groups.py(13): from sympy.core import Basic
0.48 /testbed/sympy/combinatorics/perm_groups.py(14): from sympy.functions.combinatorial.factorials import factorial
0.48 /testbed/sympy/combinatorics/perm_groups.py(15): from sympy.ntheory import sieve
0.48 /testbed/sympy/combinatorics/perm_groups.py(16): from sympy.utilities.iterables import has_variety, is_sequence, uniq
0.48 /testbed/sympy/combinatorics/perm_groups.py(17): from sympy.testing.randtest import _randrange
0.48 /testbed/sympy/combinatorics/perm_groups.py(18): from itertools import islice
0.48 /testbed/sympy/combinatorics/perm_groups.py(19): from sympy.core.sympify import _sympify
0.48 /testbed/sympy/combinatorics/perm_groups.py(20): rmul = Permutation.rmul_with_af
0.48 /testbed/sympy/combinatorics/perm_groups.py(21): _af_new = Permutation._af_new
0.48 /testbed/sympy/combinatorics/perm_groups.py(24): class PermutationGroup(Basic):
0.48 /testbed/sympy/combinatorics/perm_groups.py(24): class PermutationGroup(Basic):
0.48 /testbed/sympy/combinatorics/perm_groups.py(25):     """The class defining a Permutation group.
0.48 /testbed/sympy/combinatorics/perm_groups.py(118):     is_group = True
0.48 /testbed/sympy/combinatorics/perm_groups.py(120):     def __new__(cls, *args, **kwargs):
0.48 /testbed/sympy/combinatorics/perm_groups.py(177):     def __getitem__(self, i):
0.48 /testbed/sympy/combinatorics/perm_groups.py(180):     def __contains__(self, i):
0.48 /testbed/sympy/combinatorics/perm_groups.py(197):     def __len__(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(200):     def __eq__(self, other):
0.48 /testbed/sympy/combinatorics/perm_groups.py(240):     def __hash__(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(243):     def __mul__(self, other):
0.48 /testbed/sympy/combinatorics/perm_groups.py(283):     def _random_pr_init(self, r, n, _random_prec_n=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(340):     def _union_find_merge(self, first, second, ranks, parents, not_rep):
0.48 /testbed/sympy/combinatorics/perm_groups.py(386):     def _union_find_rep(self, num, parents):
0.48 /testbed/sympy/combinatorics/perm_groups.py(426):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(427):     def base(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(458):     def baseswap(self, base, strong_gens, pos, randomized=False,
0.48 /testbed/sympy/combinatorics/perm_groups.py(589):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(590):     def basic_orbits(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(618):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(619):     def basic_stabilizers(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(664):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(665):     def basic_transversals(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(694):     def composition_series(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(765):     def coset_transversal(self, H):
0.48 /testbed/sympy/combinatorics/perm_groups.py(828):     def _coset_representative(self, g, H):
0.48 /testbed/sympy/combinatorics/perm_groups.py(855):     def coset_table(self, H):
0.48 /testbed/sympy/combinatorics/perm_groups.py(900):     def center(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(933):     def centralizer(self, other):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1049):     def commutator(self, G, H):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1093):     def coset_factor(self, g, factor_index=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1181):     def generator_product(self, g, original=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1222):     def coset_rank(self, g):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1267):     def coset_unrank(self, rank, af=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1291):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1292):     def degree(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1322):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1323):     def identity(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1330):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1331):     def elements(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1345):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1346):     def _elements(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1360):     def derived_series(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1406):     def derived_subgroup(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1451):     def generate(self, method="coset", af=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1501):     def generate_dimino(self, af=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1560):     def generate_schreier_sims(self, af=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1631):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1632):     def generators(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1649):     def contains(self, g, strict=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1709):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1710):     def is_perfect(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1730):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1731):     def is_abelian(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1764):     def abelian_invariants(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1836):     def is_elementary(self, p):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1861):     def _eval_is_alt_sym_naive(self, only_sym=False, only_alt=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1890):     def _eval_is_alt_sym_monte_carlo(self, eps=0.05, perms=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1928):     def is_alt_sym(self, eps=0.05, _random_prec=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(1986):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(1987):     def is_nilpotent(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2029):     def is_normal(self, gr, strict=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2073):     def is_primitive(self, randomized=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2133):     def minimal_blocks(self, randomized=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2216):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(2217):     def is_solvable(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2254):     def is_subgroup(self, G, strict=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2315):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(2316):     def is_polycyclic(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2334):     def is_transitive(self, strict=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2383):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(2384):     def is_trivial(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2403):     def lower_central_series(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2442):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(2443):     def max_div(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2481):     def minimal_block(self, points):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2567):     def conjugacy_class(self, x):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2625):     def conjugacy_classes(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2653):     def normal_closure(self, other, k=10):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2751):     def orbit(self, alpha, action='tuples'):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2787):     def orbit_rep(self, alpha, beta, schreier_vector=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2824):     def orbit_transversal(self, alpha, pairs=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2850):     def orbits(self, rep=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2867):     def order(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2922):     def index(self, H):
0.48 /testbed/sympy/combinatorics/perm_groups.py(2942):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(2943):     def is_symmetric(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3001):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(3002):     def is_alternating(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3059):     @classmethod
0.48 /testbed/sympy/combinatorics/perm_groups.py(3060):     def _distinct_primes_lemma(cls, primes):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3071):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(3072):     def is_cyclic(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3160):     def pointwise_stabilizer(self, points, incremental=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3210):     def make_perm(self, n, seed=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3262):     def random(self, af=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3268):     def random_pr(self, gen_count=11, iterations=50, _random_prec=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3311):     def random_stab(self, alpha, schreier_vector=None, _random_prec=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3333):     def schreier_sims(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3363):     def _schreier_sims(self, base=None):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3388):     def schreier_sims_incremental(self, base=None, gens=None, slp_dict=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3573):     def schreier_sims_random(self, base=None, gens=None, consec_succ=10,
0.48 /testbed/sympy/combinatorics/perm_groups.py(3702):     def schreier_vector(self, alpha):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3749):     def stabilizer(self, alpha):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3773):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(3774):     def strong_gens(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3806):     def subgroup(self, gens):
0.48 /testbed/sympy/combinatorics/perm_groups.py(3818):     def subgroup_search(self, prop, base=None, strong_gens=None, tests=None,
0.48 /testbed/sympy/combinatorics/perm_groups.py(4068):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(4069):     def transitivity_degree(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4117):     def _p_elements_group(G, p):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4155):     def _sylow_alt_sym(self, p):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4258):     def sylow_subgroup(self, p):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4394):     def _block_verify(H, L, alpha):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4456):     def _verify(H, K, phi, z, alpha):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4573):     def strong_presentation(G):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4695):     def presentation(G, eliminate_gens=True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4810):     def polycyclic_group(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4852): def _orbit(degree, generators, alpha, action='tuples'):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4925): def _orbits(degree, generators):
0.48 /testbed/sympy/combinatorics/perm_groups.py(4954): def _orbit_transversal(degree, generators, alpha, pairs, af=False, slp=False):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5015): def _stabilizer(degree, generators, alpha):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5062): PermGroup = PermutationGroup
0.48 /testbed/sympy/combinatorics/perm_groups.py(5064): class SymmetricPermutationGroup(Basic):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5064): class SymmetricPermutationGroup(Basic):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5065):     """
0.48 /testbed/sympy/combinatorics/perm_groups.py(5072):     def __new__(cls, deg):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5079):     def __contains__(self, i):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5096):     def order(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5114):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(5115):     def degree(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5130):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(5131):     def identity(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5147): class Coset(Basic):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5147): class Coset(Basic):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5148):     """A left coset of a permutation group with respect to an element.
0.48 /testbed/sympy/combinatorics/perm_groups.py(5173):     def __new__(cls, g, H, G=None, dir="+"):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5211):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(5212):     def is_left_coset(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5230):     @property
0.48 /testbed/sympy/combinatorics/perm_groups.py(5231):     def is_right_coset(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(5249):     def as_list(self):
0.48 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.48 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.48 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.48 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.48 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.48 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.48 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.48 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.48 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.48 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.48 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.48 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
0.49 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.49 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.49 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.49 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.49 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.49 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.49 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
0.49 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.49 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.49 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.49 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.49 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.49 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.49 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.49 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.49 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.49 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.49 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.49 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
0.50 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.50 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.50 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.50 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.50 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.51 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.51 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.51 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.51 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.51 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.51 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.51 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.51 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
0.52 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.52 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.52 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.52 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.52 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.52 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.52 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.52 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.52 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.52 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.52 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.52 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
sympy/polys/tests/test_coverup_sympy__sympy-19954.py[1] 
test_sylow_subgroup_no_index_error 0.53 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.53 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.53 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.53 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.53 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.53 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.53 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.53 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.53 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.53 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.53 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.53 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.53 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.53 /testbed/sympy/combinatorics/perm_groups.py(142):             args = [g for g in args if not g.is_identity]
0.53 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.53 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.53 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.53 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.53 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.53 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.53 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
0.53 /testbed/sympy/combinatorics/perm_groups.py(4297):         from sympy.combinatorics.homomorphisms import (
0.54 /testbed/sympy/combinatorics/perm_groups.py(4299):         from sympy.ntheory.primetest import isprime
0.54 /testbed/sympy/combinatorics/perm_groups.py(4301):         if not isprime(p):
0.54 /testbed/sympy/combinatorics/perm_groups.py(4304):         def is_p_group(G):
0.54 /testbed/sympy/combinatorics/perm_groups.py(4316):         def _sylow_reduce(mu, nu):
0.54 /testbed/sympy/combinatorics/perm_groups.py(4326):         order = self.order()
0.54 /testbed/sympy/combinatorics/perm_groups.py(2904):         if self._order is not None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(2905):             return self._order
0.54 /testbed/sympy/combinatorics/perm_groups.py(4327):         if order % p != 0:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4329):         p_group, n = is_p_group(self)
0.54 /testbed/sympy/combinatorics/perm_groups.py(4307):             m = G.order()
0.54 /testbed/sympy/combinatorics/perm_groups.py(2904):         if self._order is not None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(2905):             return self._order
0.54 /testbed/sympy/combinatorics/perm_groups.py(4308):             n = 0
0.54 /testbed/sympy/combinatorics/perm_groups.py(4309):             while m % p == 0:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4310):                 m = m/p
0.54 /testbed/sympy/combinatorics/perm_groups.py(4311):                 n += 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(4312):                 if m == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4309):             while m % p == 0:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4310):                 m = m/p
0.54 /testbed/sympy/combinatorics/perm_groups.py(4311):                 n += 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(4312):                 if m == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4309):             while m % p == 0:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4314):             return False, n
0.54 /testbed/sympy/combinatorics/perm_groups.py(4330):         if p_group:
0.54 /testbed/sympy/combinatorics/perm_groups.py(4333):         if self.is_alt_sym():
0.54 /testbed/sympy/combinatorics/perm_groups.py(1967):         if _random_prec is not None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1972):         if self._is_sym or self._is_alt:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1974):         if self._is_sym is False and self._is_alt is False:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1977):         n = self.degree
0.54 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.54 /testbed/sympy/combinatorics/perm_groups.py(1978):         if n < 8:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1980):         elif self.is_transitive():
0.54 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.54 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.54 /testbed/sympy/combinatorics/perm_groups.py(1981):             return self._eval_is_alt_sym_monte_carlo(eps=eps)
0.54 /testbed/sympy/combinatorics/perm_groups.py(1911):         if perms is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1912):             n = self.degree
0.54 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.54 /testbed/sympy/combinatorics/perm_groups.py(1913):             if n < 17:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1916):                 c_n = 0.57
0.54 /testbed/sympy/combinatorics/perm_groups.py(1917):             d_n = (c_n*log(2))/log(n)
0.54 /testbed/sympy/combinatorics/perm_groups.py(1918):             N_eps = int(-log(eps)/d_n)
0.54 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.54 /testbed/sympy/combinatorics/perm_groups.py(1921):             return self._eval_is_alt_sym_monte_carlo(perms=perms)
0.54 /testbed/sympy/combinatorics/perm_groups.py(1911):         if perms is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.54 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3283):             self._random_pr_init(gen_count, iterations)
0.54 /testbed/sympy/combinatorics/perm_groups.py(322):         deg = self.degree
0.54 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.54 /testbed/sympy/combinatorics/perm_groups.py(323):         random_gens = [x._array_form for x in self.generators]
0.54 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.54 /testbed/sympy/combinatorics/perm_groups.py(323):         random_gens = [x._array_form for x in self.generators]
0.54 /testbed/sympy/combinatorics/perm_groups.py(323):         random_gens = [x._array_form for x in self.generators]
0.54 /testbed/sympy/combinatorics/perm_groups.py(323):         random_gens = [x._array_form for x in self.generators]
0.54 /testbed/sympy/combinatorics/perm_groups.py(324):         k = len(random_gens)
0.54 /testbed/sympy/combinatorics/perm_groups.py(325):         if k < r:
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(327):                 random_gens.append(random_gens[i - k])
0.54 /testbed/sympy/combinatorics/perm_groups.py(326):             for i in range(k, r):
0.54 /testbed/sympy/combinatorics/perm_groups.py(328):         acc = list(range(deg))
0.54 /testbed/sympy/combinatorics/perm_groups.py(329):         random_gens.append(acc)
0.54 /testbed/sympy/combinatorics/perm_groups.py(330):         self._random_gens = random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(333):         if _random_prec_n is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3292):                 t = r - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3292):                 t = r - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3292):                 t = r - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.54 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.54 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.54 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.54 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.54 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.54 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.54 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.54 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3292):                 t = r - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3292):                 t = r - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(335):                 self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(334):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(1924):             if _check_cycles_alt_sym(perm):
0.55 /testbed/sympy/combinatorics/perm_groups.py(1923):         for perm in perms:
0.55 /testbed/sympy/combinatorics/perm_groups.py(1920):             perms = (self.random_pr() for i in range(N_eps))
0.55 /testbed/sympy/combinatorics/perm_groups.py(1926):         return False
0.55 /testbed/sympy/combinatorics/perm_groups.py(4339):         orbits = self.orbits()
0.55 /testbed/sympy/combinatorics/perm_groups.py(2865):         return _orbits(self._degree, self._generators)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4942):     orbs = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(4943):     sorted_I = list(range(degree))
0.55 /testbed/sympy/combinatorics/perm_groups.py(4944):     I = set(sorted_I)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4899):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4900):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4952):     return orbs
0.55 /testbed/sympy/combinatorics/perm_groups.py(4340):         non_p_orbits = [o for o in orbits if len(o) % p != 0 and len(o) != 1]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4340):         non_p_orbits = [o for o in orbits if len(o) % p != 0 and len(o) != 1]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4340):         non_p_orbits = [o for o in orbits if len(o) % p != 0 and len(o) != 1]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4341):         if non_p_orbits:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4345):         if not self.is_transitive():
0.55 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.55 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.55 /testbed/sympy/combinatorics/perm_groups.py(4354):         blocks = self.minimal_blocks()
0.55 /testbed/sympy/combinatorics/perm_groups.py(2155):         def _number_blocks(blocks):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2173):         if not self.is_transitive():
0.55 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.55 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.55 /testbed/sympy/combinatorics/perm_groups.py(2175):         blocks = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2176):         num_blocks = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2177):         rep_blocks = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2178):         if randomized:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2179):             random_stab_gens = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2180):             v = self.schreier_vector(0)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3732):         n = self.degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(3733):         v = [None]*n
0.55 /testbed/sympy/combinatorics/perm_groups.py(3734):         v[alpha] = -1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3735):         orb = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3736):         used = [False]*n
0.55 /testbed/sympy/combinatorics/perm_groups.py(3737):         used[alpha] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3738):         gens = self.generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(3739):         r = len(gens)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3744):                     orb.append(temp)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3745):                     used[temp] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(3746):                     v[temp] = i
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3742):                 temp = gens[i]._array_form[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(3743):                 if used[temp] is False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3741):             for i in range(r):
0.55 /testbed/sympy/combinatorics/perm_groups.py(3740):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3747):         return v
0.55 /testbed/sympy/combinatorics/perm_groups.py(2181):             for i in range(len(self)):
0.55 /testbed/sympy/combinatorics/perm_groups.py(198):         return len(self._generators)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2182):                 random_stab_gens.append(self.random_stab(0, v))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3323):         if schreier_vector is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3325):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3326):             rand = self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3304):             random_gens[s] = _af_rmul(random_gens[s], _af_pow(random_gens[t], e))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3305):             random_gens[r] = _af_rmul(random_gens[r], random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3329):         beta = rand(alpha)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3330):         h = self.orbit_rep(alpha, beta, schreier_vector)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2808):         if schreier_vector is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2810):         if schreier_vector[beta] is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2812):         k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2814):         a = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2819):         if a:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2820):             return _af_new(_af_rmuln(*a))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3331):         return rmul(~h, rand)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2181):             for i in range(len(self)):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2182):                 random_stab_gens.append(self.random_stab(0, v))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3323):         if schreier_vector is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3325):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3326):             rand = self.random_pr()
0.55 /testbed/sympy/combinatorics/perm_groups.py(3282):         if self._random_gens == []:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3284):         random_gens = self._random_gens
0.55 /testbed/sympy/combinatorics/perm_groups.py(3285):         r = len(random_gens) - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(3288):         if _random_prec is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3289):             s = randrange(r)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3290):             t = randrange(r - 1)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3291):             if t == s:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3293):             x = choice([1, 2])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3294):             e = choice([-1, 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3303):         if x == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(3307):             random_gens[s] = _af_rmul(_af_pow(random_gens[t], e), random_gens[s])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3308):             random_gens[r] = _af_rmul(random_gens[s], random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3309):         return _af_new(random_gens[r])
0.55 /testbed/sympy/combinatorics/perm_groups.py(3329):         beta = rand(alpha)
0.55 /testbed/sympy/combinatorics/perm_groups.py(3330):         h = self.orbit_rep(alpha, beta, schreier_vector)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2808):         if schreier_vector is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2810):         if schreier_vector[beta] is None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2812):         k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2813):         gens = [x._array_form for x in self.generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2814):         a = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2816):             a.append(gens[k])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2817):             beta = gens[k].index(beta) # beta = (~gens[k])(beta)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2818):             k = schreier_vector[beta]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2815):         while k != -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2819):         if a:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2820):             return _af_new(_af_rmuln(*a))
0.55 /testbed/sympy/combinatorics/perm_groups.py(3331):         return rmul(~h, rand)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2181):             for i in range(len(self)):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2183):             stab = PermutationGroup(random_stab_gens)
0.55 /testbed/sympy/combinatorics/perm_groups.py(124):         if not args:
0.55 /testbed/sympy/combinatorics/perm_groups.py(127):             args = list(args[0] if is_sequence(args[0]) else args)
0.55 /testbed/sympy/combinatorics/perm_groups.py(128):             if not args:
0.55 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(130):         if any(isinstance(a, Cycle) for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(132):         if has_variety(a.size for a in args):
0.55 /testbed/sympy/combinatorics/perm_groups.py(139):         if kwargs.pop('dups', True):
0.55 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.55 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.55 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.55 /testbed/sympy/combinatorics/perm_groups.py(140):             args = list(uniq([_af_new(list(a)) for a in args]))
0.55 /testbed/sympy/combinatorics/perm_groups.py(141):         if len(args) > 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(143):         obj = Basic.__new__(cls, *args, **kwargs)
0.55 /testbed/sympy/combinatorics/perm_groups.py(144):         obj._generators = args
0.55 /testbed/sympy/combinatorics/perm_groups.py(145):         obj._order = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(146):         obj._center = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(147):         obj._is_abelian = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(148):         obj._is_transitive = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(149):         obj._is_sym = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(150):         obj._is_alt = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(151):         obj._is_primitive = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(152):         obj._is_nilpotent = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(153):         obj._is_solvable = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(154):         obj._is_trivial = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(155):         obj._transitivity_degree = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(156):         obj._max_div = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(157):         obj._is_perfect = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(158):         obj._is_cyclic = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(159):         obj._r = len(obj._generators)
0.55 /testbed/sympy/combinatorics/perm_groups.py(160):         obj._degree = obj._generators[0].size
0.55 /testbed/sympy/combinatorics/perm_groups.py(163):         obj._base = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(164):         obj._strong_gens = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(165):         obj._strong_gens_slp = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(166):         obj._basic_orbits = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(167):         obj._transversals = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(168):         obj._transversal_slp = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(171):         obj._random_gens = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(174):         obj._fp_presentation = None
0.55 /testbed/sympy/combinatorics/perm_groups.py(175):         return obj
0.55 /testbed/sympy/combinatorics/perm_groups.py(2186):         orbits = stab.orbits()
0.55 /testbed/sympy/combinatorics/perm_groups.py(2865):         return _orbits(self._degree, self._generators)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4942):     orbs = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(4943):     sorted_I = list(range(degree))
0.55 /testbed/sympy/combinatorics/perm_groups.py(4944):     I = set(sorted_I)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4946):         i = sorted_I[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4947):         orb = _orbit(degree, generators, i)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4886):     if not hasattr(alpha, '__getitem__'):
0.55 /testbed/sympy/combinatorics/perm_groups.py(4887):         alpha = [alpha]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4889):     gens = [x._array_form for x in generators]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4890):     if len(alpha) == 1 or action == 'union':
0.55 /testbed/sympy/combinatorics/perm_groups.py(4891):         orb = alpha
0.55 /testbed/sympy/combinatorics/perm_groups.py(4892):         used = [False]*degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4894):             used[el] = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(4893):         for el in alpha:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4897):                 temp = gen[b]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4898):                 if used[temp] == False:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4896):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4895):         for b in orb:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4901):         return set(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4948):         orbs.append(orb)
0.55 /testbed/sympy/combinatorics/perm_groups.py(4950):         I -= orb
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4951):         sorted_I = [i for i in sorted_I if i not in orb]
0.55 /testbed/sympy/combinatorics/perm_groups.py(4945):     while I:
0.55 /testbed/sympy/combinatorics/perm_groups.py(4952):     return orbs
0.55 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.55 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.55 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2190):                 block = self.minimal_block([0, x])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2526):         if not self.is_transitive():
0.55 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.55 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.55 /testbed/sympy/combinatorics/perm_groups.py(2528):         n = self.degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(2529):         gens = self.generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(2531):         parents = list(range(n))
0.55 /testbed/sympy/combinatorics/perm_groups.py(2532):         ranks = [1]*n
0.55 /testbed/sympy/combinatorics/perm_groups.py(2533):         not_rep = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2534):         k = len(points)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2536):         if k > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2472):         n = self.degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(2473):         if n == 1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2475):         for x in sieve:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2476):             if n % x == 0:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2477):                 d = n//x
0.55 /testbed/sympy/combinatorics/perm_groups.py(2478):                 self._max_div = d
0.55 /testbed/sympy/combinatorics/perm_groups.py(2479):                 return d
0.55 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2539):             parents[points[i + 1]] = points[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2540):             not_rep.append(points[i + 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2541):         ranks[points[0]] = k
0.55 /testbed/sympy/combinatorics/perm_groups.py(2542):         i = 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2543):         len_not_rep = k - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(379):                 return -1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2556):                     return [0]*n
0.55 /testbed/sympy/combinatorics/perm_groups.py(2191):                 num_block, m = _number_blocks(block)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2160):             n = len(blocks)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2161):             appeared = {}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2162):             m = 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2163):             b = [None]*n
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.55 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.55 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2171):             return tuple(b), m
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.55 /testbed/sympy/combinatorics/perm_groups.py(2196):                 minimal = True
0.55 /testbed/sympy/combinatorics/perm_groups.py(2197):                 to_remove = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2210):                 if minimal and num_block not in num_blocks:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2211):                     blocks.append(block)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2212):                     num_blocks.append(num_block)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2213):                     rep_blocks.append(rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.55 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2190):                 block = self.minimal_block([0, x])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2526):         if not self.is_transitive():
0.55 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.55 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.55 /testbed/sympy/combinatorics/perm_groups.py(2528):         n = self.degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.55 /testbed/sympy/combinatorics/perm_groups.py(2529):         gens = self.generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.55 /testbed/sympy/combinatorics/perm_groups.py(2531):         parents = list(range(n))
0.55 /testbed/sympy/combinatorics/perm_groups.py(2532):         ranks = [1]*n
0.55 /testbed/sympy/combinatorics/perm_groups.py(2533):         not_rep = []
0.55 /testbed/sympy/combinatorics/perm_groups.py(2534):         k = len(points)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2536):         if k > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2539):             parents[points[i + 1]] = points[0]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2540):             not_rep.append(points[i + 1])
0.55 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.55 /testbed/sympy/combinatorics/perm_groups.py(2541):         ranks[points[0]] = k
0.55 /testbed/sympy/combinatorics/perm_groups.py(2542):         i = 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2543):         len_not_rep = k - 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.55 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.55 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.55 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.55 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.55 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.55 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.55 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.55 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.55 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.55 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.55 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.55 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.55 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.55 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.55 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.55 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.55 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.55 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.55 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2564):         new_reps = {}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2191):                 num_block, m = _number_blocks(block)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2160):             n = len(blocks)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2161):             appeared = {}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2162):             m = 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2163):             b = [None]*n
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2171):             return tuple(b), m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2196):                 minimal = True
0.56 /testbed/sympy/combinatorics/perm_groups.py(2197):                 to_remove = []
0.56 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2201):                         del num_blocks[i], blocks[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2202):                         to_remove.append(rep_blocks[i])
0.56 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2210):                 if minimal and num_block not in num_blocks:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2211):                     blocks.append(block)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2212):                     num_blocks.append(num_block)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2213):                     rep_blocks.append(rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.56 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2190):                 block = self.minimal_block([0, x])
0.56 /testbed/sympy/combinatorics/perm_groups.py(2526):         if not self.is_transitive():
0.56 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.56 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.56 /testbed/sympy/combinatorics/perm_groups.py(2528):         n = self.degree
0.56 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.56 /testbed/sympy/combinatorics/perm_groups.py(2529):         gens = self.generators
0.56 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.56 /testbed/sympy/combinatorics/perm_groups.py(2531):         parents = list(range(n))
0.56 /testbed/sympy/combinatorics/perm_groups.py(2532):         ranks = [1]*n
0.56 /testbed/sympy/combinatorics/perm_groups.py(2533):         not_rep = []
0.56 /testbed/sympy/combinatorics/perm_groups.py(2534):         k = len(points)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2536):         if k > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2539):             parents[points[i + 1]] = points[0]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2540):             not_rep.append(points[i + 1])
0.56 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2541):         ranks[points[0]] = k
0.56 /testbed/sympy/combinatorics/perm_groups.py(2542):         i = 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2543):         len_not_rep = k - 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2564):         new_reps = {}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2191):                 num_block, m = _number_blocks(block)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2160):             n = len(blocks)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2161):             appeared = {}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2162):             m = 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2163):             b = [None]*n
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2171):             return tuple(b), m
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.56 /testbed/sympy/combinatorics/perm_groups.py(2196):                 minimal = True
0.56 /testbed/sympy/combinatorics/perm_groups.py(2197):                 to_remove = []
0.56 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2203):                     elif len(r) < len(rep) and r.issubset(rep):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2210):                 if minimal and num_block not in num_blocks:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2211):                     blocks.append(block)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2212):                     num_blocks.append(num_block)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2213):                     rep_blocks.append(rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.56 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2190):                 block = self.minimal_block([0, x])
0.56 /testbed/sympy/combinatorics/perm_groups.py(2526):         if not self.is_transitive():
0.56 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.56 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.56 /testbed/sympy/combinatorics/perm_groups.py(2528):         n = self.degree
0.56 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.56 /testbed/sympy/combinatorics/perm_groups.py(2529):         gens = self.generators
0.56 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.56 /testbed/sympy/combinatorics/perm_groups.py(2531):         parents = list(range(n))
0.56 /testbed/sympy/combinatorics/perm_groups.py(2532):         ranks = [1]*n
0.56 /testbed/sympy/combinatorics/perm_groups.py(2533):         not_rep = []
0.56 /testbed/sympy/combinatorics/perm_groups.py(2534):         k = len(points)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2536):         if k > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2539):             parents[points[i + 1]] = points[0]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2540):             not_rep.append(points[i + 1])
0.56 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2541):         ranks[points[0]] = k
0.56 /testbed/sympy/combinatorics/perm_groups.py(2542):         i = 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2543):         len_not_rep = k - 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.56 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.56 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.56 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.56 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.56 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.56 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.56 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.56 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.56 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.56 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.56 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.56 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.56 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.56 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.56 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.56 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.56 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.56 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.56 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.56 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2564):         new_reps = {}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2191):                 num_block, m = _number_blocks(block)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2160):             n = len(blocks)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2161):             appeared = {}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2162):             m = 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2163):             b = [None]*n
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2171):             return tuple(b), m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2196):                 minimal = True
0.57 /testbed/sympy/combinatorics/perm_groups.py(2197):                 to_remove = []
0.57 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2203):                     elif len(r) < len(rep) and r.issubset(rep):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2203):                     elif len(r) < len(rep) and r.issubset(rep):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2210):                 if minimal and num_block not in num_blocks:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.57 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2190):                 block = self.minimal_block([0, x])
0.57 /testbed/sympy/combinatorics/perm_groups.py(2526):         if not self.is_transitive():
0.57 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.57 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.57 /testbed/sympy/combinatorics/perm_groups.py(2528):         n = self.degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(2529):         gens = self.generators
0.57 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.57 /testbed/sympy/combinatorics/perm_groups.py(2531):         parents = list(range(n))
0.57 /testbed/sympy/combinatorics/perm_groups.py(2532):         ranks = [1]*n
0.57 /testbed/sympy/combinatorics/perm_groups.py(2533):         not_rep = []
0.57 /testbed/sympy/combinatorics/perm_groups.py(2534):         k = len(points)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2536):         if k > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2539):             parents[points[i + 1]] = points[0]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2540):             not_rep.append(points[i + 1])
0.57 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2541):         ranks[points[0]] = k
0.57 /testbed/sympy/combinatorics/perm_groups.py(2542):         i = 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2543):         len_not_rep = k - 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(421):             parents[temp] = rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(422):             temp = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(423):             parent = parents[temp]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(379):                 return -1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2556):                     return [0]*n
0.57 /testbed/sympy/combinatorics/perm_groups.py(2191):                 num_block, m = _number_blocks(block)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2160):             n = len(blocks)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2161):             appeared = {}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2162):             m = 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2163):             b = [None]*n
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2171):             return tuple(b), m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2196):                 minimal = True
0.57 /testbed/sympy/combinatorics/perm_groups.py(2197):                 to_remove = []
0.57 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2203):                     elif len(r) < len(rep) and r.issubset(rep):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2205):                         minimal = False
0.57 /testbed/sympy/combinatorics/perm_groups.py(2206):                         break
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2208):                 rep_blocks = [r for r in rep_blocks if r not in to_remove]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2210):                 if minimal and num_block not in num_blocks:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2187):         for orb in orbits:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2188):             x = orb.pop()
0.57 /testbed/sympy/combinatorics/perm_groups.py(2189):             if x != 0:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2190):                 block = self.minimal_block([0, x])
0.57 /testbed/sympy/combinatorics/perm_groups.py(2526):         if not self.is_transitive():
0.57 /testbed/sympy/combinatorics/perm_groups.py(2365):         if self._is_transitive:  # strict or not, if True then True
0.57 /testbed/sympy/combinatorics/perm_groups.py(2366):             return self._is_transitive
0.57 /testbed/sympy/combinatorics/perm_groups.py(2528):         n = self.degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(2529):         gens = self.generators
0.57 /testbed/sympy/combinatorics/perm_groups.py(1647):         return self._generators
0.57 /testbed/sympy/combinatorics/perm_groups.py(2531):         parents = list(range(n))
0.57 /testbed/sympy/combinatorics/perm_groups.py(2532):         ranks = [1]*n
0.57 /testbed/sympy/combinatorics/perm_groups.py(2533):         not_rep = []
0.57 /testbed/sympy/combinatorics/perm_groups.py(2534):         k = len(points)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2536):         if k > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2539):             parents[points[i + 1]] = points[0]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2540):             not_rep.append(points[i + 1])
0.57 /testbed/sympy/combinatorics/perm_groups.py(2538):         for i in range(k - 1):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2541):         ranks[points[0]] = k
0.57 /testbed/sympy/combinatorics/perm_groups.py(2542):         i = 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2543):         len_not_rep = k - 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(374):                 new_1, new_2 = rep_first, rep_second
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(373):             if ranks[rep_first] >= ranks[rep_second]:
0.57 /testbed/sympy/combinatorics/perm_groups.py(376):                 new_1, new_2 = rep_second, rep_first
0.57 /testbed/sympy/combinatorics/perm_groups.py(377):             total_rank = ranks[new_1] + ranks[new_2]
0.57 /testbed/sympy/combinatorics/perm_groups.py(378):             if total_rank > self.max_div:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2470):         if self._max_div is not None:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2471):             return self._max_div
0.57 /testbed/sympy/combinatorics/perm_groups.py(380):             parents[new_2] = new_1
0.57 /testbed/sympy/combinatorics/perm_groups.py(381):             ranks[new_1] = total_rank
0.57 /testbed/sympy/combinatorics/perm_groups.py(382):             not_rep.append(new_2)
0.57 /testbed/sympy/combinatorics/perm_groups.py(383):             return 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2545):             gamma = not_rep[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2546):             i += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2550):                 delta = self._union_find_rep(gamma, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(2554):                                               parents, not_rep)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2553):                 temp = self._union_find_merge(gen(gamma), gen(delta), ranks,
0.57 /testbed/sympy/combinatorics/perm_groups.py(369):         rep_first = self._union_find_rep(first, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(370):         rep_second = self._union_find_rep(second, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(371):         if rep_first != rep_second:
0.57 /testbed/sympy/combinatorics/perm_groups.py(384):         return 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2555):                 if temp == -1:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2557):                 len_not_rep += temp
0.57 /testbed/sympy/combinatorics/perm_groups.py(2547):             for gen in gens:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2544):         while i < len_not_rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2561):             self._union_find_rep(i, parents)
0.57 /testbed/sympy/combinatorics/perm_groups.py(414):         rep, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(416):             rep = parent
0.57 /testbed/sympy/combinatorics/perm_groups.py(417):             parent = parents[rep]
0.57 /testbed/sympy/combinatorics/perm_groups.py(415):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(419):         temp, parent = num, parents[num]
0.57 /testbed/sympy/combinatorics/perm_groups.py(420):         while parent != rep:
0.57 /testbed/sympy/combinatorics/perm_groups.py(424):         return rep
0.57 /testbed/sympy/combinatorics/perm_groups.py(2558):         for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2564):         new_reps = {}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2565):         return [new_reps.setdefault(r, i) for i, r in enumerate(parents)]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2191):                 num_block, m = _number_blocks(block)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2160):             n = len(blocks)
0.57 /testbed/sympy/combinatorics/perm_groups.py(2161):             appeared = {}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2162):             m = 0
0.57 /testbed/sympy/combinatorics/perm_groups.py(2163):             b = [None]*n
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2166):                     appeared[blocks[i]] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2167):                     b[i] = m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2168):                     m += 1
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2165):                 if blocks[i] not in appeared:
0.57 /testbed/sympy/combinatorics/perm_groups.py(2170):                     b[i] = appeared[blocks[i]]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2164):             for i in range(n):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2171):             return tuple(b), m
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(1320):         return self._degree
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2193):                 rep = {j for j in range(self.degree) if num_block[j] == 0}
0.57 /testbed/sympy/combinatorics/perm_groups.py(2196):                 minimal = True
0.57 /testbed/sympy/combinatorics/perm_groups.py(2197):                 to_remove = []
0.57 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2201):                         del num_blocks[i], blocks[i]
0.57 /testbed/sympy/combinatorics/perm_groups.py(2202):                         to_remove.append(rep_blocks[i])
0.57 /testbed/sympy/combinatorics/perm_groups.py(2198):                 for i, r in enumerate(rep_blocks):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2199):                     if len(r) > len(rep) and rep.issubset(r):
0.57 /testbed/sympy/combinatorics/perm_groups.py(2201):                         del num_blocks[i], blocks[i]
F                                      [FAIL]


________________________________________________________________________________
 sympy/polys/tests/test_coverup_sympy__sympy-19954.py:test_sylow_subgroup_no_index_error 
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_coverup_sympy__sympy-19954.py", line 9, in test_sylow_subgroup_no_index_error
    G.sylow_subgroup(p=2)
  File "/testbed/sympy/combinatorics/perm_groups.py", line 4354, in sylow_subgroup
    blocks = self.minimal_blocks()
  File "/testbed/sympy/combinatorics/perm_groups.py", line 2201, in minimal_blocks
    del num_blocks[i], blocks[i]
IndexError: list assignment index out of range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_coverup_sympy__sympy-19954.py", line 11, in test_sylow_subgroup_no_index_error
    assert False, "sylow_subgroup(p=2) raised IndexError unexpectedly"
AssertionError: sylow_subgroup(p=2) raised IndexError unexpectedly

============= tests finished: 0 passed, 1 failed, in 0.13 seconds ==============
DO *NOT* COMMIT!
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/combinatorics/perm_groups\\.py)']
+ cat coverage.cover
{"/testbed/sympy/combinatorics/perm_groups.py": {"1": 1, "2": 1, "3": 1, "4": 1, "6": 1, "7": 1, "9": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "24": 2, "4852": 1, "4925": 1, "4954": 1, "5015": 1, "5062": 1, "5064": 2, "5147": 2, "118": 1, "120": 1, "177": 1, "180": 1, "197": 1, "200": 1, "240": 1, "243": 1, "283": 1, "340": 1, "386": 1, "426": 1, "427": 1, "458": 1, "589": 1, "590": 1, "618": 1, "619": 1, "664": 1, "665": 1, "694": 1, "765": 1, "828": 1, "855": 1, "900": 1, "933": 1, "1049": 1, "1093": 1, "1181": 1, "1222": 1, "1267": 1, "1291": 1, "1292": 1, "1322": 1, "1323": 1, "1330": 1, "1331": 1, "1345": 1, "1346": 1, "1360": 1, "1406": 1, "1451": 1, "1501": 1, "1560": 1, "1631": 1, "1632": 1, "1649": 1, "1709": 1, "1710": 1, "1730": 1, "1731": 1, "1764": 1, "1836": 1, "1861": 1, "1890": 1, "1928": 1, "1986": 1, "1987": 1, "2029": 1, "2073": 1, "2133": 1, "2216": 1, "2217": 1, "2254": 1, "2315": 1, "2316": 1, "2334": 1, "2383": 1, "2384": 1, "2403": 1, "2442": 1, "2443": 1, "2481": 1, "2567": 1, "2625": 1, "2653": 1, "2751": 1, "2787": 1, "2824": 1, "2850": 1, "2867": 1, "2922": 1, "2942": 1, "2943": 1, "3001": 1, "3002": 1, "3059": 1, "3060": 1, "3071": 1, "3072": 1, "3160": 1, "3210": 1, "3262": 1, "3268": 1, "3311": 1, "3333": 1, "3363": 1, "3388": 1, "3573": 1, "3702": 1, "3749": 1, "3773": 1, "3774": 1, "3806": 1, "3818": 1, "4068": 1, "4069": 1, "4117": 1, "4155": 1, "4258": 1, "4394": 1, "4456": 1, "4573": 1, "4695": 1, "4810": 1, "124": 7, "125": 0, "127": 7, "128": 7, "129": 0, "130": 113, "131": 0, "132": 113, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 7, "140": 113, "141": 7, "142": 109, "143": 7, "144": 7, "145": 7, "146": 7, "147": 7, "148": 7, "149": 7, "150": 7, "151": 7, "152": 7, "153": 7, "154": 7, "155": 7, "156": 7, "157": 7, "158": 7, "159": 7, "160": 7, "163": 7, "164": 7, "165": 7, "166": 7, "167": 7, "168": 7, "171": 7, "174": 7, "175": 7, "178": 0, "192": 0, "193": 0, "194": 0, "195": 0, "198": 1, "218": 0, "219": 0, "221": 0, "222": 0, "227": 0, "228": 0, "232": 0, "233": 0, "234": 0, "235": 0, "236": 0, "237": 0, "238": 0, "241": 0, "267": 0, "268": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "277": 0, "278": 0, "279": 0, "280": 0, "281": 0, "322": 1, "323": 4, "324": 1, "325": 1, "326": 10, "327": 9, "328": 1, "329": 1, "330": 1, "333": 1, "334": 51, "335": 50, "337": 0, "338": 0, "369": 155, "370": 155, "371": 155, "373": 78, "374": 44, "376": 34, "377": 78, "378": 78, "379": 2, "380": 76, "381": 76, "382": 76, "383": 76, "384": 77, "414": 537, "415": 958, "416": 421, "417": 421, "419": 537, "420": 554, "421": 17, "422": 17, "423": 17, "424": 537, "454": 0, "455": 0, "456": 0, "536": 0, "537": 0, "535": 0, "538": 0, "539": 0, "542": 0, "543": 0, "545": 0, "546": 0, "548": 0, "550": 0, "551": 0, "552": 0, "554": 0, "555": 0, "556": 0, "557": 0, "560": 0, "561": 0, "562": 0, "563": 0, "566": 0, "567": 0, "568": 0, "569": 0, "570": 0, "571": 0, "573": 0, "574": 0, "575": 0, "576": 0, "577": 0, "579": 0, "580": 0, "581": 0, "582": 0, "583": 0, "584": 0, "585": 0, "586": 0, "587": 0, "614": 0, "615": 0, "616": 0, "652": 0, "653": 0, "654": 0, "655": 0, "656": 0, "657": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "690": 0, "691": 0, "692": 0, "742": 0, "743": 0, "744": 0, "745": 0, "747": 0, "748": 0, "749": 0, "750": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "756": 0, "757": 0, "758": 0, "759": 0, "760": 0, "761": 0, "762": 0, "763": 0, "771": 0, "772": 0, "774": 0, "775": 0, "777": 0, "779": 0, "780": 0, "781": 0, "783": 0, "787": 0, "788": 0, "789": 0, "791": 0, "792": 0, "793": 0, "795": 0, "801": 0, "802": 0, "804": 0, "805": 0, "806": 0, "807": 0, "808": 0, "809": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "817": 0, "818": 0, "819": 0, "820": 0, "821": 0, "822": 0, "823": 0, "824": 0, "825": 0, "826": 0, "833": 0, "834": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "841": 0, "842": 0, "843": 0, "853": 0, "844": 0, "845": 0, "846": 0, "847": 0, "848": 0, "849": 0, "850": 0, "851": 0, "852": 0, "863": 0, "864": 0, "865": 0, "866": 0, "867": 0, "869": 0, "870": 0, "872": 0, "873": 0, "874": 0, "875": 0, "876": 0, "881": 0, "882": 0, "883": 0, "884": 0, "885": 0, "886": 0, "887": 0, "888": 0, "889": 0, "890": 0, "891": 0, "892": 0, "893": 0, "894": 0, "895": 0, "896": 0, "897": 0, "898": 0, "931": 0, "981": 0, "982": 0, "983": 0, "984": 0, "985": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "991": 0, "992": 0, "993": 0, "994": 0, "995": 0, "996": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1005": 0, "1006": 0, "1007": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1015": 0, "1016": 0, "1017": 0, "1018": 0, "1019": 0, "1020": 0, "1021": 0, "1022": 0, "1024": 0, "1036": 0, "1038": 0, "1041": 0, "1042": 0, "1043": 0, "1044": 0, "1045": 0, "1046": 0, "1047": 0, "1025": 0, "1026": 0, "1027": 0, "1028": 0, "1029": 0, "1030": 0, "1035": 0, "1039": 0, "1040": 0, "1082": 0, "1083": 0, "1084": 0, "1085": 0, "1086": 0, "1087": 0, "1088": 0, "1089": 0, "1090": 0, "1091": 0, "1150": 0, "1151": 0, "1152": 0, "1156": 0, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1161": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1167": 0, "1168": 0, "1169": 0, "1170": 0, "1171": 0, "1172": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1177": 0, "1178": 0, "1179": 0, "1188": 0, "1189": 0, "1190": 0, "1191": 0, "1192": 0, "1193": 0, "1195": 0, "1196": 0, "1197": 0, "1198": 0, "1199": 0, "1200": 0, "1201": 0, "1202": 0, "1204": 0, "1205": 0, "1206": 0, "1207": 0, "1208": 0, "1209": 0, "1211": 0, "1212": 0, "1213": 0, "1214": 0, "1215": 0, "1216": 0, "1218": 0, "1219": 0, "1220": 0, "1252": 0, "1253": 0, "1254": 0, "1255": 0, "1256": 0, "1257": 0, "1258": 0, "1259": 0, "1260": 0, "1261": 0, "1262": 0, "1263": 0, "1264": 0, "1265": 0, "1274": 0, "1275": 0, "1276": 0, "1277": 0, "1278": 0, "1279": 0, "1280": 0, "1281": 0, "1282": 0, "1283": 0, "1284": 0, "1285": 0, "1286": 0, "1287": 0, "1289": 0, "1320": 17, "1328": 0, "1343": 0, "1358": 0, "1397": 0, "1398": 0, "1399": 0, "1400": 0, "1401": 0, "1402": 0, "1403": 0, "1404": 0, "1432": 0, "1433": 0, "1434": 0, "1435": 0, "1436": 0, "1437": 0, "1438": 0, "1439": 0, "1440": 0, "1441": 0, "1442": 0, "1443": 0, "1444": 0, "1445": 0, "1446": 0, "1447": 0, "1448": 0, "1449": 0, "1494": 0, "1495": 0, "1496": 0, "1497": 0, "1499": 0, "1525": 0, "1526": 0, "1527": 0, "1528": 0, "1529": 0, "1530": 0, "1532": 0, "1533": 0, "1535": 0, "1537": 0, "1538": 0, "1539": 0, "1540": 0, "1541": 0, "1542": 0, "1543": 0, "1544": 0, "1545": 0, "1547": 0, "1548": 0, "1549": 0, "1550": 0, "1551": 0, "1553": 0, "1554": 0, "1555": 0, "1556": 0, "1557": 0, "1558": 0, "1579": 0, "1580": 0, "1581": 0, "1582": 0, "1583": 0, "1584": 0, "1585": 0, "1587": 0, "1588": 0, "1589": 0, "1590": 0, "1591": 0, "1592": 0, "1594": 0, "1595": 0, "1597": 0, "1598": 0, "1600": 0, "1601": 0, "1602": 0, "1603": 0, "1604": 0, "1607": 0, "1608": 0, "1609": 0, "1610": 0, "1611": 0, "1612": 0, "1613": 0, "1614": 0, "1615": 0, "1616": 0, "1617": 0, "1618": 0, "1619": 0, "1620": 0, "1621": 0, "1622": 0, "1624": 0, "1625": 0, "1626": 0, "1627": 0, "1628": 0, "1629": 0, "1647": 10, "1699": 0, "1700": 0, "1701": 0, "1702": 0, "1703": 0, "1704": 0, "1705": 0, "1706": 0, "1707": 0, "1726": 0, "1727": 0, "1728": 0, "1750": 0, "1751": 0, "1753": 0, "1754": 0, "1755": 0, "1756": 0, "1757": 0, "1758": 0, "1759": 0, "1760": 0, "1761": 0, "1762": 0, "1804": 0, "1805": 0, "1806": 0, "1807": 0, "1808": 0, "1809": 0, "1810": 0, "1811": 0, "1812": 0, "1814": 0, "1815": 0, "1816": 0, "1817": 0, "1818": 0, "1819": 0, "1820": 0, "1821": 0, "1822": 0, "1823": 0, "1824": 0, "1825": 0, "1827": 0, "1828": 0, "1829": 0, "1830": 0, "1831": 0, "1832": 0, "1833": 0, "1834": 0, "1859": 0, "1863": 0, "1864": 0, "1865": 0, "1866": 0, "1868": 0, "1869": 0, "1870": 0, "1871": 0, "1872": 0, "1874": 0, "1875": 0, "1876": 0, "1877": 0, "1878": 0, "1879": 0, "1881": 0, "1882": 0, "1883": 0, "1884": 0, "1885": 0, "1886": 0, "1888": 0, "1911": 2, "1912": 1, "1913": 1, "1914": 0, "1916": 1, "1917": 1, "1918": 1, "1920": 23, "1921": 1, "1923": 22, "1924": 21, "1925": 0, "1926": 1, "1967": 1, "1968": 0, "1969": 0, "1970": 0, "1972": 1, "1973": 0, "1974": 1, "1975": 0, "1977": 1, "1978": 1, "1979": 0, "1980": 1, "1981": 1, "1983": 0, "1984": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2024": 0, "2025": 0, "2027": 0, "2050": 0, "2051": 0, "2052": 0, "2053": 0, "2054": 0, "2055": 0, "2056": 0, "2057": 0, "2058": 0, "2059": 0, "2060": 0, "2061": 0, "2063": 0, "2064": 0, "2065": 0, "2066": 0, "2067": 0, "2068": 0, "2069": 0, "2070": 0, "2071": 0, "2110": 0, "2111": 0, "2113": 0, "2114": 0, "2116": 0, "2117": 0, "2118": 0, "2119": 0, "2120": 0, "2121": 0, "2123": 0, "2124": 0, "2125": 0, "2126": 0, "2127": 0, "2128": 0, "2129": 0, "2130": 0, "2131": 0, "2155": 1, "2173": 1, "2174": 0, "2175": 1, "2176": 1, "2177": 1, "2178": 1, "2179": 1, "2180": 1, "2181": 3, "2182": 2, "2183": 1, "2185": 0, "2186": 1, "2187": 7, "2188": 7, "2189": 7, "2190": 6, "2191": 6, "2193": 120, "2196": 6, "2197": 6, "2198": 11, "2199": 7, "2201": 3, "2202": 2, "2203": 4, "2205": 1, "2206": 1, "2208": 16, "2210": 5, "2211": 3, "2212": 3, "2213": 3, "2214": 0, "2160": 6, "2161": 6, "2162": 6, "2163": 6, "2164": 114, "2165": 108, "2166": 15, "2167": 15, "2168": 15, "2170": 93, "2171": 6, "2237": 0, "2238": 0, "2239": 0, "2240": 0, "2241": 0, "2242": 0, "2243": 0, "2244": 0, "2245": 0, "2246": 0, "2247": 0, "2249": 0, "2250": 0, "2252": 0, "2298": 0, "2299": 0, "2300": 0, "2301": 0, "2302": 0, "2303": 0, "2304": 0, "2305": 0, "2306": 0, "2307": 0, "2308": 0, "2309": 0, "2310": 0, "2312": 0, "2313": 0, "2332": 0, "2365": 9, "2366": 9, "2367": 0, "2368": 0, "2369": 0, "2371": 0, "2372": 0, "2373": 0, "2375": 0, "2376": 0, "2377": 0, "2378": 0, "2379": 0, "2380": 0, "2381": 0, "2399": 0, "2400": 0, "2401": 0, "2433": 0, "2434": 0, "2435": 0, "2436": 0, "2437": 0, "2438": 0, "2439": 0, "2440": 0, "2470": 84, "2471": 83, "2472": 1, "2473": 1, "2474": 0, "2475": 1, "2476": 1, "2477": 1, "2478": 1, "2479": 1, "2526": 6, "2527": 0, "2528": 6, "2529": 6, "2531": 6, "2532": 6, "2533": 6, "2534": 6, "2536": 6, "2537": 0, "2538": 12, "2539": 6, "2540": 6, "2541": 6, "2542": 6, "2543": 6, "2544": 82, "2545": 78, "2546": 78, "2547": 231, "2550": 155, "2553": 310, "2554": 155, "2555": 155, "2556": 2, "2557": 153, "2558": 76, "2561": 72, "2564": 4, "2565": 80, "2607": 0, "2608": 0, "2610": 0, "2611": 0, "2613": 0, "2614": 0, "2615": 0, "2616": 0, "2617": 0, "2619": 0, "2620": 0, "2622": 0, "2641": 0, "2642": 0, "2643": 0, "2645": 0, "2646": 0, "2647": 0, "2648": 0, "2649": 0, "2651": 0, "2699": 0, "2700": 0, "2701": 0, "2703": 0, "2704": 0, "2705": 0, "2706": 0, "2707": 0, "2709": 0, "2708": 0, "2711": 0, "2713": 0, "2714": 0, "2715": 0, "2716": 0, "2717": 0, "2718": 0, "2719": 0, "2720": 0, "2721": 0, "2722": 0, "2723": 0, "2724": 0, "2725": 0, "2727": 0, "2726": 0, "2728": 0, "2730": 0, "2729": 0, "2732": 0, "2733": 0, "2731": 0, "2734": 0, "2735": 0, "2736": 0, "2737": 0, "2738": 0, "2739": 0, "2740": 0, "2741": 0, "2742": 0, "2743": 0, "2744": 0, "2745": 0, "2746": 0, "2747": 0, "2748": 0, "2749": 0, "2785": 0, "2808": 2, "2809": 0, "2810": 2, "2811": 0, "2812": 2, "2813": 8, "2814": 2, "2815": 9, "2816": 7, "2817": 7, "2818": 7, "2819": 2, "2820": 2, "2822": 0, "2848": 0, "2865": 2, "2904": 2, "2905": 2, "2906": 0, "2907": 0, "2908": 0, "2909": 0, "2910": 0, "2911": 0, "2912": 0, "2913": 0, "2915": 0, "2916": 0, "2917": 0, "2918": 0, "2919": 0, "2920": 0, "2939": 0, "2940": 0, "2977": 0, "2978": 0, "2979": 0, "2981": 0, "2982": 0, "2983": 0, "2984": 0, "2985": 0, "2986": 0, "2987": 0, "2988": 0, "2990": 0, "2991": 0, "2993": 0, "2995": 0, "2996": 0, "2998": 0, "3036": 0, "3037": 0, "3038": 0, "3040": 0, "3041": 0, "3042": 0, "3043": 0, "3044": 0, "3045": 0, "3046": 0, "3047": 0, "3049": 0, "3050": 0, "3052": 0, "3054": 0, "3055": 0, "3057": 0, "3063": 0, "3064": 0, "3065": 0, "3066": 0, "3067": 0, "3068": 0, "3069": 0, "3116": 0, "3117": 0, "3119": 0, "3120": 0, "3121": 0, "3122": 0, "3124": 0, "3125": 0, "3126": 0, "3128": 0, "3130": 0, "3131": 0, "3132": 0, "3133": 0, "3134": 0, "3136": 0, "3137": 0, "3138": 0, "3139": 0, "3140": 0, "3142": 0, "3143": 0, "3144": 0, "3145": 0, "3146": 0, "3148": 0, "3149": 0, "3150": 0, "3151": 0, "3152": 0, "3153": 0, "3154": 0, "3156": 0, "3157": 0, "3158": 0, "3193": 0, "3194": 0, "3195": 0, "3196": 0, "3197": 0, "3198": 0, "3199": 0, "3200": 0, "3201": 0, "3202": 0, "3204": 0, "3205": 0, "3206": 0, "3207": 0, "3208": 0, "3243": 0, "3244": 0, "3245": 0, "3246": 0, "3248": 0, "3249": 0, "3250": 0, "3251": 0, "3252": 0, "3255": 0, "3256": 0, "3257": 0, "3258": 0, "3259": 0, "3260": 0, "3265": 0, "3266": 0, "3282": 73, "3283": 1, "3284": 73, "3285": 73, "3288": 73, "3289": 73, "3290": 73, "3291": 73, "3292": 5, "3293": 73, "3294": 73, "3296": 0, "3297": 0, "3298": 0, "3299": 0, "3300": 0, "3301": 0, "3303": 73, "3304": 33, "3305": 33, "3307": 40, "3308": 40, "3309": 73, "3323": 2, "3324": 0, "3325": 2, "3326": 2, "3328": 0, "3329": 2, "3330": 2, "3331": 2, "3358": 0, "3359": 0, "3360": 0, "3361": 0, "3364": 0, "3365": 0, "3366": 0, "3367": 0, "3368": 0, "3369": 0, "3370": 0, "3371": 0, "3372": 0, "3374": 0, "3375": 0, "3376": 0, "3379": 0, "3380": 0, "3381": 0, "3382": 0, "3384": 0, "3385": 0, "3386": 0, "3448": 0, "3449": 0, "3450": 0, "3451": 0, "3452": 0, "3453": 0, "3455": 0, "3456": 0, "3457": 0, "3458": 0, "3460": 0, "3462": 0, "3464": 0, "3465": 0, "3466": 0, "3467": 0, "3468": 0, "3470": 0, "3471": 0, "3473": 0, "3474": 0, "3476": 0, "3477": 0, "3478": 0, "3479": 0, "3480": 0, "3481": 0, "3482": 0, "3483": 0, "3484": 0, "3487": 0, "3488": 0, "3491": 0, "3493": 0, "3494": 0, "3495": 0, "3496": 0, "3497": 0, "3498": 0, "3499": 0, "3500": 0, "3501": 0, "3504": 0, "3505": 0, "3506": 0, "3507": 0, "3508": 0, "3509": 0, "3510": 0, "3511": 0, "3512": 0, "3513": 0, "3514": 0, "3515": 0, "3517": 0, "3518": 0, "3520": 0, "3521": 0, "3522": 0, "3523": 0, "3524": 0, "3525": 0, "3526": 0, "3527": 0, "3530": 0, "3531": 0, "3532": 0, "3533": 0, "3535": 0, "3536": 0, "3534": 0, "3537": 0, "3538": 0, "3539": 0, "3541": 0, "3542": 0, "3543": 0, "3544": 0, "3545": 0, "3546": 0, "3547": 0, "3548": 0, "3550": 0, "3552": 0, "3556": 0, "3557": 0, "3558": 0, "3559": 0, "3560": 0, "3561": 0, "3563": 0, "3564": 0, "3566": 0, "3567": 0, "3568": 0, "3570": 0, "3571": 0, "3639": 0, "3640": 0, "3641": 0, "3642": 0, "3643": 0, "3644": 0, "3646": 0, "3647": 0, "3648": 0, "3649": 0, "3650": 0, "3651": 0, "3652": 0, "3654": 0, "3656": 0, "3657": 0, "3658": 0, "3659": 0, "3660": 0, "3661": 0, "3663": 0, "3666": 0, "3667": 0, "3668": 0, "3670": 0, "3671": 0, "3672": 0, "3674": 0, "3675": 0, "3676": 0, "3677": 0, "3678": 0, "3679": 0, "3680": 0, "3681": 0, "3682": 0, "3683": 0, "3686": 0, "3687": 0, "3688": 0, "3689": 0, "3690": 0, "3691": 0, "3692": 0, "3694": 0, "3696": 0, "3697": 0, "3698": 0, "3699": 0, "3700": 0, "3732": 1, "3733": 1, "3734": 1, "3735": 1, "3736": 1, "3737": 1, "3738": 1, "3739": 1, "3740": 19, "3741": 54, "3742": 36, "3743": 36, "3744": 17, "3745": 17, "3746": 17, "3747": 1, "3771": 0, "3802": 0, "3803": 0, "3804": 0, "3812": 0, "3813": 0, "3815": 0, "3816": 0, "3893": 0, "3898": 0, "3907": 0, "3908": 0, "3909": 0, "3910": 0, "3911": 0, "3912": 0, "3914": 0, "3916": 0, "3918": 0, "3919": 0, "3920": 0, "3922": 0, "3923": 0, "3924": 0, "3925": 0, "3926": 0, "3927": 0, "3928": 0, "3930": 0, "3931": 0, "3932": 0, "3934": 0, "3936": 0, "3937": 0, "3938": 0, "3939": 0, "3940": 0, "3942": 0, "3943": 0, "3941": 0, "3945": 0, "3947": 0, "3948": 0, "3951": 0, "3953": 0, "3954": 0, "3955": 0, "3956": 0, "3957": 0, "3958": 0, "3960": 0, "3961": 0, "3963": 0, "3964": 0, "3966": 0, "3970": 0, "3971": 0, "3972": 0, "3973": 0, "3974": 0, "3975": 0, "3977": 0, "3978": 0, "3979": 0, "3980": 0, "3981": 0, "3984": 0, "3985": 0, "3987": 0, "3988": 0, "3989": 0, "3990": 0, "3991": 0, "3993": 0, "3994": 0, "3995": 0, "3996": 0, "3997": 0, "3998": 0, "3999": 0, "4000": 0, "4002": 0, "4003": 0, "4004": 0, "4005": 0, "4007": 0, "4009": 0, "4010": 0, "4011": 0, "4012": 0, "4013": 0, "4014": 0, "4015": 0, "4016": 0, "4018": 0, "4019": 0, "4021": 0, "4022": 0, "4023": 0, "4025": 0, "4026": 0, "4024": 0, "4029": 0, "4030": 0, "4033": 0, "4034": 0, "4036": 0, "4037": 0, "4039": 0, "4041": 0, "4042": 0, "4044": 0, "4045": 0, "4047": 0, "4048": 0, "4049": 0, "4050": 0, "4051": 0, "4053": 0, "4056": 0, "4057": 0, "4058": 0, "4060": 0, "4062": 0, "4063": 0, "4064": 0, "4066": 0, "3895": 0, "3896": 0, "3899": 0, "3900": 0, "3902": 0, "3903": 0, "3905": 0, "4097": 0, "4098": 0, "4099": 0, "4106": 0, "4107": 0, "4108": 0, "4109": 0, "4110": 0, "4111": 0, "4112": 0, "4113": 0, "4115": 0, "4123": 0, "4124": 0, "4125": 0, "4126": 0, "4127": 0, "4128": 0, "4129": 0, "4131": 0, "4132": 0, "4133": 0, "4135": 0, "4136": 0, "4137": 0, "4141": 0, "4142": 0, "4143": 0, "4144": 0, "4146": 0, "4147": 0, "4148": 0, "4149": 0, "4150": 0, "4151": 0, "4152": 0, "4153": 0, "4195": 0, "4196": 0, "4197": 0, "4200": 0, "4203": 0, "4204": 0, "4205": 0, "4206": 0, "4207": 0, "4209": 0, "4213": 0, "4214": 0, "4216": 0, "4217": 0, "4218": 0, "4219": 0, "4220": 0, "4221": 0, "4225": 0, "4227": 0, "4228": 0, "4232": 0, "4233": 0, "4234": 0, "4235": 0, "4236": 0, "4238": 0, "4239": 0, "4240": 0, "4241": 0, "4243": 0, "4245": 0, "4246": 0, "4247": 0, "4250": 0, "4251": 0, "4253": 0, "4254": 0, "4256": 0, "4297": 1, "4299": 1, "4301": 1, "4302": 0, "4304": 1, "4316": 1, "4326": 1, "4327": 1, "4328": 0, "4329": 1, "4330": 1, "4331": 0, "4333": 1, "4334": 0, "4339": 1, "4340": 3, "4341": 1, "4342": 0, "4343": 0, "4345": 1, "4347": 0, "4348": 0, "4349": 0, "4350": 0, "4351": 0, "4352": 0, "4354": 1, "4355": 0, "4357": 0, "4358": 0, "4359": 0, "4360": 0, "4361": 0, "4362": 0, "4364": 0, "4365": 0, "4366": 0, "4367": 0, "4370": 0, "4371": 0, "4372": 0, "4373": 0, "4374": 0, "4375": 0, "4376": 0, "4377": 0, "4379": 0, "4380": 0, "4381": 0, "4382": 0, "4383": 0, "4384": 0, "4385": 0, "4386": 0, "4387": 0, "4388": 0, "4389": 0, "4390": 0, "4392": 0, "4307": 1, "4308": 1, "4309": 3, "4310": 2, "4311": 2, "4312": 2, "4313": 0, "4314": 1, "4320": 0, "4321": 0, "4322": 0, "4323": 0, "4324": 0, "4395": 0, "4396": 0, "4399": 0, "4400": 0, "4402": 0, "4403": 0, "4405": 0, "4406": 0, "4407": 0, "4408": 0, "4409": 0, "4410": 0, "4411": 0, "4413": 0, "4414": 0, "4416": 0, "4417": 0, "4418": 0, "4419": 0, "4420": 0, "4421": 0, "4422": 0, "4424": 0, "4425": 0, "4426": 0, "4427": 0, "4428": 0, "4429": 0, "4430": 0, "4431": 0, "4432": 0, "4433": 0, "4434": 0, "4435": 0, "4436": 0, "4437": 0, "4438": 0, "4439": 0, "4442": 0, "4443": 0, "4445": 0, "4447": 0, "4448": 0, "4450": 0, "4451": 0, "4452": 0, "4454": 0, "4501": 0, "4502": 0, "4504": 0, "4507": 0, "4508": 0, "4509": 0, "4510": 0, "4511": 0, "4512": 0, "4515": 0, "4516": 0, "4518": 0, "4519": 0, "4520": 0, "4523": 0, "4524": 0, "4525": 0, "4526": 0, "4527": 0, "4528": 0, "4529": 0, "4530": 0, "4531": 0, "4532": 0, "4533": 0, "4534": 0, "4535": 0, "4538": 0, "4540": 0, "4541": 0, "4542": 0, "4543": 0, "4544": 0, "4545": 0, "4546": 0, "4547": 0, "4549": 0, "4550": 0, "4551": 0, "4552": 0, "4553": 0, "4554": 0, "4555": 0, "4556": 0, "4557": 0, "4559": 0, "4560": 0, "4561": 0, "4562": 0, "4563": 0, "4564": 0, "4565": 0, "4566": 0, "4567": 0, "4568": 0, "4569": 0, "4571": 0, "4597": 0, "4599": 0, "4600": 0, "4603": 0, "4604": 0, "4605": 0, "4609": 0, "4610": 0, "4611": 0, "4613": 0, "4614": 0, "4615": 0, "4616": 0, "4617": 0, "4618": 0, "4620": 0, "4621": 0, "4622": 0, "4623": 0, "4624": 0, "4627": 0, "4628": 0, "4629": 0, "4630": 0, "4631": 0, "4632": 0, "4635": 0, "4636": 0, "4637": 0, "4638": 0, "4640": 0, "4641": 0, "4642": 0, "4643": 0, "4644": 0, "4645": 0, "4646": 0, "4653": 0, "4657": 0, "4658": 0, "4663": 0, "4664": 0, "4665": 0, "4671": 0, "4672": 0, "4673": 0, "4675": 0, "4678": 0, "4679": 0, "4680": 0, "4681": 0, "4682": 0, "4684": 0, "4685": 0, "4687": 0, "4688": 0, "4689": 0, "4690": 0, "4692": 0, "4693": 0, "4702": 0, "4704": 0, "4705": 0, "4706": 0, "4707": 0, "4709": 0, "4710": 0, "4712": 0, "4713": 0, "4715": 0, "4721": 0, "4722": 0, "4724": 0, "4725": 0, "4727": 0, "4728": 0, "4729": 0, "4730": 0, "4732": 0, "4733": 0, "4735": 0, "4736": 0, "4737": 0, "4739": 0, "4741": 0, "4742": 0, "4744": 0, "4745": 0, "4748": 0, "4749": 0, "4752": 0, "4753": 0, "4756": 0, "4758": 0, "4760": 0, "4763": 0, "4764": 0, "4767": 0, "4768": 0, "4770": 0, "4771": 0, "4772": 0, "4773": 0, "4774": 0, "4775": 0, "4776": 0, "4777": 0, "4778": 0, "4779": 0, "4780": 0, "4782": 0, "4783": 0, "4785": 0, "4787": 0, "4788": 0, "4789": 0, "4790": 0, "4793": 0, "4794": 0, "4795": 0, "4796": 0, "4797": 0, "4798": 0, "4799": 0, "4802": 0, "4803": 0, "4804": 0, "4805": 0, "4807": 0, "4808": 0, "4716": 0, "4717": 0, "4718": 0, "4719": 0, "4826": 0, "4827": 0, "4828": 0, "4830": 0, "4831": 0, "4832": 0, "4833": 0, "4834": 0, "4835": 0, "4837": 0, "4838": 0, "4839": 0, "4840": 0, "4841": 0, "4842": 0, "4843": 0, "4845": 0, "4846": 0, "4847": 0, "4849": 0, "4886": 19, "4887": 19, "4889": 58, "4890": 19, "4891": 19, "4892": 19, "4893": 38, "4894": 19, "4895": 55, "4896": 90, "4897": 54, "4898": 54, "4899": 17, "4900": 17, "4901": 19, "4902": 0, "4903": 0, "4904": 0, "4905": 0, "4906": 0, "4907": 0, "4908": 0, "4909": 0, "4910": 0, "4911": 0, "4912": 0, "4913": 0, "4914": 0, "4915": 0, "4916": 0, "4917": 0, "4918": 0, "4919": 0, "4920": 0, "4921": 0, "4922": 0, "4923": 0, "4942": 2, "4943": 2, "4944": 2, "4945": 21, "4946": 19, "4947": 19, "4948": 19, "4950": 19, "4951": 227, "4952": 2, "4984": 0, "4985": 0, "4986": 0, "4987": 0, "4988": 0, "4989": 0, "4990": 0, "4991": 0, "4992": 0, "4993": 0, "4994": 0, "4995": 0, "4996": 0, "4997": 0, "4998": 0, "4999": 0, "5000": 0, "5001": 0, "5002": 0, "5004": 0, "5005": 0, "5006": 0, "5007": 0, "5008": 0, "5010": 0, "5011": 0, "5012": 0, "5013": 0, "5040": 0, "5041": 0, "5042": 0, "5043": 0, "5044": 0, "5045": 0, "5046": 0, "5047": 0, "5048": 0, "5049": 0, "5050": 0, "5051": 0, "5052": 0, "5053": 0, "5054": 0, "5055": 0, "5057": 0, "5058": 0, "5059": 0, "5060": 0, "5072": 1, "5079": 1, "5096": 1, "5114": 1, "5115": 1, "5130": 1, "5131": 1, "5073": 0, "5074": 0, "5075": 0, "5076": 0, "5077": 0, "5091": 0, "5092": 0, "5093": 0, "5094": 0, "5108": 0, "5109": 0, "5110": 0, "5111": 0, "5112": 0, "5128": 0, "5144": 0, "5173": 1, "5211": 1, "5212": 1, "5230": 1, "5231": 1, "5249": 1, "5174": 0, "5175": 0, "5176": 0, "5178": 0, "5179": 0, "5180": 0, "5182": 0, "5183": 0, "5184": 0, "5185": 0, "5186": 0, "5187": 0, "5188": 0, "5189": 0, "5191": 0, "5192": 0, "5193": 0, "5194": 0, "5195": 0, "5197": 0, "5198": 0, "5200": 0, "5201": 0, "5202": 0, "5203": 0, "5204": 0, "5205": 0, "5206": 0, "5207": 0, "5208": 0, "5209": 0, "5228": 0, "5247": 0, "5253": 0, "5254": 0, "5255": 0, "5256": 0, "5257": 0, "5258": 0, "5260": 0, "5261": 0, "5262": 0}}
+ git checkout 6f54459aa0248bf1467ad12ee6333d8bc924a642
Note: switching to '6f54459aa0248bf1467ad12ee6333d8bc924a642'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 6f54459aa0 Merge pull request #19926 from Smit-create/wiener_typo
+ git apply /root/pre_state.patch
error: unrecognized input
