{"instance_id": "sympy__sympy-23534", "repo": "sympy/sympy", "version": "1.11", "environment_setup_commit": "9a6104eab0ea7ac191a09c24f3e2d79dcd66bda5", "patch_list": ["diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-23534.py\nnew file mode 100644\nindex e69de29..61388c1 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-23534.py\n@@ -0,0 +1,14 @@\n+from sympy import symbols, Function\n+from sympy.core.function import UndefinedFunction\n+\n+def test_symbols_with_extra_parentheses():\n+    # Using symbols with an extra layer of parentheses\n+    q, u = symbols(('q:2', 'u:2'), cls=Function)\n+    \n+    # Check the type of the first element of q\n+    assert isinstance(q[0], UndefinedFunction), \\\n+        \"The type should be UndefinedFunction, but it is not due to the bug\"\n+\n+    # Check the type of the first element of u\n+    assert isinstance(u[0], UndefinedFunction), \\\n+        \"The type should be UndefinedFunction, but it is not due to the bug\"\n"], "arch": "x86_64", "base_commit": "832c24fec1046eaa544a4cab4c69e3af3e651759", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-23534.py"], "coverage_files": ["sympy/core/symbol.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/core/symbol\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-23534.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}