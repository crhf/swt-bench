+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD fe886eee36be8022f34cfe59aa61ff1c21fe01d9
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit fe886eee36be8022f34cfe59aa61ff1c21fe01d9
Author: Jon Dufresne <jon.dufresne@gmail.com>
Date:   Sun Dec 20 22:56:58 2020 -0800

    Corrected code-block directives in docs/ref/models/meta.txt.

diff --git a/docs/ref/models/meta.txt b/docs/ref/models/meta.txt
index a02c357c40..251705d84e 100644
--- a/docs/ref/models/meta.txt
+++ b/docs/ref/models/meta.txt
@@ -44,7 +44,7 @@ Retrieving a single field instance of a model by name
     :class:`~django.core.exceptions.FieldDoesNotExist` exception will be
     raised.
 
-    .. code-block:: python
+    .. code-block:: pycon
 
         >>> from django.contrib.auth.models import User
 
@@ -84,7 +84,7 @@ Retrieving all field instances of a model
         as :class:`~django.db.models.ManyToManyField`, or
         :class:`~django.db.models.ForeignKey`) that start with a "+".
 
-    .. code-block:: python
+    .. code-block:: pycon
 
         >>> from django.contrib.auth.models import User
         >>> User._meta.get_fields()
+ git diff fe886eee36be8022f34cfe59aa61ff1c21fe01d9
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2.10 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (2025.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2.10->Django==3.2) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.2
    Uninstalling Django-3.2:
      Successfully uninstalled Django-3.2
  Running setup.py develop for Django
Successfully installed Django-3.2
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git apply -v -
Checking patch tests/test_coverup_django__django-13794.py...
Applied patch tests/test_coverup_django__django-13794.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/utils/functional\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-13794
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/utils/functional\\.py)']
0.06 /testbed/django/utils/functional.py(1): import copy
0.06 /testbed/django/utils/functional.py(2): import itertools
0.06 /testbed/django/utils/functional.py(3): import operator
0.06 /testbed/django/utils/functional.py(4): from functools import total_ordering, wraps
0.06 /testbed/django/utils/functional.py(7): class cached_property:
0.06 /testbed/django/utils/functional.py(7): class cached_property:
0.06 /testbed/django/utils/functional.py(16):     """
0.06 /testbed/django/utils/functional.py(17):     name = None
0.06 /testbed/django/utils/functional.py(19):     @staticmethod
0.06 /testbed/django/utils/functional.py(26):     def __init__(self, func, name=None):
0.06 /testbed/django/utils/functional.py(30):     def __set_name__(self, owner, name):
0.06 /testbed/django/utils/functional.py(40):     def __get__(self, instance, cls=None):
0.06 /testbed/django/utils/functional.py(52): class classproperty:
0.06 /testbed/django/utils/functional.py(52): class classproperty:
0.06 /testbed/django/utils/functional.py(56):     """
0.06 /testbed/django/utils/functional.py(57):     def __init__(self, method=None):
0.06 /testbed/django/utils/functional.py(60):     def __get__(self, instance, cls=None):
0.06 /testbed/django/utils/functional.py(63):     def getter(self, method):
0.06 /testbed/django/utils/functional.py(68): class Promise:
0.06 /testbed/django/utils/functional.py(68): class Promise:
0.06 /testbed/django/utils/functional.py(72):     """
0.06 /testbed/django/utils/functional.py(73):     pass
0.06 /testbed/django/utils/functional.py(76): def lazy(func, *resultclasses):
0.06 /testbed/django/utils/functional.py(194): def _lazy_proxy_unpickle(func, args, kwargs, *resultclasses):
0.06 /testbed/django/utils/functional.py(198): def lazystr(text):
0.06 /testbed/django/utils/functional.py(205): def keep_lazy(*resultclasses):
0.06 /testbed/django/utils/functional.py(227): def keep_lazy_text(func):
0.06 /testbed/django/utils/functional.py(234): empty = object()
0.06 /testbed/django/utils/functional.py(237): def new_method_proxy(func):
0.06 /testbed/django/utils/functional.py(245): class LazyObject:
0.06 /testbed/django/utils/functional.py(245): class LazyObject:
0.06 /testbed/django/utils/functional.py(252):     """
0.06 /testbed/django/utils/functional.py(255):     _wrapped = None
0.06 /testbed/django/utils/functional.py(257):     def __init__(self):
0.06 /testbed/django/utils/functional.py(262):     __getattr__ = new_method_proxy(getattr)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(264):     def __setattr__(self, name, value):
0.06 /testbed/django/utils/functional.py(273):     def __delattr__(self, name):
0.06 /testbed/django/utils/functional.py(280):     def _setup(self):
0.06 /testbed/django/utils/functional.py(300):     def __reduce__(self):
0.06 /testbed/django/utils/functional.py(305):     def __copy__(self):
0.06 /testbed/django/utils/functional.py(314):     def __deepcopy__(self, memo):
0.06 /testbed/django/utils/functional.py(323):     __bytes__ = new_method_proxy(bytes)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(324):     __str__ = new_method_proxy(str)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(325):     __bool__ = new_method_proxy(bool)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(328):     __dir__ = new_method_proxy(dir)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(332):     __class__ = property(new_method_proxy(operator.attrgetter("__class__")))
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(333):     __eq__ = new_method_proxy(operator.eq)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(334):     __lt__ = new_method_proxy(operator.lt)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(335):     __gt__ = new_method_proxy(operator.gt)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(336):     __ne__ = new_method_proxy(operator.ne)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(337):     __hash__ = new_method_proxy(hash)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(340):     __getitem__ = new_method_proxy(operator.getitem)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(341):     __setitem__ = new_method_proxy(operator.setitem)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(342):     __delitem__ = new_method_proxy(operator.delitem)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(343):     __iter__ = new_method_proxy(iter)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(344):     __len__ = new_method_proxy(len)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(345):     __contains__ = new_method_proxy(operator.contains)
0.06 /testbed/django/utils/functional.py(238):     def inner(self, *args):
0.06 /testbed/django/utils/functional.py(242):     return inner
0.06 /testbed/django/utils/functional.py(348): def unpickle_lazyobject(wrapped):
0.06 /testbed/django/utils/functional.py(356): class SimpleLazyObject(LazyObject):
0.06 /testbed/django/utils/functional.py(356): class SimpleLazyObject(LazyObject):
0.06 /testbed/django/utils/functional.py(362):     """
0.06 /testbed/django/utils/functional.py(363):     def __init__(self, func):
0.06 /testbed/django/utils/functional.py(375):     def _setup(self):
0.06 /testbed/django/utils/functional.py(380):     def __repr__(self):
0.06 /testbed/django/utils/functional.py(387):     def __copy__(self):
0.06 /testbed/django/utils/functional.py(396):     def __deepcopy__(self, memo):
0.06 /testbed/django/utils/functional.py(406): def partition(predicate, values):
0.06 /testbed/django/utils/functional.py(27):         self.real_func = func
0.06 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.06 /testbed/django/utils/functional.py(31):         if self.name is None:
0.06 /testbed/django/utils/functional.py(32):             self.name = name
0.06 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.09 /testbed/django/utils/functional.py(27):         self.real_func = func
0.09 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.09 /testbed/django/utils/functional.py(31):         if self.name is None:
0.09 /testbed/django/utils/functional.py(32):             self.name = name
0.09 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(90):         """
0.09 /testbed/django/utils/functional.py(91):         __prepared = False
0.09 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.09 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.09 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.09 /testbed/django/utils/functional.py(109):         @classmethod
0.09 /testbed/django/utils/functional.py(129):         @classmethod
0.09 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.09 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.09 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.09 /testbed/django/utils/functional.py(148):         def __cast(self):
0.09 /testbed/django/utils/functional.py(156):         def __str__(self):
0.09 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.09 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.09 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.09 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.09 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.09 /testbed/django/utils/functional.py(186):     @wraps(func)
0.09 /testbed/django/utils/functional.py(191):     return __wrapper__
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(90):         """
0.09 /testbed/django/utils/functional.py(91):         __prepared = False
0.09 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.09 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.09 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.09 /testbed/django/utils/functional.py(109):         @classmethod
0.09 /testbed/django/utils/functional.py(129):         @classmethod
0.09 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.09 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.09 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.09 /testbed/django/utils/functional.py(148):         def __cast(self):
0.09 /testbed/django/utils/functional.py(156):         def __str__(self):
0.09 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.09 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.09 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.09 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.09 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.09 /testbed/django/utils/functional.py(186):     @wraps(func)
0.09 /testbed/django/utils/functional.py(191):     return __wrapper__
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.09 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.09 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.09 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.09 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.09 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.09 /testbed/django/utils/functional.py(125):                 cls.__str__ = cls.__text_cast
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.09 /testbed/django/utils/functional.py(373):         super().__init__()
0.09 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.09 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.09 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(90):         """
0.09 /testbed/django/utils/functional.py(91):         __prepared = False
0.09 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.09 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.09 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.09 /testbed/django/utils/functional.py(109):         @classmethod
0.09 /testbed/django/utils/functional.py(129):         @classmethod
0.09 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.09 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.09 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.09 /testbed/django/utils/functional.py(148):         def __cast(self):
0.09 /testbed/django/utils/functional.py(156):         def __str__(self):
0.09 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.09 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.09 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.09 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.09 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.09 /testbed/django/utils/functional.py(186):     @wraps(func)
0.09 /testbed/django/utils/functional.py(191):     return __wrapper__
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.09 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.09 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.09 /testbed/django/utils/functional.py(137):             return __wrapper__
0.09 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.09 /testbed/django/utils/functional.py(117):                             continue
0.09 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.09 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.09 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.09 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.09 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.09 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.09 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.09 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.09 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.09 /testbed/django/utils/functional.py(84):     @total_ordering
0.09 /testbed/django/utils/functional.py(90):         """
0.09 /testbed/django/utils/functional.py(91):         __prepared = False
0.09 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.09 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.09 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.09 /testbed/django/utils/functional.py(109):         @classmethod
0.09 /testbed/django/utils/functional.py(129):         @classmethod
0.09 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.09 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.09 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.09 /testbed/django/utils/functional.py(148):         def __cast(self):
0.09 /testbed/django/utils/functional.py(156):         def __str__(self):
0.09 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.09 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.09 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.09 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.09 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.09 /testbed/django/utils/functional.py(186):     @wraps(func)
0.09 /testbed/django/utils/functional.py(191):     return __wrapper__
0.09 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.09 /testbed/django/utils/functional.py(94):             self.__args = args
0.09 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.09 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.09 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.10 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.10 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.10 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.10 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.10 /testbed/django/utils/functional.py(94):             self.__args = args
0.10 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.10 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(84):     @total_ordering
0.10 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.10 /testbed/django/utils/functional.py(84):     @total_ordering
0.10 /testbed/django/utils/functional.py(90):         """
0.10 /testbed/django/utils/functional.py(91):         __prepared = False
0.10 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.10 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.10 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.10 /testbed/django/utils/functional.py(109):         @classmethod
0.10 /testbed/django/utils/functional.py(129):         @classmethod
0.10 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.10 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.10 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.10 /testbed/django/utils/functional.py(148):         def __cast(self):
0.10 /testbed/django/utils/functional.py(156):         def __str__(self):
0.10 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.10 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.10 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.10 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.10 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.10 /testbed/django/utils/functional.py(186):     @wraps(func)
0.10 /testbed/django/utils/functional.py(191):     return __wrapper__
0.10 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.10 /testbed/django/utils/functional.py(94):             self.__args = args
0.10 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.10 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.10 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.10 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.10 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.10 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.10 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(84):     @total_ordering
0.10 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.10 /testbed/django/utils/functional.py(84):     @total_ordering
0.10 /testbed/django/utils/functional.py(90):         """
0.10 /testbed/django/utils/functional.py(91):         __prepared = False
0.10 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.10 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.10 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.10 /testbed/django/utils/functional.py(109):         @classmethod
0.10 /testbed/django/utils/functional.py(129):         @classmethod
0.10 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.10 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.10 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.10 /testbed/django/utils/functional.py(148):         def __cast(self):
0.10 /testbed/django/utils/functional.py(156):         def __str__(self):
0.10 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.10 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.10 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.10 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.10 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.10 /testbed/django/utils/functional.py(186):     @wraps(func)
0.10 /testbed/django/utils/functional.py(191):     return __wrapper__
0.10 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.10 /testbed/django/utils/functional.py(94):             self.__args = args
0.10 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.10 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.10 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.10 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.10 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.10 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.10 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(84):     @total_ordering
0.10 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.10 /testbed/django/utils/functional.py(84):     @total_ordering
0.10 /testbed/django/utils/functional.py(90):         """
0.10 /testbed/django/utils/functional.py(91):         __prepared = False
0.10 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.10 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.10 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.10 /testbed/django/utils/functional.py(109):         @classmethod
0.10 /testbed/django/utils/functional.py(129):         @classmethod
0.10 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.10 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.10 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.10 /testbed/django/utils/functional.py(148):         def __cast(self):
0.10 /testbed/django/utils/functional.py(156):         def __str__(self):
0.10 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.10 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.10 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.10 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.10 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.10 /testbed/django/utils/functional.py(186):     @wraps(func)
0.10 /testbed/django/utils/functional.py(191):     return __wrapper__
0.10 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.10 /testbed/django/utils/functional.py(94):             self.__args = args
0.10 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.10 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.10 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.10 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.10 /testbed/django/utils/functional.py(137):             return __wrapper__
0.10 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.10 /testbed/django/utils/functional.py(117):                             continue
0.10 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.10 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.10 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.10 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.10 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.10 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.10 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.10 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.10 /testbed/django/utils/functional.py(94):             self.__args = args
0.10 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.10 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.10 /testbed/django/utils/functional.py(94):             self.__args = args
0.10 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.10 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.10 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.10 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.10 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.10 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.11 /testbed/django/utils/functional.py(27):         self.real_func = func
0.11 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.11 /testbed/django/utils/functional.py(31):         if self.name is None:
0.11 /testbed/django/utils/functional.py(32):             self.name = name
0.11 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.11 /testbed/django/utils/functional.py(27):         self.real_func = func
0.11 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.11 /testbed/django/utils/functional.py(31):         if self.name is None:
0.11 /testbed/django/utils/functional.py(32):             self.name = name
0.11 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.15 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.15 /testbed/django/utils/functional.py(373):         super().__init__()
0.15 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.15 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.15 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.15 /testbed/django/utils/functional.py(27):         self.real_func = func
0.15 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.15 /testbed/django/utils/functional.py(31):         if self.name is None:
0.15 /testbed/django/utils/functional.py(32):             self.name = name
0.15 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.16 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.16 /testbed/django/utils/functional.py(373):         super().__init__()
0.16 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.16 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.16 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.16 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.16 /testbed/django/utils/functional.py(373):         super().__init__()
0.16 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.16 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.16 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.16 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.16 /testbed/django/utils/functional.py(373):         super().__init__()
0.16 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.16 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.16 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.16 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.16 /testbed/django/utils/functional.py(373):         super().__init__()
0.16 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.16 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.16 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.16 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.16 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.16 /testbed/django/utils/functional.py(215):     def decorator(func):
0.16 /testbed/django/utils/functional.py(224):     return decorator
0.16 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(90):         """
0.16 /testbed/django/utils/functional.py(91):         __prepared = False
0.16 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.16 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.16 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.16 /testbed/django/utils/functional.py(109):         @classmethod
0.16 /testbed/django/utils/functional.py(129):         @classmethod
0.16 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.16 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.16 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.16 /testbed/django/utils/functional.py(148):         def __cast(self):
0.16 /testbed/django/utils/functional.py(156):         def __str__(self):
0.16 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.16 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.16 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.16 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.16 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.16 /testbed/django/utils/functional.py(186):     @wraps(func)
0.16 /testbed/django/utils/functional.py(191):     return __wrapper__
0.16 /testbed/django/utils/functional.py(218):         @wraps(func)
0.16 /testbed/django/utils/functional.py(223):         return wrapper
0.16 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.16 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.16 /testbed/django/utils/functional.py(215):     def decorator(func):
0.16 /testbed/django/utils/functional.py(224):     return decorator
0.16 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(90):         """
0.16 /testbed/django/utils/functional.py(91):         __prepared = False
0.16 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.16 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.16 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.16 /testbed/django/utils/functional.py(109):         @classmethod
0.16 /testbed/django/utils/functional.py(129):         @classmethod
0.16 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.16 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.16 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.16 /testbed/django/utils/functional.py(148):         def __cast(self):
0.16 /testbed/django/utils/functional.py(156):         def __str__(self):
0.16 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.16 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.16 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.16 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.16 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.16 /testbed/django/utils/functional.py(186):     @wraps(func)
0.16 /testbed/django/utils/functional.py(191):     return __wrapper__
0.16 /testbed/django/utils/functional.py(218):         @wraps(func)
0.16 /testbed/django/utils/functional.py(223):         return wrapper
0.16 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.16 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.16 /testbed/django/utils/functional.py(215):     def decorator(func):
0.16 /testbed/django/utils/functional.py(224):     return decorator
0.16 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(90):         """
0.16 /testbed/django/utils/functional.py(91):         __prepared = False
0.16 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.16 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.16 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.16 /testbed/django/utils/functional.py(109):         @classmethod
0.16 /testbed/django/utils/functional.py(129):         @classmethod
0.16 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.16 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.16 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.16 /testbed/django/utils/functional.py(148):         def __cast(self):
0.16 /testbed/django/utils/functional.py(156):         def __str__(self):
0.16 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.16 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.16 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.16 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.16 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.16 /testbed/django/utils/functional.py(186):     @wraps(func)
0.16 /testbed/django/utils/functional.py(191):     return __wrapper__
0.16 /testbed/django/utils/functional.py(218):         @wraps(func)
0.16 /testbed/django/utils/functional.py(223):         return wrapper
0.16 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.16 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.16 /testbed/django/utils/functional.py(215):     def decorator(func):
0.16 /testbed/django/utils/functional.py(224):     return decorator
0.16 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.16 /testbed/django/utils/functional.py(84):     @total_ordering
0.16 /testbed/django/utils/functional.py(90):         """
0.16 /testbed/django/utils/functional.py(91):         __prepared = False
0.16 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.16 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.16 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.16 /testbed/django/utils/functional.py(109):         @classmethod
0.16 /testbed/django/utils/functional.py(129):         @classmethod
0.16 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.16 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.16 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.16 /testbed/django/utils/functional.py(148):         def __cast(self):
0.16 /testbed/django/utils/functional.py(156):         def __str__(self):
0.16 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.16 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.16 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.16 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.16 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.16 /testbed/django/utils/functional.py(186):     @wraps(func)
0.16 /testbed/django/utils/functional.py(191):     return __wrapper__
0.16 /testbed/django/utils/functional.py(218):         @wraps(func)
0.16 /testbed/django/utils/functional.py(223):         return wrapper
0.16 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.16 /testbed/django/utils/functional.py(373):         super().__init__()
0.16 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.16 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.16 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.16 /testbed/django/utils/functional.py(27):         self.real_func = func
0.16 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.16 /testbed/django/utils/functional.py(27):         self.real_func = func
0.16 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.16 /testbed/django/utils/functional.py(27):         self.real_func = func
0.16 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.16 /testbed/django/utils/functional.py(31):         if self.name is None:
0.16 /testbed/django/utils/functional.py(32):             self.name = name
0.16 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.16 /testbed/django/utils/functional.py(31):         if self.name is None:
0.16 /testbed/django/utils/functional.py(32):             self.name = name
0.16 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.16 /testbed/django/utils/functional.py(31):         if self.name is None:
0.16 /testbed/django/utils/functional.py(32):             self.name = name
0.16 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.22 /testbed/django/utils/functional.py(94):             self.__args = args
0.22 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.22 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.22 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.22 /testbed/django/utils/functional.py(373):         super().__init__()
0.22 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.22 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.22 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.22 /testbed/django/utils/functional.py(231):     return keep_lazy(str)(func)
0.22 /testbed/django/utils/functional.py(212):     if not resultclasses:
0.22 /testbed/django/utils/functional.py(215):     def decorator(func):
0.22 /testbed/django/utils/functional.py(224):     return decorator
0.22 /testbed/django/utils/functional.py(216):         lazy_func = lazy(func, *resultclasses)
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.22 /testbed/django/utils/functional.py(84):     @total_ordering
0.22 /testbed/django/utils/functional.py(90):         """
0.22 /testbed/django/utils/functional.py(91):         __prepared = False
0.22 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.22 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.22 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.22 /testbed/django/utils/functional.py(109):         @classmethod
0.22 /testbed/django/utils/functional.py(129):         @classmethod
0.22 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.22 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.22 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.22 /testbed/django/utils/functional.py(148):         def __cast(self):
0.22 /testbed/django/utils/functional.py(156):         def __str__(self):
0.22 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.22 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.22 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.22 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.22 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.22 /testbed/django/utils/functional.py(186):     @wraps(func)
0.22 /testbed/django/utils/functional.py(191):     return __wrapper__
0.22 /testbed/django/utils/functional.py(218):         @wraps(func)
0.22 /testbed/django/utils/functional.py(223):         return wrapper
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.24 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.24 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.24 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.24 /testbed/django/utils/functional.py(137):             return __wrapper__
0.24 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.24 /testbed/django/utils/functional.py(117):                             continue
0.24 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.24 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.24 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.24 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.24 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.24 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.24 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.24 /testbed/django/utils/functional.py(125):                 cls.__str__ = cls.__text_cast
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.24 /testbed/django/utils/functional.py(94):             self.__args = args
0.24 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.24 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.24 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.24 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.24 /testbed/django/utils/functional.py(373):         super().__init__()
0.24 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.24 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.24 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.24 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.24 /testbed/django/utils/functional.py(373):         super().__init__()
0.24 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.24 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.24 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.24 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.24 /testbed/django/utils/functional.py(373):         super().__init__()
0.24 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.24 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.24 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.25 /testbed/django/utils/functional.py(84):     @total_ordering
0.25 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.25 /testbed/django/utils/functional.py(84):     @total_ordering
0.25 /testbed/django/utils/functional.py(90):         """
0.25 /testbed/django/utils/functional.py(91):         __prepared = False
0.25 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.25 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.25 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.25 /testbed/django/utils/functional.py(109):         @classmethod
0.25 /testbed/django/utils/functional.py(129):         @classmethod
0.25 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.25 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.25 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.25 /testbed/django/utils/functional.py(148):         def __cast(self):
0.25 /testbed/django/utils/functional.py(156):         def __str__(self):
0.25 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.25 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.25 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.25 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.25 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.25 /testbed/django/utils/functional.py(186):     @wraps(func)
0.25 /testbed/django/utils/functional.py(191):     return __wrapper__
0.25 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.25 /testbed/django/utils/functional.py(373):         super().__init__()
0.25 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.25 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.25 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.25 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.25 /testbed/django/utils/functional.py(373):         super().__init__()
0.25 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.25 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.25 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.25 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.25 /testbed/django/utils/functional.py(373):         super().__init__()
0.25 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.25 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.25 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.25 /testbed/django/utils/functional.py(27):         self.real_func = func
0.25 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.25 /testbed/django/utils/functional.py(27):         self.real_func = func
0.25 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.25 /testbed/django/utils/functional.py(31):         if self.name is None:
0.25 /testbed/django/utils/functional.py(32):             self.name = name
0.25 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.25 /testbed/django/utils/functional.py(31):         if self.name is None:
0.25 /testbed/django/utils/functional.py(32):             self.name = name
0.25 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.25 /testbed/django/utils/functional.py(27):         self.real_func = func
0.25 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.25 /testbed/django/utils/functional.py(31):         if self.name is None:
0.25 /testbed/django/utils/functional.py(32):             self.name = name
0.25 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.25 /testbed/django/utils/functional.py(27):         self.real_func = func
0.25 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.25 /testbed/django/utils/functional.py(31):         if self.name is None:
0.25 /testbed/django/utils/functional.py(32):             self.name = name
0.25 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.26 /testbed/django/utils/functional.py(27):         self.real_func = func
0.26 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.26 /testbed/django/utils/functional.py(31):         if self.name is None:
0.26 /testbed/django/utils/functional.py(32):             self.name = name
0.26 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.26 /testbed/django/utils/functional.py(27):         self.real_func = func
0.26 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.26 /testbed/django/utils/functional.py(31):         if self.name is None:
0.26 /testbed/django/utils/functional.py(32):             self.name = name
0.26 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.26 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.26 /testbed/django/utils/functional.py(94):             self.__args = args
0.26 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.26 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.26 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.26 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.26 /testbed/django/utils/functional.py(94):             self.__args = args
0.26 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.26 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.26 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.26 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.26 /testbed/django/utils/functional.py(94):             self.__args = args
0.26 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.26 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.26 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(27):         self.real_func = func
0.26 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.26 /testbed/django/utils/functional.py(27):         self.real_func = func
0.26 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.26 /testbed/django/utils/functional.py(31):         if self.name is None:
0.26 /testbed/django/utils/functional.py(32):             self.name = name
0.26 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.26 /testbed/django/utils/functional.py(31):         if self.name is None:
0.26 /testbed/django/utils/functional.py(32):             self.name = name
0.26 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.26 /testbed/django/utils/functional.py(373):         super().__init__()
0.26 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.26 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.26 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.26 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.26 /testbed/django/utils/functional.py(94):             self.__args = args
0.26 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.26 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.26 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.27 /testbed/django/utils/functional.py(373):         super().__init__()
0.27 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.27 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.27 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.27 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.27 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.27 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.27 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.27 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.27 /testbed/django/utils/functional.py(125):                 cls.__str__ = cls.__text_cast
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(84):     @total_ordering
0.27 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.27 /testbed/django/utils/functional.py(84):     @total_ordering
0.27 /testbed/django/utils/functional.py(90):         """
0.27 /testbed/django/utils/functional.py(91):         __prepared = False
0.27 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.27 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.27 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.27 /testbed/django/utils/functional.py(109):         @classmethod
0.27 /testbed/django/utils/functional.py(129):         @classmethod
0.27 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.27 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.27 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.27 /testbed/django/utils/functional.py(148):         def __cast(self):
0.27 /testbed/django/utils/functional.py(156):         def __str__(self):
0.27 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.27 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.27 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.27 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.27 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.27 /testbed/django/utils/functional.py(186):     @wraps(func)
0.27 /testbed/django/utils/functional.py(191):     return __wrapper__
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.27 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.27 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.27 /testbed/django/utils/functional.py(137):             return __wrapper__
0.27 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.27 /testbed/django/utils/functional.py(117):                             continue
0.27 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.27 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.27 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.27 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.27 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.27 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.27 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.27 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.27 /testbed/django/utils/functional.py(373):         super().__init__()
0.27 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.27 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.27 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(27):         self.real_func = func
0.27 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.27 /testbed/django/utils/functional.py(31):         if self.name is None:
0.27 /testbed/django/utils/functional.py(32):             self.name = name
0.27 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.27 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.27 /testbed/django/utils/functional.py(94):             self.__args = args
0.27 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.27 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.27 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.27 /testbed/django/utils/functional.py(27):         self.real_func = func
0.27 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.27 /testbed/django/utils/functional.py(27):         self.real_func = func
0.27 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.27 /testbed/django/utils/functional.py(31):         if self.name is None:
0.27 /testbed/django/utils/functional.py(32):             self.name = name
0.27 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.27 /testbed/django/utils/functional.py(31):         if self.name is None:
0.27 /testbed/django/utils/functional.py(32):             self.name = name
0.27 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.28 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.28 /testbed/django/utils/functional.py(94):             self.__args = args
0.28 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.28 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.28 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.28 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.28 /testbed/django/utils/functional.py(94):             self.__args = args
0.28 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.28 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.28 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.28 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.28 /testbed/django/utils/functional.py(94):             self.__args = args
0.28 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.28 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.28 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.28 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.28 /testbed/django/utils/functional.py(94):             self.__args = args
0.28 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.28 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.28 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.28 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.28 /testbed/django/utils/functional.py(94):             self.__args = args
0.28 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.28 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.28 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.30 /testbed/django/utils/functional.py(373):         super().__init__()
0.30 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.30 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.30 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.30 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.30 /testbed/django/utils/functional.py(373):         super().__init__()
0.30 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.30 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.30 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.30 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.30 /testbed/django/utils/functional.py(373):         super().__init__()
0.30 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.30 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.30 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.30 /testbed/django/utils/functional.py(373):         super().__init__()
0.30 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.30 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.30 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.30 /testbed/django/utils/functional.py(94):             self.__args = args
0.30 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.30 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.30 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(27):         self.real_func = func
0.30 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.30 /testbed/django/utils/functional.py(31):         if self.name is None:
0.30 /testbed/django/utils/functional.py(32):             self.name = name
0.30 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.31 /testbed/django/utils/functional.py(27):         self.real_func = func
0.31 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.31 /testbed/django/utils/functional.py(27):         self.real_func = func
0.31 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.31 /testbed/django/utils/functional.py(31):         if self.name is None:
0.31 /testbed/django/utils/functional.py(32):             self.name = name
0.31 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.31 /testbed/django/utils/functional.py(31):         if self.name is None:
0.31 /testbed/django/utils/functional.py(32):             self.name = name
0.31 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.31 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.31 /testbed/django/utils/functional.py(94):             self.__args = args
0.31 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.31 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.31 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.31 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.31 /testbed/django/utils/functional.py(94):             self.__args = args
0.31 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.31 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.31 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.31 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.31 /testbed/django/utils/functional.py(373):         super().__init__()
0.31 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.31 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.31 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.31 /testbed/django/utils/functional.py(46):         if instance is None:
0.31 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.31 /testbed/django/utils/functional.py(49):         return res
0.31 /testbed/django/utils/functional.py(46):         if instance is None:
0.31 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.31 /testbed/django/utils/functional.py(49):         return res
0.31 /testbed/django/utils/functional.py(46):         if instance is None:
0.31 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.31 /testbed/django/utils/functional.py(49):         return res
0.32 /testbed/django/utils/functional.py(46):         if instance is None:
0.32 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.32 /testbed/django/utils/functional.py(49):         return res
0.33 /testbed/django/utils/functional.py(27):         self.real_func = func
0.33 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.33 /testbed/django/utils/functional.py(27):         self.real_func = func
0.33 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.33 /testbed/django/utils/functional.py(31):         if self.name is None:
0.33 /testbed/django/utils/functional.py(32):             self.name = name
0.33 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.33 /testbed/django/utils/functional.py(31):         if self.name is None:
0.33 /testbed/django/utils/functional.py(32):             self.name = name
0.33 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.33 /testbed/django/utils/functional.py(27):         self.real_func = func
0.33 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.33 /testbed/django/utils/functional.py(31):         if self.name is None:
0.33 /testbed/django/utils/functional.py(32):             self.name = name
0.33 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.34 /testbed/django/utils/functional.py(27):         self.real_func = func
0.34 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.34 /testbed/django/utils/functional.py(27):         self.real_func = func
0.34 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.34 /testbed/django/utils/functional.py(27):         self.real_func = func
0.34 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.34 /testbed/django/utils/functional.py(27):         self.real_func = func
0.34 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.34 /testbed/django/utils/functional.py(27):         self.real_func = func
0.34 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.34 /testbed/django/utils/functional.py(31):         if self.name is None:
0.34 /testbed/django/utils/functional.py(32):             self.name = name
0.34 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.34 /testbed/django/utils/functional.py(31):         if self.name is None:
0.34 /testbed/django/utils/functional.py(32):             self.name = name
0.34 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.34 /testbed/django/utils/functional.py(31):         if self.name is None:
0.34 /testbed/django/utils/functional.py(32):             self.name = name
0.34 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.34 /testbed/django/utils/functional.py(31):         if self.name is None:
0.34 /testbed/django/utils/functional.py(32):             self.name = name
0.34 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.34 /testbed/django/utils/functional.py(31):         if self.name is None:
0.34 /testbed/django/utils/functional.py(32):             self.name = name
0.34 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.34 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.34 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.34 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.34 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.34 /testbed/django/utils/functional.py(94):             self.__args = args
0.34 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.34 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.34 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.34 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.34 /testbed/django/utils/functional.py(94):             self.__args = args
0.34 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.34 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.34 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.35 /testbed/django/utils/functional.py(27):         self.real_func = func
0.35 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.35 /testbed/django/utils/functional.py(27):         self.real_func = func
0.35 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.35 /testbed/django/utils/functional.py(31):         if self.name is None:
0.35 /testbed/django/utils/functional.py(32):             self.name = name
0.35 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.35 /testbed/django/utils/functional.py(31):         if self.name is None:
0.35 /testbed/django/utils/functional.py(32):             self.name = name
0.35 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.37 /testbed/django/utils/functional.py(94):             self.__args = args
0.37 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.37 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.37 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.37 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.37 /testbed/django/utils/functional.py(94):             self.__args = args
0.37 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.37 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.37 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.37 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.37 /testbed/django/utils/functional.py(94):             self.__args = args
0.37 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.37 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.37 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.37 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.37 /testbed/django/utils/functional.py(94):             self.__args = args
0.37 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.37 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.37 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(27):         self.real_func = func
0.37 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(31):         if self.name is None:
0.37 /testbed/django/utils/functional.py(32):             self.name = name
0.37 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.37 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.37 /testbed/django/utils/functional.py(373):         super().__init__()
0.37 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.37 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.37 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.38 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.38 /testbed/django/utils/functional.py(373):         super().__init__()
0.38 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.38 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.38 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.38 /testbed/django/utils/functional.py(27):         self.real_func = func
0.38 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.38 /testbed/django/utils/functional.py(31):         if self.name is None:
0.38 /testbed/django/utils/functional.py(32):             self.name = name
0.38 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.38 /testbed/django/utils/functional.py(27):         self.real_func = func
0.38 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.38 /testbed/django/utils/functional.py(27):         self.real_func = func
0.38 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.38 /testbed/django/utils/functional.py(31):         if self.name is None:
0.38 /testbed/django/utils/functional.py(32):             self.name = name
0.38 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.38 /testbed/django/utils/functional.py(31):         if self.name is None:
0.38 /testbed/django/utils/functional.py(32):             self.name = name
0.38 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.38 /testbed/django/utils/functional.py(84):     @total_ordering
0.38 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.38 /testbed/django/utils/functional.py(84):     @total_ordering
0.38 /testbed/django/utils/functional.py(90):         """
0.38 /testbed/django/utils/functional.py(91):         __prepared = False
0.38 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.38 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.38 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.38 /testbed/django/utils/functional.py(109):         @classmethod
0.38 /testbed/django/utils/functional.py(129):         @classmethod
0.38 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.38 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.38 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.38 /testbed/django/utils/functional.py(148):         def __cast(self):
0.38 /testbed/django/utils/functional.py(156):         def __str__(self):
0.38 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.38 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.38 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.38 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.38 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.38 /testbed/django/utils/functional.py(186):     @wraps(func)
0.38 /testbed/django/utils/functional.py(191):     return __wrapper__
0.40 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.40 /testbed/django/utils/functional.py(94):             self.__args = args
0.40 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.40 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.40 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.40 /testbed/django/utils/functional.py(27):         self.real_func = func
0.40 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.40 /testbed/django/utils/functional.py(27):         self.real_func = func
0.40 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.40 /testbed/django/utils/functional.py(31):         if self.name is None:
0.40 /testbed/django/utils/functional.py(32):             self.name = name
0.40 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.40 /testbed/django/utils/functional.py(31):         if self.name is None:
0.40 /testbed/django/utils/functional.py(32):             self.name = name
0.40 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.40 /testbed/django/utils/functional.py(27):         self.real_func = func
0.40 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.40 /testbed/django/utils/functional.py(31):         if self.name is None:
0.40 /testbed/django/utils/functional.py(32):             self.name = name
0.40 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(90):         """
0.41 /testbed/django/utils/functional.py(91):         __prepared = False
0.41 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.41 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.41 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.41 /testbed/django/utils/functional.py(109):         @classmethod
0.41 /testbed/django/utils/functional.py(129):         @classmethod
0.41 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.41 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.41 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.41 /testbed/django/utils/functional.py(148):         def __cast(self):
0.41 /testbed/django/utils/functional.py(156):         def __str__(self):
0.41 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.41 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.41 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.41 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.41 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.41 /testbed/django/utils/functional.py(186):     @wraps(func)
0.41 /testbed/django/utils/functional.py(191):     return __wrapper__
0.41 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.41 /testbed/django/utils/functional.py(94):             self.__args = args
0.41 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.41 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.41 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.41 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.41 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.41 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.41 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.41 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(90):         """
0.41 /testbed/django/utils/functional.py(91):         __prepared = False
0.41 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.41 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.41 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.41 /testbed/django/utils/functional.py(109):         @classmethod
0.41 /testbed/django/utils/functional.py(129):         @classmethod
0.41 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.41 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.41 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.41 /testbed/django/utils/functional.py(148):         def __cast(self):
0.41 /testbed/django/utils/functional.py(156):         def __str__(self):
0.41 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.41 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.41 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.41 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.41 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.41 /testbed/django/utils/functional.py(186):     @wraps(func)
0.41 /testbed/django/utils/functional.py(191):     return __wrapper__
0.41 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.41 /testbed/django/utils/functional.py(94):             self.__args = args
0.41 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.41 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.41 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.41 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.41 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.41 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.41 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.41 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(90):         """
0.41 /testbed/django/utils/functional.py(91):         __prepared = False
0.41 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.41 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.41 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.41 /testbed/django/utils/functional.py(109):         @classmethod
0.41 /testbed/django/utils/functional.py(129):         @classmethod
0.41 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.41 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.41 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.41 /testbed/django/utils/functional.py(148):         def __cast(self):
0.41 /testbed/django/utils/functional.py(156):         def __str__(self):
0.41 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.41 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.41 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.41 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.41 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.41 /testbed/django/utils/functional.py(186):     @wraps(func)
0.41 /testbed/django/utils/functional.py(191):     return __wrapper__
0.41 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.41 /testbed/django/utils/functional.py(94):             self.__args = args
0.41 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.41 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.41 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.41 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.41 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.41 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.41 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.41 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.41 /testbed/django/utils/functional.py(84):     @total_ordering
0.41 /testbed/django/utils/functional.py(90):         """
0.41 /testbed/django/utils/functional.py(91):         __prepared = False
0.41 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.41 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.41 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.41 /testbed/django/utils/functional.py(109):         @classmethod
0.41 /testbed/django/utils/functional.py(129):         @classmethod
0.41 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.41 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.41 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.41 /testbed/django/utils/functional.py(148):         def __cast(self):
0.41 /testbed/django/utils/functional.py(156):         def __str__(self):
0.41 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.41 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.41 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.41 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.41 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.41 /testbed/django/utils/functional.py(186):     @wraps(func)
0.41 /testbed/django/utils/functional.py(191):     return __wrapper__
0.41 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.41 /testbed/django/utils/functional.py(94):             self.__args = args
0.41 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.41 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.41 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.41 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(117):                             continue
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.41 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.41 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.41 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.41 /testbed/django/utils/functional.py(137):             return __wrapper__
0.41 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.41 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.42 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.42 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.42 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.42 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.42 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.42 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.42 /testbed/django/utils/functional.py(84):     @total_ordering
0.42 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.42 /testbed/django/utils/functional.py(84):     @total_ordering
0.42 /testbed/django/utils/functional.py(90):         """
0.42 /testbed/django/utils/functional.py(91):         __prepared = False
0.42 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.42 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.42 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.42 /testbed/django/utils/functional.py(109):         @classmethod
0.42 /testbed/django/utils/functional.py(129):         @classmethod
0.42 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.42 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.42 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.42 /testbed/django/utils/functional.py(148):         def __cast(self):
0.42 /testbed/django/utils/functional.py(156):         def __str__(self):
0.42 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.42 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.42 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.42 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.42 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.42 /testbed/django/utils/functional.py(186):     @wraps(func)
0.42 /testbed/django/utils/functional.py(191):     return __wrapper__
0.42 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.42 /testbed/django/utils/functional.py(94):             self.__args = args
0.42 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.42 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.42 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.42 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.42 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.42 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.42 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.42 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.42 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.42 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.42 /testbed/django/utils/functional.py(84):     @total_ordering
0.42 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.42 /testbed/django/utils/functional.py(84):     @total_ordering
0.42 /testbed/django/utils/functional.py(90):         """
0.42 /testbed/django/utils/functional.py(91):         __prepared = False
0.42 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.42 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.42 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.42 /testbed/django/utils/functional.py(109):         @classmethod
0.42 /testbed/django/utils/functional.py(129):         @classmethod
0.42 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.42 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.42 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.42 /testbed/django/utils/functional.py(148):         def __cast(self):
0.42 /testbed/django/utils/functional.py(156):         def __str__(self):
0.42 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.42 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.42 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.42 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.42 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.42 /testbed/django/utils/functional.py(186):     @wraps(func)
0.42 /testbed/django/utils/functional.py(191):     return __wrapper__
0.42 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.42 /testbed/django/utils/functional.py(94):             self.__args = args
0.42 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.42 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.42 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.42 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.42 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.42 /testbed/django/utils/functional.py(137):             return __wrapper__
0.42 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.42 /testbed/django/utils/functional.py(117):                             continue
0.42 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.42 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.42 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.42 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.42 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.42 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.42 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.42 /testbed/django/utils/functional.py(126):             elif cls._delegate_bytes:
0.42 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.43 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.43 /testbed/django/utils/functional.py(373):         super().__init__()
0.43 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.43 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.43 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.43 /testbed/django/utils/functional.py(27):         self.real_func = func
0.43 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.43 /testbed/django/utils/functional.py(27):         self.real_func = func
0.43 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.43 /testbed/django/utils/functional.py(31):         if self.name is None:
0.43 /testbed/django/utils/functional.py(32):             self.name = name
0.43 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.43 /testbed/django/utils/functional.py(31):         if self.name is None:
0.43 /testbed/django/utils/functional.py(32):             self.name = name
0.43 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.43 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.43 /testbed/django/utils/functional.py(373):         super().__init__()
0.43 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.43 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.43 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.43 /testbed/django/utils/functional.py(27):         self.real_func = func
0.43 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.43 /testbed/django/utils/functional.py(27):         self.real_func = func
0.43 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.43 /testbed/django/utils/functional.py(31):         if self.name is None:
0.43 /testbed/django/utils/functional.py(32):             self.name = name
0.43 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.43 /testbed/django/utils/functional.py(31):         if self.name is None:
0.43 /testbed/django/utils/functional.py(32):             self.name = name
0.43 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.50 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.50 /testbed/django/utils/functional.py(373):         super().__init__()
0.50 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.50 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.50 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.50 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.50 /testbed/django/utils/functional.py(373):         super().__init__()
0.50 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.50 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.50 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.52 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.52 /testbed/django/utils/functional.py(373):         super().__init__()
0.52 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.52 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.52 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.52 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.52 /testbed/django/utils/functional.py(94):             self.__args = args
0.52 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.52 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.52 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.52 /testbed/django/utils/functional.py(58):         self.fget = method
0.52 /testbed/django/utils/functional.py(58):         self.fget = method
0.53 /testbed/django/utils/functional.py(58):         self.fget = method
0.53 /testbed/django/utils/functional.py(58):         self.fget = method
Testing against Django installed in '/testbed/django'
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.53 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.53 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.53 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.54 /testbed/django/utils/functional.py(27):         self.real_func = func
0.54 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.54 /testbed/django/utils/functional.py(27):         self.real_func = func
0.54 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.54 /testbed/django/utils/functional.py(31):         if self.name is None:
0.54 /testbed/django/utils/functional.py(32):             self.name = name
0.54 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.54 /testbed/django/utils/functional.py(31):         if self.name is None:
0.54 /testbed/django/utils/functional.py(32):             self.name = name
0.54 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.54 /testbed/django/utils/functional.py(27):         self.real_func = func
0.54 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.54 /testbed/django/utils/functional.py(27):         self.real_func = func
0.54 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.54 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(27):         self.real_func = func
0.55 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.55 /testbed/django/utils/functional.py(31):         if self.name is None:
0.55 /testbed/django/utils/functional.py(32):             self.name = name
0.55 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.55 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.55 /testbed/django/utils/functional.py(94):             self.__args = args
0.55 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.55 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.55 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.56 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.56 /testbed/django/utils/functional.py(373):         super().__init__()
0.56 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.56 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.56 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.56 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.56 /testbed/django/utils/functional.py(94):             self.__args = args
0.56 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.56 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.56 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.57 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.57 /testbed/django/utils/functional.py(94):             self.__args = args
0.57 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.57 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.57 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.57 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.57 /testbed/django/utils/functional.py(94):             self.__args = args
0.57 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.57 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.57 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.57 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.57 /testbed/django/utils/functional.py(94):             self.__args = args
0.57 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.57 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.57 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.58 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.58 /testbed/django/utils/functional.py(373):         super().__init__()
0.58 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.58 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.58 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.58 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.58 /testbed/django/utils/functional.py(94):             self.__args = args
0.58 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.58 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.58 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.59 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.59 /testbed/django/utils/functional.py(94):             self.__args = args
0.59 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.59 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.59 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.60 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.60 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(46):         if instance is None:
0.60 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.60 /testbed/django/utils/functional.py(49):         return res
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(46):         if instance is None:
0.60 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.60 /testbed/django/utils/functional.py(49):         return res
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.60 /testbed/django/utils/functional.py(94):             self.__args = args
0.60 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.60 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.60 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.60 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.60 /testbed/django/utils/functional.py(240):             self._setup()
0.60 /testbed/django/utils/functional.py(376):         self._wrapped = self._setupfunc()
0.60 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.60 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.60 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.60 /testbed/django/utils/functional.py(46):         if instance is None:
0.60 /testbed/django/utils/functional.py(47):             return self
0.60 /testbed/django/utils/functional.py(46):         if instance is None:
0.60 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.60 /testbed/django/utils/functional.py(49):         return res
0.60 /testbed/django/utils/functional.py(46):         if instance is None:
0.60 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.60 /testbed/django/utils/functional.py(49):         return res
0.61 /testbed/django/utils/functional.py(84):     @total_ordering
0.61 /testbed/django/utils/functional.py(85):     class __proxy__(Promise):
0.61 /testbed/django/utils/functional.py(84):     @total_ordering
0.61 /testbed/django/utils/functional.py(90):         """
0.61 /testbed/django/utils/functional.py(91):         __prepared = False
0.61 /testbed/django/utils/functional.py(93):         def __init__(self, args, kw):
0.61 /testbed/django/utils/functional.py(100):         def __reduce__(self):
0.61 /testbed/django/utils/functional.py(106):         def __repr__(self):
0.61 /testbed/django/utils/functional.py(109):         @classmethod
0.61 /testbed/django/utils/functional.py(129):         @classmethod
0.61 /testbed/django/utils/functional.py(139):         def __text_cast(self):
0.61 /testbed/django/utils/functional.py(142):         def __bytes_cast(self):
0.61 /testbed/django/utils/functional.py(145):         def __bytes_cast_encoded(self):
0.61 /testbed/django/utils/functional.py(148):         def __cast(self):
0.61 /testbed/django/utils/functional.py(156):         def __str__(self):
0.61 /testbed/django/utils/functional.py(161):         def __eq__(self, other):
0.61 /testbed/django/utils/functional.py(166):         def __lt__(self, other):
0.61 /testbed/django/utils/functional.py(171):         def __hash__(self):
0.61 /testbed/django/utils/functional.py(174):         def __mod__(self, rhs):
0.61 /testbed/django/utils/functional.py(179):         def __deepcopy__(self, memo):
0.61 /testbed/django/utils/functional.py(186):     @wraps(func)
0.61 /testbed/django/utils/functional.py(191):     return __wrapper__
0.61 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.61 /testbed/django/utils/functional.py(94):             self.__args = args
0.61 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.61 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.61 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.61 /testbed/django/utils/functional.py(46):         if instance is None:
0.61 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.61 /testbed/django/utils/functional.py(49):         return res
0.61 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.61 /testbed/django/utils/functional.py(94):             self.__args = args
0.61 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.61 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.61 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.61 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.61 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.61 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.61 /testbed/django/utils/functional.py(94):             self.__args = args
0.61 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.61 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.61 /testbed/django/utils/functional.py(97):                 self.__prepare_class__()
0.61 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.61 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(118):                         meth = cls.__promise__(method_name)
0.61 /testbed/django/utils/functional.py(132):             def __wrapper__(self, *args, **kw):
0.61 /testbed/django/utils/functional.py(137):             return __wrapper__
0.61 /testbed/django/utils/functional.py(119):                         setattr(cls, method_name, meth)
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(116):                         if hasattr(cls, method_name):
0.61 /testbed/django/utils/functional.py(117):                             continue
0.61 /testbed/django/utils/functional.py(113):                     for method_name in type_.__dict__:
0.61 /testbed/django/utils/functional.py(112):                 for type_ in resultclass.mro():
0.61 /testbed/django/utils/functional.py(111):             for resultclass in resultclasses:
0.61 /testbed/django/utils/functional.py(120):             cls._delegate_bytes = bytes in resultclasses
0.61 /testbed/django/utils/functional.py(121):             cls._delegate_text = str in resultclasses
0.61 /testbed/django/utils/functional.py(122):             assert not (cls._delegate_bytes and cls._delegate_text), (
0.61 /testbed/django/utils/functional.py(124):             if cls._delegate_text:
0.61 /testbed/django/utils/functional.py(125):                 cls.__str__ = cls.__text_cast
0.61 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.61 /testbed/django/utils/functional.py(46):         if instance is None:
0.61 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.61 /testbed/django/utils/functional.py(49):         return res
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(27):         self.real_func = func
0.62 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.62 /testbed/django/utils/functional.py(31):         if self.name is None:
0.62 /testbed/django/utils/functional.py(32):             self.name = name
0.62 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.63 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.63 /testbed/django/utils/functional.py(373):         super().__init__()
0.63 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.63 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.63 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.64 /testbed/django/utils/functional.py(27):         self.real_func = func
0.64 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.64 /testbed/django/utils/functional.py(31):         if self.name is None:
0.64 /testbed/django/utils/functional.py(32):             self.name = name
0.64 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.65 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.65 /testbed/django/utils/functional.py(373):         super().__init__()
0.65 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.65 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.65 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(47):             return self
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(175):             if self._delegate_text:
0.65 /testbed/django/utils/functional.py(176):                 return str(self) % rhs
0.65 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(175):             if self._delegate_text:
0.65 /testbed/django/utils/functional.py(176):                 return str(self) % rhs
0.65 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(47):             return self
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(47):             return self
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.65 /testbed/django/utils/functional.py(373):         super().__init__()
0.65 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.65 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.65 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(175):             if self._delegate_text:
0.65 /testbed/django/utils/functional.py(176):                 return str(self) % rhs
0.65 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(175):             if self._delegate_text:
0.65 /testbed/django/utils/functional.py(176):                 return str(self) % rhs
0.65 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.65 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.65 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(47):             return self
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(46):         if instance is None:
0.65 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.65 /testbed/django/utils/functional.py(49):         return res
0.65 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.65 /testbed/django/utils/functional.py(94):             self.__args = args
0.65 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.65 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.65 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.65 /testbed/django/utils/functional.py(175):             if self._delegate_text:
0.66 /testbed/django/utils/functional.py(176):                 return str(self) % rhs
0.66 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(175):             if self._delegate_text:
0.66 /testbed/django/utils/functional.py(176):                 return str(self) % rhs
0.66 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.66 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.66 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(47):             return self
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(47):             return self
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.66 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(47):             return self
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.66 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.66 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.66 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.66 /testbed/django/utils/functional.py(94):             self.__args = args
0.66 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.66 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.66 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.66 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.66 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(47):             return self
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.66 /testbed/django/utils/functional.py(46):         if instance is None:
0.66 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.66 /testbed/django/utils/functional.py(49):         return res
0.67 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.67 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.67 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.67 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.67 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.67 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.67 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.67 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.67 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
Skipping setup of unused database(s): default, other.
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(140):             return func(*self.__args, **self.__kw)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(49):         return res
0.68 /testbed/django/utils/functional.py(46):         if instance is None:
0.68 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(135):                 res = func(*self.__args, **self.__kw)
0.69 /testbed/django/utils/functional.py(136):                 return getattr(res, method_name)(*args, **kw)
0.69 /testbed/django/utils/functional.py(135):                 res = func(*self.__args, **self.__kw)
0.69 /testbed/django/utils/functional.py(136):                 return getattr(res, method_name)(*args, **kw)
0.69 /testbed/django/utils/functional.py(135):                 res = func(*self.__args, **self.__kw)
0.69 /testbed/django/utils/functional.py(136):                 return getattr(res, method_name)(*args, **kw)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.69 /testbed/django/utils/functional.py(49):         return res
0.69 /testbed/django/utils/functional.py(46):         if instance is None:
0.69 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.70 /testbed/django/utils/functional.py(49):         return res
0.70 /testbed/django/utils/functional.py(46):         if instance is None:
0.70 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.70 /testbed/django/utils/functional.py(49):         return res
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(240):             self._setup()
0.70 /testbed/django/utils/functional.py(376):         self._wrapped = self._setupfunc()
0.70 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.70 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.70 /testbed/django/utils/functional.py(373):         super().__init__()
0.70 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.70 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.70 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.70 /testbed/django/utils/functional.py(372):         self.__dict__['_setupfunc'] = func
0.70 /testbed/django/utils/functional.py(373):         super().__init__()
0.70 /testbed/django/utils/functional.py(260):         self._wrapped = empty
0.70 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.70 /testbed/django/utils/functional.py(267):             self.__dict__["_wrapped"] = value
0.70 /testbed/django/utils/functional.py(27):         self.real_func = func
0.70 /testbed/django/utils/functional.py(28):         self.__doc__ = getattr(func, '__doc__')
0.70 /testbed/django/utils/functional.py(31):         if self.name is None:
0.70 /testbed/django/utils/functional.py(32):             self.name = name
0.70 /testbed/django/utils/functional.py(33):             self.func = self.real_func
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.70 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.70 /testbed/django/utils/functional.py(46):         if instance is None:
0.70 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.70 /testbed/django/utils/functional.py(49):         return res
0.72 /testbed/django/utils/functional.py(239):         if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(241):         return func(self._wrapped, *args)
0.72 /testbed/django/utils/functional.py(46):         if instance is None:
0.72 /testbed/django/utils/functional.py(48):         res = instance.__dict__[self.name] = self.func(instance)
0.72 /testbed/django/utils/functional.py(49):         return res
System check identified no issues (0 silenced).
test_add_filter_with_lazy_string (test_coverup_django__django-13794.AddFilterLazyStringTests) ... FAIL

======================================================================
FAIL: test_add_filter_with_lazy_string (test_coverup_django__django-13794.AddFilterLazyStringTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./tests/test_coverup_django__django-13794.py", line 21, in test_add_filter_with_lazy_string
    self.assertEqual(result, 'Hello, world!')
AssertionError: '' != 'Hello, world!'
+ Hello, world!

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
0.72 /testbed/django/utils/functional.py(189):         return __proxy__(args, kw)
0.72 /testbed/django/utils/functional.py(94):             self.__args = args
0.72 /testbed/django/utils/functional.py(95):             self.__kw = kw
0.72 /testbed/django/utils/functional.py(96):             if not self.__prepared:
0.72 /testbed/django/utils/functional.py(98):             self.__class__.__prepared = True
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
0.72 /testbed/django/utils/functional.py(265):         if name == "_wrapped":
0.72 /testbed/django/utils/functional.py(269):             if self._wrapped is empty:
0.72 /testbed/django/utils/functional.py(271):             setattr(self._wrapped, name, value)
+ cat coverage.cover
{"/testbed/django/utils/functional.py": {"1": 1, "2": 1, "3": 1, "4": 1, "7": 2, "52": 2, "68": 2, "76": 1, "194": 1, "198": 1, "205": 1, "227": 1, "234": 1, "237": 1, "245": 2, "348": 1, "356": 2, "406": 1, "17": 1, "19": 1, "26": 1, "30": 1, "40": 1, "21": 0, "22": 0, "27": 107, "28": 107, "31": 107, "32": 107, "33": 107, "34": 0, "35": 0, "36": 0, "37": 0, "46": 169, "47": 9, "48": 160, "49": 160, "57": 1, "60": 1, "63": 1, "58": 4, "61": 0, "64": 0, "65": 0, "73": 1, "84": 74, "85": 37, "186": 37, "191": 37, "91": 37, "93": 37, "100": 37, "106": 37, "109": 37, "129": 37, "139": 37, "142": 37, "145": 37, "148": 37, "156": 37, "161": 37, "166": 37, "171": 37, "174": 37, "179": 37, "94": 260, "95": 260, "96": 260, "97": 16, "98": 260, "102": 0, "103": 0, "107": 0, "111": 34, "112": 66, "113": 1715, "116": 1667, "117": 769, "118": 898, "119": 898, "120": 16, "121": 16, "122": 16, "123": 0, "124": 16, "125": 4, "126": 12, "127": 0, "132": 898, "137": 898, "135": 3, "136": 3, "140": 34, "143": 0, "146": 0, "149": 0, "150": 0, "151": 0, "152": 0, "154": 0, "159": 0, "162": 0, "163": 0, "164": 0, "167": 0, "168": 0, "169": 0, "172": 0, "175": 6, "176": 6, "177": 0, "183": 0, "184": 0, "189": 260, "195": 0, "202": 0, "212": 19, "213": 0, "215": 19, "224": 19, "216": 19, "218": 19, "223": 19, "220": 0, "221": 0, "222": 0, "231": 17, "238": 17, "242": 17, "239": 117, "240": 2, "241": 117, "255": 1, "257": 1, "262": 1, "264": 1, "273": 1, "280": 1, "300": 1, "305": 1, "314": 1, "323": 1, "324": 1, "325": 1, "328": 1, "332": 1, "333": 1, "334": 1, "335": 1, "336": 1, "337": 1, "340": 1, "341": 1, "342": 1, "343": 1, "344": 1, "345": 1, "260": 66, "265": 93, "267": 69, "269": 24, "270": 0, "271": 24, "274": 0, "275": 0, "276": 0, "277": 0, "278": 0, "284": 0, "301": 0, "302": 0, "303": 0, "306": 0, "309": 0, "312": 0, "315": 0, "318": 0, "319": 0, "320": 0, "321": 0, "353": 0, "363": 1, "375": 1, "380": 1, "387": 1, "396": 1, "372": 63, "373": 63, "376": 2, "381": 0, "382": 0, "384": 0, "385": 0, "388": 0, "391": 0, "394": 0, "397": 0, "400": 0, "401": 0, "402": 0, "403": 0, "414": 0, "415": 0, "416": 0, "417": 0}}
+ git checkout fe886eee36be8022f34cfe59aa61ff1c21fe01d9
Note: switching to 'fe886eee36be8022f34cfe59aa61ff1c21fe01d9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at fe886eee36 Corrected code-block directives in docs/ref/models/meta.txt.
+ git apply /root/pre_state.patch
error: unrecognized input
