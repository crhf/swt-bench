+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD d360ffa7c5896a91ae498b3fb9cf464464ce8f34
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit d360ffa7c5896a91ae498b3fb9cf464464ce8f34
Author: Thomas J Fan <thomasjpfan@gmail.com>
Date:   Wed Jun 26 20:58:13 2019 -0400

    [MRG] TST Increases tolerance to match float32 resolution (#14184)

diff --git a/sklearn/linear_model/tests/test_ridge.py b/sklearn/linear_model/tests/test_ridge.py
index ddaf0f5e63..cfc487c6ff 100644
--- a/sklearn/linear_model/tests/test_ridge.py
+++ b/sklearn/linear_model/tests/test_ridge.py
@@ -1099,13 +1099,14 @@ def test_dtype_match(solver):
     X_32 = X_64.astype(np.float32)
     y_32 = y_64.astype(np.float32)
 
+    tol = 2 * np.finfo(np.float32).resolution
     # Check type consistency 32bits
-    ridge_32 = Ridge(alpha=alpha, solver=solver, max_iter=500, tol=1e-10,)
+    ridge_32 = Ridge(alpha=alpha, solver=solver, max_iter=500, tol=tol)
     ridge_32.fit(X_32, y_32)
     coef_32 = ridge_32.coef_
 
     # Check type consistency 64 bits
-    ridge_64 = Ridge(alpha=alpha, solver=solver, max_iter=500, tol=1e-10,)
+    ridge_64 = Ridge(alpha=alpha, solver=solver, max_iter=500, tol=tol)
     ridge_64.fit(X_64, y_64)
     coef_64 = ridge_64.coef_
 
+ git diff d360ffa7c5896a91ae498b3fb9cf464464ce8f34
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -v --no-use-pep517 --no-build-isolation -e .
Using pip 21.2.2 from /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/pip (python 3.6)
Obtaining file:///testbed
    Running command python setup.py egg_info
    running egg_info
    creating /tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info
    writing /tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/PKG-INFO
    writing dependency_links to /tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/dependency_links.txt
    writing requirements to /tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/requires.txt
    writing top-level names to /tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/top_level.txt
    writing manifest file '/tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/SOURCES.txt'
    reading manifest file '/tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    adding license file 'COPYING'
    writing manifest file '/tmp/pip-pip-egg-info-poiwvzqy/scikit_learn.egg-info/SOURCES.txt'
    Partial import of sklearn during the build process.
Requirement already satisfied: numpy>=1.11.0 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.19.2)
Requirement already satisfied: scipy>=0.17.0 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.5.2)
Requirement already satisfied: joblib>=0.11 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from scikit-learn==0.22.dev0) (1.1.1)
Installing collected packages: scikit-learn
  Attempting uninstall: scikit-learn
    Found existing installation: scikit-learn 0.22.dev0
    Uninstalling scikit-learn-0.22.dev0:
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/scikit-learn.egg-link
      Removing pth entries from /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/easy-install.pth:
      Removing entry: /testbed
      Successfully uninstalled scikit-learn-0.22.dev0
  Running setup.py develop for scikit-learn
    Running command /opt/miniconda3/envs/testbed/bin/python -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '"'"'/testbed/setup.py'"'"'; __file__='"'"'/testbed/setup.py'"'"';f = getattr(tokenize, '"'"'open'"'"', open)(__file__) if os.path.exists(__file__) else io.StringIO('"'"'from setuptools import setup; setup()'"'"');code = f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' develop --no-deps
    blas_opt_info:
    blas_mkl_info:
    customize UnixCCompiler
      libraries mkl_rt not found in ['/opt/miniconda3/envs/testbed/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/x86_64-linux-gnu']
      NOT AVAILABLE

    blis_info:
      libraries blis not found in ['/opt/miniconda3/envs/testbed/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/x86_64-linux-gnu']
      NOT AVAILABLE

    openblas_info:
    C compiler: gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC

    creating /tmp/tmpfmwf7hf8/tmp
    creating /tmp/tmpfmwf7hf8/tmp/tmpfmwf7hf8
    compile options: '-c'
    gcc: /tmp/tmpfmwf7hf8/source.c
    gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ /tmp/tmpfmwf7hf8/tmp/tmpfmwf7hf8/source.o -L/opt/miniconda3/envs/testbed/lib -lopenblas -o /tmp/tmpfmwf7hf8/a.out
      FOUND:
        libraries = ['openblas', 'openblas']
        library_dirs = ['/opt/miniconda3/envs/testbed/lib']
        language = c
        define_macros = [('HAVE_CBLAS', None)]

      FOUND:
        libraries = ['openblas', 'openblas']
        library_dirs = ['/opt/miniconda3/envs/testbed/lib']
        language = c
        define_macros = [('HAVE_CBLAS', None)]

    C compiler: gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC

    compile options: '-c'
    extra options: '-fopenmp'
    gcc: test_openmp.c
    gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wl,--sysroot=/ objects/test_openmp.o -o test_openmp -fopenmp
    running develop
    running build_scripts
    running egg_info
    running build_src
    build_src
    building library "libsvm-skl" sources
    building extension "sklearn.__check_build._check_build" sources
    building extension "sklearn.preprocessing._csr_polynomial_expansion" sources
    building extension "sklearn.cluster._dbscan_inner" sources
    building extension "sklearn.cluster._hierarchical" sources
    building extension "sklearn.cluster._k_means_elkan" sources
    building extension "sklearn.cluster._k_means" sources
    building extension "sklearn.datasets._svmlight_format" sources
    building extension "sklearn.decomposition._online_lda" sources
    building extension "sklearn.decomposition.cdnmf_fast" sources
    building extension "sklearn.ensemble._gradient_boosting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._gradient_boosting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.histogram" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.splitting" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._binning" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._predictor" sources
    building extension "sklearn.ensemble._hist_gradient_boosting._loss" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.types" sources
    building extension "sklearn.ensemble._hist_gradient_boosting.utils" sources
    building extension "sklearn.feature_extraction._hashing" sources
    building extension "sklearn.manifold._utils" sources
    building extension "sklearn.manifold._barnes_hut_tsne" sources
    building extension "sklearn.metrics.cluster.expected_mutual_info_fast" sources
    building extension "sklearn.metrics.pairwise_fast" sources
    building extension "sklearn.neighbors.ball_tree" sources
    building extension "sklearn.neighbors.kd_tree" sources
    building extension "sklearn.neighbors.dist_metrics" sources
    building extension "sklearn.neighbors.typedefs" sources
    building extension "sklearn.neighbors.quad_tree" sources
    building extension "sklearn.tree._tree" sources
    building extension "sklearn.tree._splitter" sources
    building extension "sklearn.tree._criterion" sources
    building extension "sklearn.tree._utils" sources
    building extension "sklearn.utils.sparsefuncs_fast" sources
    building extension "sklearn.utils._cython_blas" sources
    building extension "sklearn.utils.arrayfuncs" sources
    building extension "sklearn.utils.murmurhash" sources
    building extension "sklearn.utils.lgamma" sources
    building extension "sklearn.utils.graph_shortest_path" sources
    building extension "sklearn.utils.fast_dict" sources
    building extension "sklearn.utils.seq_dataset" sources
    building extension "sklearn.utils.weight_vector" sources
    building extension "sklearn.utils._random" sources
    building extension "sklearn.utils._logistic_sigmoid" sources
    building extension "sklearn.svm.libsvm" sources
    building extension "sklearn.svm.liblinear" sources
    building extension "sklearn.svm.libsvm_sparse" sources
    building extension "sklearn.linear_model.cd_fast" sources
    building extension "sklearn.linear_model.sgd_fast" sources
    building extension "sklearn.linear_model.sag_fast" sources
    building extension "sklearn._isotonic" sources
    building data_files sources
    build_src: building npy-pkg config files
    writing scikit_learn.egg-info/PKG-INFO
    writing dependency_links to scikit_learn.egg-info/dependency_links.txt
    writing requirements to scikit_learn.egg-info/requires.txt
    writing top-level names to scikit_learn.egg-info/top_level.txt
    reading manifest file 'scikit_learn.egg-info/SOURCES.txt'
    reading manifest template 'MANIFEST.in'
    adding license file 'COPYING'
    writing manifest file 'scikit_learn.egg-info/SOURCES.txt'
    running build_ext
    customize UnixCCompiler
    customize UnixCCompiler using build_clib
    customize UnixCCompiler
    customize UnixCCompiler using build_ext_subclass
    customize UnixCCompiler
    customize UnixCCompiler using build_ext_subclass
    Creating /opt/miniconda3/envs/testbed/lib/python3.6/site-packages/scikit-learn.egg-link (link to .)
    Adding scikit-learn 0.22.dev0 to easy-install.pth file

    Installed /testbed
    Partial import of sklearn during the build process.
Successfully installed scikit-learn-0.22.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git apply -v -
<stdin>:18: trailing whitespace.
    
<stdin>:21: trailing whitespace.
    
<stdin>:26: trailing whitespace.
        
<stdin>:29: trailing whitespace.
        
Checking patch sklearn/tests/test_coverup_scikit-learn__scikit-learn-12682.py...
Applied patch sklearn/tests/test_coverup_scikit-learn__scikit-learn-12682.py cleanly.
warning: 4 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/decomposition/dict_learning\.py|examples/decomposition/plot_sparse_coding\.py)' -m pytest --no-header -rA -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-12682.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sklearn/decomposition/dict_learning\\.py|examples/decomposition/plot_sparse_coding\\.py)']
============================= test session starts ==============================
collected 1 item

sklearn/tests/test_coverup_scikit-learn__scikit-learn-12682.py F         [100%]

=================================== FAILURES ===================================
___________________ test_sparse_coder_lasso_cd_max_iter_bug ____________________

    def test_sparse_coder_lasso_cd_max_iter_bug():
        # Create a dataset and dictionary that are computationally intensive
        X = np.random.rand(100, 50)
        dictionary = np.random.rand(50, 50)
    
        # Initialize SparseCoder with lasso_cd algorithm
        coder = SparseCoder(dictionary=dictionary, transform_algorithm='lasso_cd', transform_alpha=0.1)
    
        # Capture warnings
        with warnings.catch_warnings(record=True) as w:
            warnings.simplefilter("always")
            coder.transform(X)
    
            # Check if a ConvergenceWarning was raised
            convergence_warnings = [warning for warning in w if issubclass(warning.category, ConvergenceWarning)]
    
            # The test should fail if a warning is raised, indicating the bug is present
>           assert len(convergence_warnings) == 0  # The test passes only if no warning is raised, indicating the bug is fixed
E           assert 23 == 0
E            +  where 23 = len([<warnings.WarningMessage object at 0x7fec735fafd0>, <warnings.WarningMessage object at 0x7fec735faef0>, <warnings.War...70a917f0>, <warnings.WarningMessage object at 0x7fec70a91828>, <warnings.WarningMessage object at 0x7fec70a91898>, ...])

sklearn/tests/test_coverup_scikit-learn__scikit-learn-12682.py:25: AssertionError
----------------------------- Captured stdout call -----------------------------
0.67 /testbed/sklearn/decomposition/dict_learning.py(995):         self._set_sparse_coding_params(dictionary.shape[0],
0.67 /testbed/sklearn/decomposition/dict_learning.py(996):                                        transform_algorithm,
0.67 /testbed/sklearn/decomposition/dict_learning.py(997):                                        transform_n_nonzero_coefs,
0.67 /testbed/sklearn/decomposition/dict_learning.py(998):                                        transform_alpha, split_sign, n_jobs,
0.67 /testbed/sklearn/decomposition/dict_learning.py(999):                                        positive_code)
0.67 /testbed/sklearn/decomposition/dict_learning.py(869):         self.n_components = n_components
0.67 /testbed/sklearn/decomposition/dict_learning.py(870):         self.transform_algorithm = transform_algorithm
0.67 /testbed/sklearn/decomposition/dict_learning.py(871):         self.transform_n_nonzero_coefs = transform_n_nonzero_coefs
0.67 /testbed/sklearn/decomposition/dict_learning.py(872):         self.transform_alpha = transform_alpha
0.67 /testbed/sklearn/decomposition/dict_learning.py(873):         self.split_sign = split_sign
0.67 /testbed/sklearn/decomposition/dict_learning.py(874):         self.n_jobs = n_jobs
0.67 /testbed/sklearn/decomposition/dict_learning.py(875):         self.positive_code = positive_code
0.67 /testbed/sklearn/decomposition/dict_learning.py(1000):         self.components_ = dictionary
0.67 /testbed/sklearn/decomposition/dict_learning.py(895):         check_is_fitted(self, 'components_')
0.67 /testbed/sklearn/decomposition/dict_learning.py(897):         X = check_array(X)
0.67 /testbed/sklearn/decomposition/dict_learning.py(899):         code = sparse_encode(
0.67 /testbed/sklearn/decomposition/dict_learning.py(900):             X, self.components_, algorithm=self.transform_algorithm,
0.67 /testbed/sklearn/decomposition/dict_learning.py(901):             n_nonzero_coefs=self.transform_n_nonzero_coefs,
0.67 /testbed/sklearn/decomposition/dict_learning.py(902):             alpha=self.transform_alpha, n_jobs=self.n_jobs,
0.67 /testbed/sklearn/decomposition/dict_learning.py(903):             positive=self.positive_code)
0.67 /testbed/sklearn/decomposition/dict_learning.py(280):     if check_input:
0.67 /testbed/sklearn/decomposition/dict_learning.py(281):         if algorithm == 'lasso_cd':
0.67 /testbed/sklearn/decomposition/dict_learning.py(282):             dictionary = check_array(dictionary, order='C', dtype='float64')
0.67 /testbed/sklearn/decomposition/dict_learning.py(283):             X = check_array(X, order='C', dtype='float64')
0.67 /testbed/sklearn/decomposition/dict_learning.py(288):     n_samples, n_features = X.shape
0.67 /testbed/sklearn/decomposition/dict_learning.py(289):     n_components = dictionary.shape[0]
0.67 /testbed/sklearn/decomposition/dict_learning.py(291):     if gram is None and algorithm != 'threshold':
0.67 /testbed/sklearn/decomposition/dict_learning.py(292):         gram = np.dot(dictionary, dictionary.T)
0.67 /testbed/sklearn/decomposition/dict_learning.py(294):     if cov is None and algorithm != 'lasso_cd':
0.67 /testbed/sklearn/decomposition/dict_learning.py(298):     if algorithm in ('lars', 'omp'):
0.67 /testbed/sklearn/decomposition/dict_learning.py(303):         regularization = alpha
0.67 /testbed/sklearn/decomposition/dict_learning.py(304):         if regularization is None:
0.67 /testbed/sklearn/decomposition/dict_learning.py(307):     if effective_n_jobs(n_jobs) == 1 or algorithm == 'threshold':
0.67 /testbed/sklearn/decomposition/dict_learning.py(308):         code = _sparse_encode(X,
0.67 /testbed/sklearn/decomposition/dict_learning.py(309):                               dictionary, gram, cov=cov,
0.67 /testbed/sklearn/decomposition/dict_learning.py(310):                               algorithm=algorithm,
0.67 /testbed/sklearn/decomposition/dict_learning.py(311):                               regularization=regularization, copy_cov=copy_cov,
0.67 /testbed/sklearn/decomposition/dict_learning.py(312):                               init=init,
0.67 /testbed/sklearn/decomposition/dict_learning.py(313):                               max_iter=max_iter,
0.67 /testbed/sklearn/decomposition/dict_learning.py(314):                               check_input=False,
0.67 /testbed/sklearn/decomposition/dict_learning.py(315):                               verbose=verbose,
0.67 /testbed/sklearn/decomposition/dict_learning.py(316):                               positive=positive)
0.67 /testbed/sklearn/decomposition/dict_learning.py(105):     if X.ndim == 1:
0.67 /testbed/sklearn/decomposition/dict_learning.py(107):     n_samples, n_features = X.shape
0.67 /testbed/sklearn/decomposition/dict_learning.py(108):     n_components = dictionary.shape[0]
0.67 /testbed/sklearn/decomposition/dict_learning.py(109):     if dictionary.shape[1] != X.shape[1]:
0.67 /testbed/sklearn/decomposition/dict_learning.py(113):     if cov is None and algorithm != 'lasso_cd':
0.67 /testbed/sklearn/decomposition/dict_learning.py(118):     _check_positive_coding(algorithm, positive)
0.67 /testbed/sklearn/decomposition/dict_learning.py(25):     if positive and method in ["omp", "lars"]:
0.67 /testbed/sklearn/decomposition/dict_learning.py(120):     if algorithm == 'lasso_lars':
0.67 /testbed/sklearn/decomposition/dict_learning.py(136):     elif algorithm == 'lasso_cd':
0.67 /testbed/sklearn/decomposition/dict_learning.py(137):         alpha = float(regularization) / n_features  # account for scaling
0.67 /testbed/sklearn/decomposition/dict_learning.py(142):         clf = Lasso(alpha=alpha, fit_intercept=False, normalize=False,
0.67 /testbed/sklearn/decomposition/dict_learning.py(143):                     precompute=gram, max_iter=max_iter, warm_start=True,
0.67 /testbed/sklearn/decomposition/dict_learning.py(144):                     positive=positive)
0.67 /testbed/sklearn/decomposition/dict_learning.py(146):         if init is not None:
0.67 /testbed/sklearn/decomposition/dict_learning.py(149):         clf.fit(dictionary.T, X.T, check_input=check_input)
0.78 /testbed/sklearn/decomposition/dict_learning.py(150):         new_code = clf.coef_
0.78 /testbed/sklearn/decomposition/dict_learning.py(181):     if new_code.ndim != 2:
0.78 /testbed/sklearn/decomposition/dict_learning.py(183):     return new_code
0.78 /testbed/sklearn/decomposition/dict_learning.py(317):         return code
0.78 /testbed/sklearn/decomposition/dict_learning.py(905):         if self.split_sign:
0.78 /testbed/sklearn/decomposition/dict_learning.py(913):         return code
=========================== short test summary info ============================
FAILED sklearn/tests/test_coverup_scikit-learn__scikit-learn-12682.py::test_sparse_coder_lasso_cd_max_iter_bug
========================= 1 failed, 1 warning in 0.49s =========================
+ cat coverage.cover
{"/testbed/sklearn/decomposition/dict_learning.py": {"6": 1, "7": 1, "8": 1, "10": 1, "12": 1, "13": 1, "14": 1, "16": 1, "17": 1, "19": 1, "20": 1, "21": 1, "24": 1, "35": 1, "190": 1, "340": 1, "426": 1, "617": 1, "861": 2, "916": 2, "1022": 2, "1211": 2, "25": 1, "26": 0, "27": 0, "28": 0, "105": 1, "106": 0, "107": 1, "108": 1, "109": 1, "110": 0, "112": 0, "113": 1, "115": 0, "116": 0, "118": 1, "120": 1, "121": 0, "122": 0, "123": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "134": 0, "136": 1, "137": 1, "142": 1, "143": 1, "144": 1, "146": 1, "147": 0, "149": 1, "150": 1, "152": 0, "153": 0, "154": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "164": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "178": 0, "180": 0, "181": 1, "182": 0, "183": 1, "280": 1, "281": 1, "282": 1, "283": 1, "285": 0, "286": 0, "288": 1, "289": 1, "291": 1, "292": 1, "294": 1, "295": 0, "296": 0, "298": 1, "299": 0, "300": 0, "301": 0, "303": 1, "304": 1, "305": 0, "307": 1, "308": 1, "309": 1, "310": 1, "311": 1, "312": 1, "313": 1, "314": 1, "315": 1, "316": 1, "317": 1, "320": 0, "321": 0, "323": 0, "324": 0, "333": 0, "334": 0, "335": 0, "336": 0, "378": 0, "379": 0, "380": 0, "382": 0, "383": 0, "384": 0, "388": 0, "389": 0, "391": 0, "392": 0, "393": 0, "394": 0, "397": 0, "398": 0, "399": 0, "400": 0, "401": 0, "402": 0, "403": 0, "404": 0, "405": 0, "406": 0, "408": 0, "410": 0, "411": 0, "413": 0, "415": 0, "416": 0, "417": 0, "418": 0, "419": 0, "524": 0, "525": 0, "526": 0, "528": 0, "530": 0, "532": 0, "534": 0, "535": 0, "538": 0, "539": 0, "541": 0, "543": 0, "544": 0, "545": 0, "546": 0, "547": 0, "548": 0, "550": 0, "551": 0, "552": 0, "555": 0, "557": 0, "559": 0, "560": 0, "562": 0, "563": 0, "566": 0, "568": 0, "569": 0, "570": 0, "571": 0, "572": 0, "573": 0, "574": 0, "576": 0, "579": 0, "580": 0, "582": 0, "583": 0, "584": 0, "585": 0, "586": 0, "589": 0, "590": 0, "592": 0, "593": 0, "595": 0, "596": 0, "598": 0, "599": 0, "600": 0, "601": 0, "602": 0, "603": 0, "605": 0, "606": 0, "608": 0, "735": 0, "736": 0, "738": 0, "739": 0, "741": 0, "743": 0, "745": 0, "746": 0, "748": 0, "749": 0, "752": 0, "753": 0, "755": 0, "756": 0, "757": 0, "758": 0, "759": 0, "760": 0, "762": 0, "763": 0, "765": 0, "766": 0, "768": 0, "769": 0, "770": 0, "772": 0, "774": 0, "775": 0, "776": 0, "778": 0, "780": 0, "781": 0, "784": 0, "785": 0, "787": 0, "789": 0, "790": 0, "793": 0, "795": 0, "796": 0, "797": 0, "798": 0, "799": 0, "800": 0, "801": 0, "802": 0, "803": 0, "804": 0, "806": 0, "807": 0, "808": 0, "809": 0, "812": 0, "813": 0, "815": 0, "816": 0, "818": 0, "819": 0, "820": 0, "821": 0, "824": 0, "825": 0, "826": 0, "831": 0, "832": 0, "834": 0, "835": 0, "836": 0, "838": 0, "839": 0, "840": 0, "841": 0, "842": 0, "843": 0, "844": 0, "845": 0, "846": 0, "847": 0, "848": 0, "849": 0, "850": 0, "851": 0, "853": 0, "855": 0, "856": 0, "858": 0, "868": 1, "877": 1, "869": 1, "870": 1, "871": 1, "872": 1, "873": 1, "874": 1, "875": 1, "895": 1, "897": 1, "899": 1, "900": 1, "901": 1, "902": 1, "903": 1, "905": 1, "907": 0, "908": 0, "909": 0, "910": 0, "911": 0, "913": 1, "990": 1, "994": 1, "1002": 1, "995": 1, "996": 1, "997": 1, "998": 1, "999": 1, "1000": 1, "1019": 0, "1155": 1, "1171": 1, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1161": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1167": 0, "1168": 0, "1169": 0, "1187": 0, "1188": 0, "1189": 0, "1190": 0, "1192": 0, "1194": 0, "1195": 0, "1196": 0, "1197": 0, "1198": 0, "1199": 0, "1200": 0, "1201": 0, "1202": 0, "1203": 0, "1204": 0, "1205": 0, "1206": 0, "1207": 0, "1208": 0, "1344": 1, "1361": 1, "1398": 1, "1346": 0, "1347": 0, "1348": 0, "1349": 0, "1350": 0, "1351": 0, "1352": 0, "1353": 0, "1354": 0, "1355": 0, "1356": 0, "1357": 0, "1358": 0, "1359": 0, "1377": 0, "1378": 0, "1380": 0, "1381": 0, "1382": 0, "1383": 0, "1384": 0, "1385": 0, "1386": 0, "1387": 0, "1388": 0, "1389": 0, "1390": 0, "1391": 0, "1394": 0, "1395": 0, "1396": 0, "1420": 0, "1421": 0, "1422": 0, "1423": 0, "1424": 0, "1426": 0, "1427": 0, "1428": 0, "1429": 0, "1430": 0, "1431": 0, "1432": 0, "1433": 0, "1434": 0, "1435": 0, "1436": 0, "1437": 0, "1438": 0, "1439": 0, "1440": 0, "1444": 0, "1445": 0, "1446": 0}}
+ git checkout d360ffa7c5896a91ae498b3fb9cf464464ce8f34
Note: switching to 'd360ffa7c5896a91ae498b3fb9cf464464ce8f34'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at d360ffa7c5 [MRG] TST Increases tolerance to match float32 resolution (#14184)
+ git apply /root/pre_state.patch
error: unrecognized input
