diff --git a/dev/null b/tests/test_coverup_django__django-13837.py
new file mode 100644
index e69de29..6e884dc 100644
--- /dev/null
+++ b/tests/test_coverup_django__django-13837.py
@@ -0,0 +1,22 @@
+from django.test import SimpleTestCase
+from unittest.mock import patch
+import sys
+import types
+
+class GetChildArgumentsTest(SimpleTestCase):
+    def test_get_child_arguments_with_other_package(self):
+        # Mock sys.argv to simulate `python -m some_other_package runserver`
+        mock_argv = ['/path/to/some_other_package/__main__.py', 'runserver']
+        
+        # Mock __main__.__spec__ to simulate the presence of a package
+        mock_spec = types.SimpleNamespace(parent='some_other_package')
+
+        with patch.object(sys, 'argv', mock_argv):
+            with patch('django.__main__.__spec__', mock_spec):
+                with patch('django.__main__.__file__', '/path/to/some_other_package/__main__.py'):
+                    from django.utils.autoreload import get_child_arguments
+                    args = get_child_arguments()
+
+                    # Assert that the correct behavior occurs
+                    # The arguments should include '-m some_other_package'
+                    self.assertIn('-m some_other_package', args)  # This should be the correct behavior once the bug is fixed
