+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD e3a4cee081cf60650b8824f0646383b79cb110e7
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit e3a4cee081cf60650b8824f0646383b79cb110e7
Author: Claude Paroz <claude@2xlibre.net>
Date:   Mon Jan 23 06:07:20 2023 +0100

    Fixed #34278 -- Made translatable string plural-aware in SelectFilter2.js.
    
    Bug in be63c78760924e1335603c36babd0ad6cfaea3c4.

diff --git a/django/contrib/admin/static/admin/js/SelectFilter2.js b/django/contrib/admin/static/admin/js/SelectFilter2.js
index 5189107aeb..9a4e0a3a91 100644
--- a/django/contrib/admin/static/admin/js/SelectFilter2.js
+++ b/django/contrib/admin/static/admin/js/SelectFilter2.js
@@ -207,7 +207,11 @@ Requires core.js and SelectBox.js.
             const selector = document.getElementById(field_id + '_selector_chosen');
             const warning = document.getElementById(field_id + '_list-footer-display-text');
             selector.className = selector.className.replace('selector-chosen--with-filtered', '');
-            warning.textContent = interpolate(gettext('%s selected options not visible'), [count]);
+            warning.textContent = interpolate(ngettext(
+                '%s selected option not visible',
+                '%s selected options not visible',
+                count
+            ), [count]);
             if(count > 0) {
                 selector.className += ' selector-chosen--with-filtered';
             }
+ git diff e3a4cee081cf60650b8824f0646383b79cb110e7
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.6.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230123050841) (3.9.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230123050841) (0.5.3)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-5.0.dev20230123050841-0.editable-py3-none-any.whl size=27374 sha256=f7e4628ecf72f262f0d3bc86e6ce317a77def77c9c5d4387442ebe1a7eaada0c
  Stored in directory: /tmp/pip-ephem-wheel-cache-1xo0zqyt/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 5.0.dev20230123050841
    Uninstalling Django-5.0.dev20230123050841:
      Successfully uninstalled Django-5.0.dev20230123050841
Successfully installed Django-5.0.dev20230123050841
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch django/db/models/fields/files.py...
Applied patch django/db/models/fields/files.py cleanly.
+ git apply -v -
Checking patch tests/test_coverup_django__django-16493.py...
Applied patch tests/test_coverup_django__django-16493.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/fields/files\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16493
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/db/models/fields/files\\.py)']
0.28 /testbed/django/db/models/fields/files.py(1): import datetime
0.28 /testbed/django/db/models/fields/files.py(2): import posixpath
0.28 /testbed/django/db/models/fields/files.py(4): from django import forms
0.28 /testbed/django/db/models/fields/files.py(5): from django.core import checks
0.28 /testbed/django/db/models/fields/files.py(6): from django.core.files.base import File
0.28 /testbed/django/db/models/fields/files.py(7): from django.core.files.images import ImageFile
0.28 /testbed/django/db/models/fields/files.py(8): from django.core.files.storage import Storage, default_storage
0.28 /testbed/django/db/models/fields/files.py(9): from django.core.files.utils import validate_file_name
0.28 /testbed/django/db/models/fields/files.py(10): from django.db.models import signals
0.28 /testbed/django/db/models/fields/files.py(11): from django.db.models.fields import Field
0.28 /testbed/django/db/models/fields/files.py(12): from django.db.models.query_utils import DeferredAttribute
0.28 /testbed/django/db/models/fields/files.py(13): from django.db.models.utils import AltersData
0.28 /testbed/django/db/models/fields/files.py(14): from django.utils.translation import gettext_lazy as _
0.28 /testbed/django/db/models/fields/files.py(17): class FieldFile(File, AltersData):
0.28 /testbed/django/db/models/fields/files.py(17): class FieldFile(File, AltersData):
0.28 /testbed/django/db/models/fields/files.py(18):     def __init__(self, instance, field, name):
0.28 /testbed/django/db/models/fields/files.py(25):     def __eq__(self, other):
0.28 /testbed/django/db/models/fields/files.py(32):     def __hash__(self):
0.28 /testbed/django/db/models/fields/files.py(39):     def _require_file(self):
0.28 /testbed/django/db/models/fields/files.py(45):     def _get_file(self):
0.28 /testbed/django/db/models/fields/files.py(51):     def _set_file(self, file):
0.28 /testbed/django/db/models/fields/files.py(54):     def _del_file(self):
0.28 /testbed/django/db/models/fields/files.py(57):     file = property(_get_file, _set_file, _del_file)
0.28 /testbed/django/db/models/fields/files.py(59):     @property
0.28 /testbed/django/db/models/fields/files.py(60):     def path(self):
0.28 /testbed/django/db/models/fields/files.py(59):     @property
0.28 /testbed/django/db/models/fields/files.py(60):     def path(self):
0.28 /testbed/django/db/models/fields/files.py(64):     @property
0.28 /testbed/django/db/models/fields/files.py(65):     def url(self):
0.28 /testbed/django/db/models/fields/files.py(64):     @property
0.28 /testbed/django/db/models/fields/files.py(65):     def url(self):
0.28 /testbed/django/db/models/fields/files.py(69):     @property
0.28 /testbed/django/db/models/fields/files.py(70):     def size(self):
0.28 /testbed/django/db/models/fields/files.py(69):     @property
0.28 /testbed/django/db/models/fields/files.py(70):     def size(self):
0.28 /testbed/django/db/models/fields/files.py(76):     def open(self, mode="rb"):
0.28 /testbed/django/db/models/fields/files.py(85):     open.alters_data = True
0.28 /testbed/django/db/models/fields/files.py(91):     def save(self, name, content, save=True):
0.28 /testbed/django/db/models/fields/files.py(101):     save.alters_data = True
0.28 /testbed/django/db/models/fields/files.py(103):     def delete(self, save=True):
0.28 /testbed/django/db/models/fields/files.py(121):     delete.alters_data = True
0.28 /testbed/django/db/models/fields/files.py(123):     @property
0.28 /testbed/django/db/models/fields/files.py(124):     def closed(self):
0.28 /testbed/django/db/models/fields/files.py(123):     @property
0.28 /testbed/django/db/models/fields/files.py(124):     def closed(self):
0.28 /testbed/django/db/models/fields/files.py(128):     def close(self):
0.28 /testbed/django/db/models/fields/files.py(133):     def __getstate__(self):
0.28 /testbed/django/db/models/fields/files.py(146):     def __setstate__(self, state):
0.28 /testbed/django/db/models/fields/files.py(151): class FileDescriptor(DeferredAttribute):
0.28 /testbed/django/db/models/fields/files.py(151): class FileDescriptor(DeferredAttribute):
0.28 /testbed/django/db/models/fields/files.py(152):     """
0.28 /testbed/django/db/models/fields/files.py(166):     def __get__(self, instance, cls=None):
0.28 /testbed/django/db/models/fields/files.py(220):     def __set__(self, instance, value):
0.28 /testbed/django/db/models/fields/files.py(224): class FileField(Field):
0.28 /testbed/django/db/models/fields/files.py(224): class FileField(Field):
0.28 /testbed/django/db/models/fields/files.py(228):     attr_class = FieldFile
0.28 /testbed/django/db/models/fields/files.py(231):     descriptor_class = FileDescriptor
0.28 /testbed/django/db/models/fields/files.py(233):     description = _("File")
0.28 /testbed/django/db/models/fields/files.py(236):         self, verbose_name=None, name=None, upload_to="", storage=None, **kwargs
0.28 /testbed/django/db/models/fields/files.py(235):     def __init__(
0.28 /testbed/django/db/models/fields/files.py(259):     def check(self, **kwargs):
0.28 /testbed/django/db/models/fields/files.py(266):     def _check_primary_key(self):
0.28 /testbed/django/db/models/fields/files.py(279):     def _check_upload_to(self):
0.28 /testbed/django/db/models/fields/files.py(293):     def deconstruct(self):
0.28 /testbed/django/db/models/fields/files.py(303):     def get_internal_type(self):
0.28 /testbed/django/db/models/fields/files.py(306):     def get_prep_value(self, value):
0.28 /testbed/django/db/models/fields/files.py(314):     def pre_save(self, model_instance, add):
0.28 /testbed/django/db/models/fields/files.py(321):     def contribute_to_class(self, cls, name, **kwargs):
0.28 /testbed/django/db/models/fields/files.py(325):     def generate_filename(self, instance, filename):
0.28 /testbed/django/db/models/fields/files.py(340):     def save_form_data(self, instance, data):
0.28 /testbed/django/db/models/fields/files.py(350):     def formfield(self, **kwargs):
0.28 /testbed/django/db/models/fields/files.py(360): class ImageFileDescriptor(FileDescriptor):
0.28 /testbed/django/db/models/fields/files.py(360): class ImageFileDescriptor(FileDescriptor):
0.28 /testbed/django/db/models/fields/files.py(361):     """
0.28 /testbed/django/db/models/fields/files.py(366):     def __set__(self, instance, value):
0.28 /testbed/django/db/models/fields/files.py(383): class ImageFieldFile(ImageFile, FieldFile):
0.28 /testbed/django/db/models/fields/files.py(383): class ImageFieldFile(ImageFile, FieldFile):
0.28 /testbed/django/db/models/fields/files.py(384):     def delete(self, save=True):
0.28 /testbed/django/db/models/fields/files.py(391): class ImageField(FileField):
0.28 /testbed/django/db/models/fields/files.py(391): class ImageField(FileField):
0.28 /testbed/django/db/models/fields/files.py(392):     attr_class = ImageFieldFile
0.28 /testbed/django/db/models/fields/files.py(393):     descriptor_class = ImageFileDescriptor
0.28 /testbed/django/db/models/fields/files.py(394):     description = _("Image")
0.28 /testbed/django/db/models/fields/files.py(398):         verbose_name=None,
0.28 /testbed/django/db/models/fields/files.py(399):         name=None,
0.28 /testbed/django/db/models/fields/files.py(400):         width_field=None,
0.28 /testbed/django/db/models/fields/files.py(401):         height_field=None,
0.28 /testbed/django/db/models/fields/files.py(396):     def __init__(
0.28 /testbed/django/db/models/fields/files.py(407):     def check(self, **kwargs):
0.28 /testbed/django/db/models/fields/files.py(413):     def _check_image_library_installed(self):
0.28 /testbed/django/db/models/fields/files.py(431):     def deconstruct(self):
0.28 /testbed/django/db/models/fields/files.py(439):     def contribute_to_class(self, cls, name, **kwargs):
0.28 /testbed/django/db/models/fields/files.py(448):     def update_dimension_fields(self, instance, force=False, *args, **kwargs):
0.28 /testbed/django/db/models/fields/files.py(505):     def formfield(self, **kwargs):
Testing against Django installed in '/testbed/django'
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
test_storage_callable_deconstruction (test_coverup_django__django-16493.FileFieldDeconstructTest.test_storage_callable_deconstruction)
Test that the storage argument is included when the callable returns default_storage. ... FAIL

======================================================================
FAIL: test_storage_callable_deconstruction (test_coverup_django__django-16493.FileFieldDeconstructTest.test_storage_callable_deconstruction)
Test that the storage argument is included when the callable returns default_storage.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-16493.py", line 26, in test_storage_callable_deconstruction
    self.assertEqual(kwargs["storage"], "path.to.get_default_storage")
AssertionError: <function get_default_storage at 0x7f93ef96b2e0> != 'path.to.get_default_storage'

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
0.59 /testbed/django/db/models/fields/files.py(238):         self._primary_key_set_explicitly = "primary_key" in kwargs
0.59 /testbed/django/db/models/fields/files.py(240):         self.storage = storage or default_storage
0.59 /testbed/django/db/models/fields/files.py(241):         if callable(self.storage):
0.59 /testbed/django/db/models/fields/files.py(243):             self._storage_callable = self.storage
0.59 /testbed/django/db/models/fields/files.py(244):             self.storage = self.storage()
0.59 /testbed/django/db/models/fields/files.py(245):             if not isinstance(self.storage, Storage):
0.59 /testbed/django/db/models/fields/files.py(254):         self.upload_to = upload_to
0.59 /testbed/django/db/models/fields/files.py(256):         kwargs.setdefault("max_length", 100)
0.59 /testbed/django/db/models/fields/files.py(257):         super().__init__(verbose_name, name, **kwargs)
0.59 /testbed/django/db/models/fields/files.py(322):         super().contribute_to_class(cls, name, **kwargs)
0.59 /testbed/django/db/models/fields/files.py(323):         setattr(cls, self.attname, self.descriptor_class(self))
0.59 /testbed/django/db/models/fields/files.py(294):         name, path, args, kwargs = super().deconstruct()
0.59 /testbed/django/db/models/fields/files.py(295):         if kwargs.get("max_length") == 100:
0.59 /testbed/django/db/models/fields/files.py(296):             del kwargs["max_length"]
0.59 /testbed/django/db/models/fields/files.py(297):         kwargs["upload_to"] = self.upload_to
0.59 /testbed/django/db/models/fields/files.py(298):         storage = getattr(self, "_storage_callable", self.storage)
0.59 /testbed/django/db/models/fields/files.py(299):         if storage is not default_storage:
0.59 /testbed/django/db/models/fields/files.py(300):             kwargs["storage"] = storage
0.59 /testbed/django/db/models/fields/files.py(301):         return name, path, args, kwargs
+ cat coverage.cover
{"/testbed/django/db/models/fields/files.py": {"0": 0, "1": 1, "2": 1, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "17": 2, "151": 2, "224": 2, "360": 2, "383": 2, "391": 2, "18": 1, "25": 1, "32": 1, "39": 1, "45": 1, "51": 1, "54": 1, "57": 1, "59": 2, "60": 2, "64": 2, "65": 2, "69": 2, "70": 2, "76": 1, "85": 1, "91": 1, "101": 1, "103": 1, "121": 1, "123": 2, "124": 2, "128": 1, "133": 1, "146": 1, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "28": 0, "29": 0, "30": 0, "33": 0, "40": 0, "41": 0, "42": 0, "46": 0, "47": 0, "48": 0, "49": 0, "52": 0, "55": 0, "61": 0, "62": 0, "66": 0, "67": 0, "71": 0, "72": 0, "73": 0, "74": 0, "77": 0, "78": 0, "79": 0, "81": 0, "82": 0, "92": 0, "93": 0, "94": 0, "95": 0, "98": 0, "99": 0, "104": 0, "105": 0, "108": 0, "109": 0, "110": 0, "112": 0, "114": 0, "115": 0, "116": 0, "118": 0, "119": 0, "125": 0, "126": 0, "129": 0, "130": 0, "131": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "137": 0, "147": 0, "148": 0, "166": 1, "220": 1, "167": 0, "168": 0, "182": 0, "191": 0, "192": 0, "193": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "208": 0, "209": 0, "210": 0, "211": 0, "214": 0, "215": 0, "218": 0, "221": 0, "228": 1, "231": 1, "233": 1, "236": 1, "235": 1, "259": 1, "266": 1, "279": 1, "293": 1, "303": 1, "306": 1, "314": 1, "321": 1, "325": 1, "340": 1, "350": 1, "238": 1, "240": 1, "241": 1, "243": 1, "244": 1, "245": 1, "246": 0, "249": 0, "250": 0, "251": 0, "247": 0, "254": 1, "256": 1, "257": 1, "260": 0, "261": 0, "262": 0, "263": 0, "267": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "268": 0, "277": 0, "280": 0, "282": 0, "283": 0, "284": 0, "285": 0, "286": 0, "287": 0, "281": 0, "291": 0, "294": 1, "295": 1, "296": 1, "297": 1, "298": 1, "299": 1, "300": 1, "301": 1, "304": 0, "307": 0, "310": 0, "311": 0, "312": 0, "315": 0, "316": 0, "318": 0, "319": 0, "322": 1, "323": 1, "332": 0, "333": 0, "335": 0, "336": 0, "337": 0, "338": 0, "345": 0, "348": 0, "351": 0, "353": 0, "354": 0, "352": 0, "355": 0, "366": 1, "367": 0, "368": 0, "379": 0, "380": 0, "384": 1, "386": 0, "387": 0, "388": 0, "392": 1, "393": 1, "394": 1, "398": 1, "399": 1, "400": 1, "401": 1, "396": 1, "407": 1, "413": 1, "431": 1, "439": 1, "448": 1, "505": 1, "404": 0, "405": 0, "408": 0, "409": 0, "410": 0, "414": 0, "415": 0, "429": 0, "416": 0, "418": 0, "419": 0, "421": 0, "424": 0, "425": 0, "417": 0, "432": 0, "433": 0, "434": 0, "435": 0, "436": 0, "437": 0, "440": 0, "445": 0, "446": 0, "463": 0, "464": 0, "465": 0, "470": 0, "473": 0, "474": 0, "477": 0, "478": 0, "476": 0, "487": 0, "488": 0, "491": 0, "492": 0, "493": 0, "496": 0, "497": 0, "500": 0, "501": 0, "502": 0, "503": 0, "506": 0, "508": 0, "507": 0, "509": 0}}
+ git checkout e3a4cee081cf60650b8824f0646383b79cb110e7
Note: switching to 'e3a4cee081cf60650b8824f0646383b79cb110e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at e3a4cee081 Fixed #34278 -- Made translatable string plural-aware in SelectFilter2.js.
M	django/db/models/fields/files.py
+ git apply /root/pre_state.patch
error: unrecognized input
