+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 1f8c4d9eb185c16a2c1d881c054f015e1c2eb334
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 1f8c4d9eb185c16a2c1d881c054f015e1c2eb334
Author: Jacob Walls <jacobtylerwalls@gmail.com>
Date:   Sun Jul 2 18:10:48 2023 -0400

    Add test result that was hidden
    
    This test result change is reproducible
    on main by changing `as b` to `as boo`
    so that it met the prior invalid-name
    criterion. I don't know what the source
    of the interaction is between these two
    messages.

diff --git a/tests/functional/r/regression/regression_4723.py b/tests/functional/r/regression/regression_4723.py
index 012825db0..51c1f7d5d 100644
--- a/tests/functional/r/regression/regression_4723.py
+++ b/tests/functional/r/regression/regression_4723.py
@@ -18,4 +18,4 @@ class B(A):
 
 def func():
     with B().get() as b:
-        b.play()
+        b.play()  # [too-many-function-args]
diff --git a/tests/functional/r/regression/regression_4723.txt b/tests/functional/r/regression/regression_4723.txt
index f64667e72..4f1914089 100644
--- a/tests/functional/r/regression/regression_4723.txt
+++ b/tests/functional/r/regression/regression_4723.txt
@@ -1 +1,2 @@
 no-method-argument:15:4:15:12:B.play:Method 'play' has no argument:UNDEFINED
+too-many-function-args:21:8:21:16:func:Too many positional arguments for method call:UNDEFINED
+ git diff 1f8c4d9eb185c16a2c1d881c054f015e1c2eb334
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Error processing line 1 of /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/distutils-precedence.pth:

  Traceback (most recent call last):
    File "/opt/miniconda3/envs/testbed/lib/python3.9/site.py", line 177, in addpackage
      exec(line)
    File "<string>", line 1, in <module>
  ModuleNotFoundError: No module named '_distutils_hack'

Remainder of file ignored
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: platformdirs>=2.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (4.3.8)
Requirement already satisfied: astroid<=3.1.0-dev0,>=3.0.0a8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (3.0.3)
Requirement already satisfied: isort<6,>=4.2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (5.13.2)
Requirement already satisfied: mccabe<0.8,>=0.6 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (0.7.0)
Requirement already satisfied: tomlkit>=0.10.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (0.11.8)
Requirement already satisfied: typing-extensions>=3.10.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (4.14.1)
Requirement already satisfied: dill>=0.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (0.4.0)
Requirement already satisfied: tomli>=1.1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pylint==3.0.0b1) (2.2.1)
Building wheels for collected packages: pylint
  Building editable for pylint (pyproject.toml): started
  Building editable for pylint (pyproject.toml): finished with status 'done'
  Created wheel for pylint: filename=pylint-3.0.0b1-0.editable-py3-none-any.whl size=25475 sha256=98c1e7af9ba0cf86dd0aacbc40b25bdc865c28509d56803bdd9e028f6836a947
  Stored in directory: /tmp/pip-ephem-wheel-cache-qf0xdbur/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built pylint
Installing collected packages: pylint
  Attempting uninstall: pylint
    Found existing installation: pylint 3.0.0b1
    Uninstalling pylint-3.0.0b1:
      Successfully uninstalled pylint-3.0.0b1
Successfully installed pylint-3.0.0b1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch pylint/config/argument.py...
Checking patch pylint/utils/__init__.py...
Checking patch pylint/utils/utils.py...
Applied patch pylint/config/argument.py cleanly.
Applied patch pylint/utils/__init__.py cleanly.
Applied patch pylint/utils/utils.py cleanly.
+ git apply -v -
<stdin>:14: trailing whitespace.
    
<stdin>:17: trailing whitespace.
    
Checking patch tests/test_coverup_pylint-dev__pylint-8898.py...
Applied patch tests/test_coverup_pylint-dev__pylint-8898.py cleanly.
warning: 2 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(pylint/config/argument\.py|pylint/utils/utils\.py|pylint/utils/__init__\.py)' -m pytest --no-header -rA -p no:cacheprovider tests/test_coverup_pylint-dev__pylint-8898.py
Error processing line 1 of /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/distutils-precedence.pth:

  Traceback (most recent call last):
    File "/opt/miniconda3/envs/testbed/lib/python3.9/site.py", line 177, in addpackage
      exec(line)
    File "<string>", line 1, in <module>
  ModuleNotFoundError: No module named '_distutils_hack'

Remainder of file ignored
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(pylint/config/argument\\.py|pylint/utils/utils\\.py|pylint/utils/__init__\\.py)']
============================= test session starts ==============================
collected 1 item

tests/test_coverup_pylint-dev__pylint-8898.py .                          [100%]

==================================== PASSES ====================================
____________________ test_regexp_csv_transformer_with_comma ____________________
----------------------------- Captured stdout call -----------------------------
0.88 /testbed/pylint/config/argument.py(116):     patterns: list[Pattern[str]] = []
0.88 /testbed/pylint/config/argument.py(117):     for pattern in pylint_utils._check_regexp_csv(value):
0.88 /testbed/pylint/utils/utils.py(260):     if isinstance(value, (list, tuple)):
0.88 /testbed/pylint/utils/utils.py(264):         regexps: deque[deque[str] | None] = deque([None])
0.88 /testbed/pylint/utils/utils.py(265):         open_braces = False
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(275):                 regexps.pop()
0.88 /testbed/pylint/utils/utils.py(276):                 regexps.append(deque([char]))
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(268):                 open_braces = True
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(270):                 open_braces = False
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(267):             if char == "{":
0.88 /testbed/pylint/utils/utils.py(269):             elif char == "}" and open_braces:
0.88 /testbed/pylint/utils/utils.py(272):             if char == "," and not open_braces:
0.88 /testbed/pylint/utils/utils.py(274):             elif regexps[-1] is None:
0.88 /testbed/pylint/utils/utils.py(278):                 regexps[-1].append(char)
0.88 /testbed/pylint/utils/utils.py(266):         for char in value:
0.88 /testbed/pylint/utils/utils.py(279):         yield from ("".join(regexp).strip() for regexp in regexps if regexp is not None)
0.88 /testbed/pylint/utils/utils.py(279):         yield from ("".join(regexp).strip() for regexp in regexps if regexp is not None)
0.88 /testbed/pylint/config/argument.py(118):         patterns.append(_regex_transformer(pattern))
0.88 /testbed/pylint/config/argument.py(107):     try:
0.88 /testbed/pylint/config/argument.py(108):         return re.compile(value)
0.88 /testbed/pylint/config/argument.py(117):     for pattern in pylint_utils._check_regexp_csv(value):
0.88 /testbed/pylint/utils/utils.py(279):         yield from ("".join(regexp).strip() for regexp in regexps if regexp is not None)
0.88 /testbed/pylint/config/argument.py(119):     return patterns
=========================== short test summary info ============================
PASSED tests/test_coverup_pylint-dev__pylint-8898.py::test_regexp_csv_transformer_with_comma
============================== 1 passed in 0.03s ===============================
+ cat coverage.cover
{"/testbed/pylint/utils/__init__.py": {"5": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "31": 1}}
{"/testbed/pylint/utils/utils.py": {"5": 1, "7": 1, "8": 1, "9": 1, "11": 1, "12": 0, "13": 0, "15": 0, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 1, "28": 1, "40": 1, "42": 1, "43": 1, "45": 1, "46": 0, "48": 1, "51": 2, "52": 1, "56": 1, "57": 1, "58": 2, "59": 1, "64": 1, "65": 1, "66": 2, "67": 2, "68": 1, "69": 1, "70": 1, "71": 1, "72": 1, "74": 2, "75": 1, "76": 1, "77": 1, "78": 1, "79": 1, "80": 1, "81": 1, "86": 1, "85": 1, "96": 1, "100": 1, "104": 1, "113": 1, "130": 1, "137": 1, "162": 1, "174": 1, "180": 1, "213": 1, "236": 1, "251": 1, "257": 1, "282": 1, "289": 1, "310": 1, "330": 1, "364": 2, "89": 0, "90": 0, "91": 0, "101": 0, "108": 0, "109": 0, "110": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "134": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "175": 0, "176": 0, "177": 0, "184": 1, "185": 36, "186": 35, "187": 35, "188": 1, "190": 34, "189": 75, "191": 31, "193": 4, "194": 3, "195": 3, "198": 33, "199": 66, "200": 33, "202": 0, "204": 0, "205": 0, "206": 0, "208": 33, "209": 30, "210": 30, "233": 3, "242": 120, "243": 74, "244": 46, "245": 0, "246": 46, "247": 0, "248": 46, "252": 1, "253": 0, "254": 1, "260": 3, "261": 0, "264": 3, "265": 3, "266": 13, "267": 10, "268": 1, "269": 9, "270": 1, "272": 10, "273": 0, "274": 10, "275": 1, "276": 1, "278": 9, "279": 9, "284": 0, "285": 0, "286": 0, "294": 0, "295": 0, "296": 0, "297": 0, "298": 0, "299": 0, "300": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "307": 0, "317": 0, "318": 0, "319": 0, "320": 0, "322": 0, "323": 0, "324": 0, "325": 0, "326": 0, "327": 0, "332": 0, "333": 0, "334": 0, "335": 0, "337": 0, "339": 0, "340": 0, "341": 0, "342": 0, "343": 0, "344": 0, "345": 0, "346": 0, "347": 0, "348": 0, "349": 0, "351": 0, "352": 0, "353": 0, "355": 0, "356": 0, "357": 0, "358": 0, "360": 0, "361": 0, "367": 1, "385": 1, "368": 0, "369": 0, "374": 0, "375": 0, "379": 0, "380": 0, "381": 0, "382": 0, "386": 0, "387": 0, "388": 0}}
{"/testbed/pylint/config/argument.py": {"5": 1, "10": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "20": 1, "21": 1, "22": 1, "23": 1, "25": 2, "26": 2, "27": 1, "28": 1, "29": 1, "30": 1, "31": 1, "32": 1, "33": 1, "38": 1, "51": 1, "56": 1, "57": 1, "60": 1, "72": 1, "79": 1, "84": 1, "94": 1, "105": 1, "114": 1, "122": 1, "137": 1, "138": 1, "139": 1, "140": 1, "141": 1, "142": 1, "143": 1, "144": 1, "145": 1, "146": 1, "147": 1, "148": 1, "149": 1, "150": 1, "136": 1, "161": 2, "194": 2, "223": 2, "271": 2, "301": 2, "350": 2, "391": 2, "429": 2, "467": 2, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "48": 0, "53": 1, "62": 1, "63": 1, "64": 0, "65": 1, "66": 1, "67": 0, "68": 0, "74": 2, "75": 0, "76": 2, "81": 64, "88": 0, "89": 0, "90": 0, "91": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "107": 4, "108": 4, "109": 0, "110": 0, "111": 0, "116": 3, "117": 4, "118": 1, "119": 3, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "133": 0, "169": 1, "177": 138, "180": 138, "184": 138, "187": 138, "188": 1, "190": 138, "191": 138, "202": 1, "212": 264, "213": 132, "216": 132, "219": 132, "220": 132, "232": 1, "245": 260, "246": 130, "247": 130, "248": 130, "249": 130, "250": 130, "251": 130, "254": 130, "257": 130, "263": 130, "264": 130, "281": 1, "291": 4, "292": 2, "293": 2, "294": 2, "295": 2, "296": 2, "297": 2, "310": 1, "323": 6, "324": 3, "327": 3, "330": 3, "333": 3, "336": 3, "342": 3, "343": 3, "359": 1, "373": 0, "375": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "387": 0, "400": 1, "413": 4, "414": 2, "415": 2, "416": 2, "417": 2, "418": 2, "419": 2, "420": 2, "421": 2, "422": 2, "425": 2, "426": 2, "438": 1, "451": 2, "452": 1, "453": 1, "454": 1, "455": 1, "456": 1, "457": 1, "458": 1, "459": 1, "460": 1, "463": 1, "464": 1, "476": 1, "487": 6, "488": 3, "491": 3, "494": 3, "497": 3, "498": 3}}
+ git checkout 1f8c4d9eb185c16a2c1d881c054f015e1c2eb334
Note: switching to '1f8c4d9eb185c16a2c1d881c054f015e1c2eb334'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 1f8c4d9eb Add test result that was hidden
M	pylint/config/argument.py
M	pylint/utils/__init__.py
M	pylint/utils/utils.py
+ git apply /root/pre_state.patch
error: unrecognized input
