{"instance_id": "django__django-11848", "repo": "django/django", "version": "3.1", "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab", "patch_list": ["diff --git a/django/utils/http.py b/django/utils/http.py\n--- a/django/utils/http.py\n+++ b/django/utils/http.py\n@@ -176,10 +176,14 @@ def parse_http_date(date):\n     try:\n         year = int(m.group('year'))\n         if year < 100:\n-            if year < 70:\n-                year += 2000\n+            current_year = datetime.datetime.utcnow().year\n+            current_century = current_year - (current_year % 100)\n+            if year - (current_year % 100) > 50:\n+                # year that appears to be more than 50 years in the future are\n+                # interpreted as representing the past.\n+                year += current_century - 100\n             else:\n-                year += 1900\n+                year += current_century\n         month = MONTHS.index(m.group('mon').lower()) + 1\n         day = int(m.group('day'))\n         hour = int(m.group('hour'))\n", "diff --git a/dev/null b/tests/test_coverup_django__django-11848.py\nnew file mode 100644\nindex e69de29..1ce11cc 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11848.py\n@@ -0,0 +1,22 @@\n+from django.test import SimpleTestCase\n+from django.utils.http import parse_http_date\n+import datetime\n+\n+class ParseHttpDateTests(SimpleTestCase):\n+    def test_parse_http_date_two_digit_year_bug(self):\n+        # Test case: Year '74' should be interpreted as 2074 according to the correct logic\n+        # Using RFC850_DATE format: 'Sunday, 06-Nov-74 08:49:37 GMT'\n+        date_string = \"Sunday, 06-Nov-74 08:49:37 GMT\"\n+        parsed_timestamp = parse_http_date(date_string)\n+        parsed_year = datetime.datetime.utcfromtimestamp(parsed_timestamp).year\n+\n+        # Assert the correct behavior\n+        self.assertEqual(parsed_year, 2074)  # Correct behavior: should be interpreted as 2074\n+\n+        # Test case: Year '50' should be interpreted as 1950 according to the correct logic\n+        date_string = \"Sunday, 06-Nov-50 08:49:37 GMT\"\n+        parsed_timestamp = parse_http_date(date_string)\n+        parsed_year = datetime.datetime.utcfromtimestamp(parsed_timestamp).year\n+\n+        # Assert the correct behavior\n+        self.assertEqual(parsed_year, 1950)  # Correct behavior: should be interpreted as 1950\n"], "arch": "x86_64", "base_commit": "f0adf3b9b7a19cdee05368ff0c0c2d087f011180", "test_directives": ["test_coverup_django__django-11848"], "coverage_files": ["django/utils/http.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/utils/http\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11848", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}