+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 0b0998dc151feb77068e2387c34cc50ef6b356ae
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 0b0998dc151feb77068e2387c34cc50ef6b356ae
Author: 4the4ryushin <aman2001mi@gmail.com>
Date:   Fri Apr 28 02:33:25 2023 +0530

    Fixed #33759 -- Avoided unnecessary subquery in QuerySet.delete() with self-referential subqueries if supported.

diff --git a/django/db/backends/base/features.py b/django/db/backends/base/features.py
index 63b3ab7710..11fa807c1b 100644
--- a/django/db/backends/base/features.py
+++ b/django/db/backends/base/features.py
@@ -12,6 +12,9 @@ class BaseDatabaseFeatures:
     allows_group_by_select_index = True
     empty_fetchmany_value = []
     update_can_self_select = True
+    # Does the backend support self-reference subqueries in the DELETE
+    # statement?
+    delete_can_self_reference_subquery = True
 
     # Does the backend distinguish between '' and None?
     interprets_empty_strings_as_nulls = False
diff --git a/django/db/backends/mysql/features.py b/django/db/backends/mysql/features.py
index 0b8d12d2fe..739ab380e0 100644
--- a/django/db/backends/mysql/features.py
+++ b/django/db/backends/mysql/features.py
@@ -24,6 +24,7 @@ class DatabaseFeatures(BaseDatabaseFeatures):
     supports_slicing_ordering_in_compound = True
     supports_index_on_text_field = False
     supports_update_conflicts = True
+    delete_can_self_reference_subquery = False
     create_test_procedure_without_params_sql = """
         CREATE PROCEDURE test_procedure ()
         BEGIN
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 07393e7605..a7a8c98b99 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1890,7 +1890,10 @@ class SQLDeleteCompiler(SQLCompiler):
         Create the SQL for this query. Return the SQL string and list of
         parameters.
         """
-        if self.single_alias and not self.contains_self_reference_subquery:
+        if self.single_alias and (
+            self.connection.features.delete_can_self_reference_subquery
+            or not self.contains_self_reference_subquery
+        ):
             return self._as_sql(self.query)
         innerq = self.query.clone()
         innerq.__class__ = Query
diff --git a/tests/delete_regress/tests.py b/tests/delete_regress/tests.py
index 173f767b28..2540fd2802 100644
--- a/tests/delete_regress/tests.py
+++ b/tests/delete_regress/tests.py
@@ -379,15 +379,20 @@ class DeleteTests(TestCase):
         child = Child.objects.create(name="Juan")
         Book.objects.create(pagecount=500, owner=child)
         PlayedWith.objects.create(child=child, toy=toy, date=datetime.date.today())
-        Book.objects.filter(
-            Exists(
-                Book.objects.filter(
-                    pk=OuterRef("pk"),
-                    owner__toys=toy.pk,
-                ),
-            )
-        ).delete()
+        with self.assertNumQueries(1) as ctx:
+            Book.objects.filter(
+                Exists(
+                    Book.objects.filter(
+                        pk=OuterRef("pk"),
+                        owner__toys=toy.pk,
+                    ),
+                )
+            ).delete()
+
         self.assertIs(Book.objects.exists(), False)
+        sql = ctx.captured_queries[0]["sql"].lower()
+        if connection.features.delete_can_self_reference_subquery:
+            self.assertEqual(sql.count("select"), 1)
 
 
 class DeleteDistinct(SimpleTestCase):
+ git diff 0b0998dc151feb77068e2387c34cc50ef6b356ae
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.6.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230501082020) (3.9.1)
Requirement already satisfied: sqlparse>=0.3.1 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230501082020) (0.5.3)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-5.0.dev20230501082020-0.editable-py3-none-any.whl size=27428 sha256=e73f9e9390378e642863409535349a7537eb0c1c8f665b4233d1994949944200
  Stored in directory: /tmp/pip-ephem-wheel-cache-8olnr0cp/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 5.0.dev20230501082020
    Uninstalling Django-5.0.dev20230501082020:
      Successfully uninstalled Django-5.0.dev20230501082020
Successfully installed Django-5.0.dev20230501082020
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch django/db/migrations/operations/models.py...
Applied patch django/db/migrations/operations/models.py cleanly.
+ git apply -v -
Checking patch tests/test_coverup_django__django-16819.py...
Applied patch tests/test_coverup_django__django-16819.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/operations/models\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16819
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/db/migrations/operations/models\\.py)']
Testing against Django installed in '/testbed/django'
0.43 /testbed/django/db/migrations/operations/models.py(1): from django.db import models
0.43 /testbed/django/db/migrations/operations/models.py(2): from django.db.migrations.operations.base import Operation
0.43 /testbed/django/db/migrations/operations/models.py(3): from django.db.migrations.state import ModelState
0.43 /testbed/django/db/migrations/operations/models.py(4): from django.db.migrations.utils import field_references, resolve_relation
0.43 /testbed/django/db/migrations/operations/models.py(5): from django.db.models.options import normalize_together
0.43 /testbed/django/db/migrations/operations/models.py(6): from django.utils.functional import cached_property
0.43 /testbed/django/db/migrations/operations/models.py(8): from .fields import AddField, AlterField, FieldOperation, RemoveField, RenameField
0.43 /testbed/django/db/migrations/operations/models.py(11): def _check_for_duplicates(arg_name, objs):
0.43 /testbed/django/db/migrations/operations/models.py(21): class ModelOperation(Operation):
0.43 /testbed/django/db/migrations/operations/models.py(21): class ModelOperation(Operation):
0.43 /testbed/django/db/migrations/operations/models.py(22):     def __init__(self, name):
0.43 /testbed/django/db/migrations/operations/models.py(25):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(26):     def name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(25):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(26):     def name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(29):     def references_model(self, name, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(32):     def reduce(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(37):     def can_reduce_through(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(41): class CreateModel(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(41): class CreateModel(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(42):     """Create a model's table."""
0.43 /testbed/django/db/migrations/operations/models.py(44):     serialization_expand_args = ["fields", "options", "managers"]
0.43 /testbed/django/db/migrations/operations/models.py(46):     def __init__(self, name, fields, options=None, bases=None, managers=None):
0.43 /testbed/django/db/migrations/operations/models.py(68):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(81):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(93):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(98):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(103):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(109):     @property
0.43 /testbed/django/db/migrations/operations/models.py(110):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(109):     @property
0.43 /testbed/django/db/migrations/operations/models.py(110):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(113):     def references_model(self, name, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(136):     def reduce(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(309): class DeleteModel(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(309): class DeleteModel(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(310):     """Drop a model's table."""
0.43 /testbed/django/db/migrations/operations/models.py(312):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(318):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(321):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(326):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(331):     def references_model(self, name, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(336):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(339):     @property
0.43 /testbed/django/db/migrations/operations/models.py(340):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(339):     @property
0.43 /testbed/django/db/migrations/operations/models.py(340):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(344): class RenameModel(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(344): class RenameModel(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(345):     """Rename a model."""
0.43 /testbed/django/db/migrations/operations/models.py(347):     def __init__(self, old_name, new_name):
0.43 /testbed/django/db/migrations/operations/models.py(352):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(353):     def old_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(352):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(353):     def old_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(356):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(357):     def new_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(356):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(357):     def new_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(360):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(367):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(370):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(418):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(433):     def references_model(self, name, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(438):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(441):     @property
0.43 /testbed/django/db/migrations/operations/models.py(442):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(441):     @property
0.43 /testbed/django/db/migrations/operations/models.py(442):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(445):     def reduce(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(463): class ModelOptionOperation(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(463): class ModelOptionOperation(ModelOperation):
0.43 /testbed/django/db/migrations/operations/models.py(464):     def reduce(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(473): class AlterModelTable(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(473): class AlterModelTable(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(474):     """Rename a model's table."""
0.43 /testbed/django/db/migrations/operations/models.py(476):     def __init__(self, name, table):
0.43 /testbed/django/db/migrations/operations/models.py(480):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(487):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(490):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(510):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(513):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(519):     @property
0.43 /testbed/django/db/migrations/operations/models.py(520):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(519):     @property
0.43 /testbed/django/db/migrations/operations/models.py(520):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(524): class AlterModelTableComment(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(524): class AlterModelTableComment(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(525):     def __init__(self, name, table_comment):
0.43 /testbed/django/db/migrations/operations/models.py(529):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(536):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(541):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(551):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(554):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(557):     @property
0.43 /testbed/django/db/migrations/operations/models.py(558):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(557):     @property
0.43 /testbed/django/db/migrations/operations/models.py(558):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(562): class AlterTogetherOptionOperation(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(562): class AlterTogetherOptionOperation(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(563):     option_name = None
0.43 /testbed/django/db/migrations/operations/models.py(565):     def __init__(self, name, option_value):
0.43 /testbed/django/db/migrations/operations/models.py(571):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(572):     def option_value(self):
0.43 /testbed/django/db/migrations/operations/models.py(571):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(572):     def option_value(self):
0.43 /testbed/django/db/migrations/operations/models.py(575):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(582):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(589):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(600):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(603):     def references_field(self, model_name, name, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(609):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(616):     @property
0.43 /testbed/django/db/migrations/operations/models.py(617):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(616):     @property
0.43 /testbed/django/db/migrations/operations/models.py(617):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(620):     def can_reduce_through(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(627): class AlterUniqueTogether(AlterTogetherOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(627): class AlterUniqueTogether(AlterTogetherOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(628):     """
0.43 /testbed/django/db/migrations/operations/models.py(633):     option_name = "unique_together"
0.43 /testbed/django/db/migrations/operations/models.py(635):     def __init__(self, name, unique_together):
0.43 /testbed/django/db/migrations/operations/models.py(639): class AlterIndexTogether(AlterTogetherOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(639): class AlterIndexTogether(AlterTogetherOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(640):     """
0.43 /testbed/django/db/migrations/operations/models.py(645):     option_name = "index_together"
0.43 /testbed/django/db/migrations/operations/models.py(647):     def __init__(self, name, index_together):
0.43 /testbed/django/db/migrations/operations/models.py(651): class AlterOrderWithRespectTo(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(651): class AlterOrderWithRespectTo(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(652):     """Represent a change with the order_with_respect_to option."""
0.43 /testbed/django/db/migrations/operations/models.py(654):     option_name = "order_with_respect_to"
0.43 /testbed/django/db/migrations/operations/models.py(656):     def __init__(self, name, order_with_respect_to):
0.43 /testbed/django/db/migrations/operations/models.py(660):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(667):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(674):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(700):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(703):     def references_field(self, model_name, name, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(708):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(714):     @property
0.43 /testbed/django/db/migrations/operations/models.py(715):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(714):     @property
0.43 /testbed/django/db/migrations/operations/models.py(715):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(719): class AlterModelOptions(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(719): class AlterModelOptions(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(720):     """
0.43 /testbed/django/db/migrations/operations/models.py(727):     ALTER_OPTION_KEYS = [
0.43 /testbed/django/db/migrations/operations/models.py(741):     def __init__(self, name, options):
0.43 /testbed/django/db/migrations/operations/models.py(745):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(752):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(760):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(763):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(766):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(769):     @property
0.43 /testbed/django/db/migrations/operations/models.py(770):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(769):     @property
0.43 /testbed/django/db/migrations/operations/models.py(770):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(774): class AlterModelManagers(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(774): class AlterModelManagers(ModelOptionOperation):
0.43 /testbed/django/db/migrations/operations/models.py(775):     """Alter the model's managers."""
0.43 /testbed/django/db/migrations/operations/models.py(777):     serialization_expand_args = ["managers"]
0.43 /testbed/django/db/migrations/operations/models.py(779):     def __init__(self, name, managers):
0.43 /testbed/django/db/migrations/operations/models.py(783):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(786):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(789):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(792):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(795):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(798):     @property
0.43 /testbed/django/db/migrations/operations/models.py(799):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(798):     @property
0.43 /testbed/django/db/migrations/operations/models.py(799):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(803): class IndexOperation(Operation):
0.43 /testbed/django/db/migrations/operations/models.py(803): class IndexOperation(Operation):
0.43 /testbed/django/db/migrations/operations/models.py(804):     option_name = "indexes"
0.43 /testbed/django/db/migrations/operations/models.py(806):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(807):     def model_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(806):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(807):     def model_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(811): class AddIndex(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(811): class AddIndex(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(812):     """Add an index on a model."""
0.43 /testbed/django/db/migrations/operations/models.py(814):     def __init__(self, model_name, index):
0.43 /testbed/django/db/migrations/operations/models.py(823):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(826):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(831):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(836):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(847):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(860):     @property
0.43 /testbed/django/db/migrations/operations/models.py(861):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(860):     @property
0.43 /testbed/django/db/migrations/operations/models.py(861):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(864):     def reduce(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(870): class RemoveIndex(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(870): class RemoveIndex(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(871):     """Remove an index from a model."""
0.43 /testbed/django/db/migrations/operations/models.py(873):     def __init__(self, model_name, name):
0.43 /testbed/django/db/migrations/operations/models.py(877):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(880):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(887):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(894):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(905):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(908):     @property
0.43 /testbed/django/db/migrations/operations/models.py(909):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(908):     @property
0.43 /testbed/django/db/migrations/operations/models.py(909):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(913): class RenameIndex(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(913): class RenameIndex(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(914):     """Rename an index."""
0.43 /testbed/django/db/migrations/operations/models.py(916):     def __init__(self, model_name, new_name, old_name=None, old_fields=None):
0.43 /testbed/django/db/migrations/operations/models.py(931):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(932):     def old_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(931):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(932):     def old_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(935):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(936):     def new_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(935):     @cached_property
0.43 /testbed/django/db/migrations/operations/models.py(936):     def new_name_lower(self):
0.43 /testbed/django/db/migrations/operations/models.py(939):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(950):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(968):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(1005):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(1024):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(1034):     @property
0.43 /testbed/django/db/migrations/operations/models.py(1035):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(1034):     @property
0.43 /testbed/django/db/migrations/operations/models.py(1035):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(1044):     def reduce(self, operation, app_label):
0.43 /testbed/django/db/migrations/operations/models.py(1062): class AddConstraint(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(1062): class AddConstraint(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(1063):     option_name = "constraints"
0.43 /testbed/django/db/migrations/operations/models.py(1065):     def __init__(self, model_name, constraint):
0.43 /testbed/django/db/migrations/operations/models.py(1069):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(1072):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(1077):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(1082):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(1092):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(1098):     @property
0.43 /testbed/django/db/migrations/operations/models.py(1099):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(1098):     @property
0.43 /testbed/django/db/migrations/operations/models.py(1099):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(1103): class RemoveConstraint(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(1103): class RemoveConstraint(IndexOperation):
0.43 /testbed/django/db/migrations/operations/models.py(1104):     option_name = "constraints"
0.43 /testbed/django/db/migrations/operations/models.py(1106):     def __init__(self, model_name, name):
0.43 /testbed/django/db/migrations/operations/models.py(1110):     def state_forwards(self, app_label, state):
0.43 /testbed/django/db/migrations/operations/models.py(1113):     def database_forwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(1120):     def database_backwards(self, app_label, schema_editor, from_state, to_state):
0.43 /testbed/django/db/migrations/operations/models.py(1127):     def deconstruct(self):
0.43 /testbed/django/db/migrations/operations/models.py(1137):     def describe(self):
0.43 /testbed/django/db/migrations/operations/models.py(1140):     @property
0.43 /testbed/django/db/migrations/operations/models.py(1141):     def migration_name_fragment(self):
0.43 /testbed/django/db/migrations/operations/models.py(1140):     @property
0.43 /testbed/django/db/migrations/operations/models.py(1141):     def migration_name_fragment(self):
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
test_add_remove_index_not_optimized (test_coverup_django__django-16819.MigrationOptimizerTest.test_add_remove_index_not_optimized)
Test that AddIndex followed by RemoveIndex on the same model and index ... ok

----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
0.58 /testbed/django/db/migrations/operations/models.py(815):         self.model_name = model_name
0.58 /testbed/django/db/migrations/operations/models.py(816):         if not index.name:
0.58 /testbed/django/db/migrations/operations/models.py(821):         self.index = index
0.58 /testbed/django/db/migrations/operations/models.py(874):         self.model_name = model_name
0.58 /testbed/django/db/migrations/operations/models.py(875):         self.name = name
0.58 /testbed/django/db/migrations/operations/models.py(865):         if isinstance(operation, RemoveIndex) and self.index.name == operation.name:
0.58 /testbed/django/db/migrations/operations/models.py(866):             return []
+ cat coverage.cover
{"/testbed/django/db/migrations/operations/models.py": {"0": 0, "1": 1, "2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "8": 1, "11": 1, "21": 2, "41": 2, "309": 2, "344": 2, "463": 2, "473": 2, "524": 2, "562": 2, "627": 2, "639": 2, "651": 2, "719": 2, "774": 2, "803": 2, "811": 2, "870": 2, "913": 2, "1062": 2, "1103": 2, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "18": 0, "22": 1, "25": 2, "26": 2, "29": 1, "32": 1, "37": 1, "23": 0, "27": 0, "30": 0, "33": 0, "34": 0, "38": 0, "44": 1, "46": 1, "68": 1, "81": 1, "93": 1, "98": 1, "103": 1, "109": 2, "110": 2, "113": 1, "136": 1, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "54": 0, "55": 0, "56": 0, "57": 0, "63": 0, "66": 0, "59": 0, "58": 0, "61": 0, "60": 0, "62": 0, "70": 0, "71": 0, "69": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "94": 0, "95": 0, "96": 0, "99": 0, "100": 0, "101": 0, "105": 0, "106": 0, "104": 0, "111": 0, "114": 0, "115": 0, "116": 0, "119": 0, "120": 0, "122": 0, "123": 0, "124": 0, "126": 0, "129": 0, "130": 0, "131": 0, "133": 0, "134": 0, "138": 0, "137": 0, "139": 0, "140": 0, "142": 0, "144": 0, "143": 0, "145": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "147": 0, "157": 0, "156": 0, "158": 0, "160": 0, "161": 0, "162": 0, "163": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "164": 0, "174": 0, "173": 0, "175": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "177": 0, "187": 0, "186": 0, "188": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "198": 0, "199": 0, "190": 0, "203": 0, "202": 0, "204": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "212": 0, "214": 0, "215": 0, "206": 0, "219": 0, "218": 0, "220": 0, "222": 0, "224": 0, "225": 0, "226": 0, "227": 0, "228": 0, "229": 0, "223": 0, "232": 0, "234": 0, "235": 0, "236": 0, "238": 0, "240": 0, "241": 0, "242": 0, "233": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "250": 0, "251": 0, "252": 0, "253": 0, "257": 0, "261": 0, "262": 0, "263": 0, "264": 0, "265": 0, "267": 0, "268": 0, "269": 0, "271": 0, "274": 0, "275": 0, "276": 0, "266": 0, "279": 0, "280": 0, "281": 0, "282": 0, "283": 0, "284": 0, "289": 0, "291": 0, "292": 0, "293": 0, "295": 0, "296": 0, "297": 0, "299": 0, "301": 0, "302": 0, "303": 0, "294": 0, "306": 0, "237": 0, "254": 0, "255": 0, "272": 0, "270": 0, "285": 0, "287": 0, "286": 0, "298": 0, "312": 1, "318": 1, "321": 1, "326": 1, "331": 1, "336": 1, "339": 2, "340": 2, "314": 0, "313": 0, "316": 0, "319": 0, "322": 0, "323": 0, "324": 0, "327": 0, "328": 0, "329": 0, "334": 0, "337": 0, "341": 0, "347": 1, "352": 2, "353": 2, "356": 2, "357": 2, "360": 1, "367": 1, "370": 1, "418": 1, "433": 1, "438": 1, "441": 2, "442": 2, "445": 1, "348": 0, "349": 0, "350": 0, "354": 0, "358": 0, "362": 0, "363": 0, "361": 0, "365": 0, "368": 0, "371": 0, "372": 0, "373": 0, "375": 0, "376": 0, "377": 0, "378": 0, "381": 0, "382": 0, "383": 0, "384": 0, "386": 0, "388": 0, "389": 0, "387": 0, "391": 0, "392": 0, "394": 0, "395": 0, "396": 0, "397": 0, "400": 0, "401": 0, "403": 0, "406": 0, "407": 0, "409": 0, "411": 0, "412": 0, "413": 0, "414": 0, "415": 0, "420": 0, "421": 0, "419": 0, "423": 0, "425": 0, "428": 0, "429": 0, "427": 0, "431": 0, "435": 0, "434": 0, "439": 0, "443": 0, "447": 0, "446": 0, "448": 0, "451": 0, "452": 0, "453": 0, "450": 0, "458": 0, "459": 0, "460": 0, "464": 1, "466": 0, "465": 0, "467": 0, "469": 0, "470": 0, "476": 1, "480": 1, "487": 1, "490": 1, "510": 1, "513": 1, "519": 2, "520": 2, "477": 0, "478": 0, "482": 0, "483": 0, "481": 0, "485": 0, "488": 0, "491": 0, "492": 0, "493": 0, "494": 0, "495": 0, "496": 0, "497": 0, "500": 0, "501": 0, "503": 0, "504": 0, "505": 0, "506": 0, "507": 0, "511": 0, "515": 0, "516": 0, "514": 0, "521": 0, "525": 1, "529": 1, "536": 1, "541": 1, "551": 1, "554": 1, "557": 2, "558": 2, "526": 0, "527": 0, "531": 0, "532": 0, "530": 0, "534": 0, "537": 0, "538": 0, "542": 0, "543": 0, "544": 0, "545": 0, "546": 0, "547": 0, "548": 0, "552": 0, "555": 0, "559": 0, "563": 1, "565": 1, "571": 2, "572": 2, "575": 1, "582": 1, "589": 1, "600": 1, "603": 1, "609": 1, "616": 2, "617": 2, "620": 1, "566": 0, "567": 0, "568": 0, "569": 0, "573": 0, "577": 0, "578": 0, "576": 0, "580": 0, "583": 0, "584": 0, "585": 0, "586": 0, "590": 0, "591": 0, "592": 0, "593": 0, "594": 0, "595": 0, "596": 0, "597": 0, "601": 0, "604": 0, "605": 0, "606": 0, "611": 0, "612": 0, "613": 0, "610": 0, "618": 0, "621": 0, "622": 0, "623": 0, "633": 1, "635": 1, "636": 0, "645": 1, "647": 1, "648": 0, "654": 1, "656": 1, "660": 1, "667": 1, "674": 1, "700": 1, "703": 1, "708": 1, "714": 2, "715": 2, "657": 0, "658": 0, "662": 0, "663": 0, "661": 0, "665": 0, "668": 0, "669": 0, "670": 0, "671": 0, "675": 0, "676": 0, "677": 0, "680": 0, "679": 0, "681": 0, "683": 0, "684": 0, "689": 0, "688": 0, "690": 0, "692": 0, "693": 0, "694": 0, "695": 0, "696": 0, "697": 0, "701": 0, "704": 0, "705": 0, "710": 0, "711": 0, "709": 0, "716": 0, "727": 1, "741": 1, "745": 1, "752": 1, "760": 1, "763": 1, "766": 1, "769": 2, "770": 2, "742": 0, "743": 0, "747": 0, "748": 0, "746": 0, "750": 0, "753": 0, "754": 0, "755": 0, "756": 0, "757": 0, "761": 0, "764": 0, "767": 0, "771": 0, "777": 1, "779": 1, "783": 1, "786": 1, "789": 1, "792": 1, "795": 1, "798": 2, "799": 2, "780": 0, "781": 0, "784": 0, "787": 0, "790": 0, "793": 0, "796": 0, "800": 0, "804": 1, "806": 2, "807": 2, "808": 0, "814": 1, "823": 1, "826": 1, "831": 1, "836": 1, "847": 1, "860": 2, "861": 2, "864": 1, "815": 1, "816": 1, "817": 0, "818": 0, "819": 0, "821": 1, "824": 0, "827": 0, "828": 0, "829": 0, "832": 0, "833": 0, "834": 0, "838": 0, "839": 0, "837": 0, "842": 0, "843": 0, "844": 0, "841": 0, "848": 0, "850": 0, "851": 0, "852": 0, "849": 0, "855": 0, "856": 0, "857": 0, "854": 0, "862": 0, "865": 1, "866": 1, "867": 0, "873": 1, "877": 1, "880": 1, "887": 1, "894": 1, "905": 1, "908": 2, "909": 2, "874": 1, "875": 1, "878": 0, "881": 0, "882": 0, "883": 0, "884": 0, "885": 0, "888": 0, "889": 0, "890": 0, "891": 0, "892": 0, "896": 0, "897": 0, "895": 0, "900": 0, "901": 0, "902": 0, "899": 0, "906": 0, "910": 0, "916": 1, "931": 2, "932": 2, "935": 2, "936": 2, "939": 1, "950": 1, "968": 1, "1005": 1, "1024": 1, "1034": 2, "1035": 2, "1044": 1, "917": 0, "918": 0, "919": 0, "922": 0, "923": 0, "924": 0, "926": 0, "927": 0, "928": 0, "929": 0, "933": 0, "937": 0, "941": 0, "942": 0, "940": 0, "944": 0, "945": 0, "946": 0, "947": 0, "948": 0, "951": 0, "952": 0, "953": 0, "954": 0, "955": 0, "957": 0, "958": 0, "959": 0, "960": 0, "961": 0, "964": 0, "965": 0, "969": 0, "970": 0, "971": 0, "973": 0, "974": 0, "975": 0, "976": 0, "978": 0, "979": 0, "981": 0, "982": 0, "985": 0, "986": 0, "987": 0, "983": 0, "990": 0, "991": 0, "992": 0, "995": 0, "996": 0, "998": 0, "999": 0, "1001": 0, "1002": 0, "1003": 0, "1006": 0, "1008": 0, "1011": 0, "1012": 0, "1010": 0, "1014": 0, "1016": 0, "1019": 0, "1020": 0, "1018": 0, "1022": 0, "1025": 0, "1027": 0, "1026": 0, "1030": 0, "1031": 0, "1029": 0, "1036": 0, "1037": 0, "1039": 0, "1040": 0, "1041": 0, "1038": 0, "1046": 0, "1045": 0, "1047": 0, "1048": 0, "1049": 0, "1052": 0, "1053": 0, "1054": 0, "1055": 0, "1056": 0, "1051": 0, "1059": 0, "1063": 1, "1065": 1, "1069": 1, "1072": 1, "1077": 1, "1082": 1, "1092": 1, "1098": 2, "1099": 2, "1066": 0, "1067": 0, "1070": 0, "1073": 0, "1074": 0, "1075": 0, "1078": 0, "1079": 0, "1080": 0, "1084": 0, "1085": 0, "1087": 0, "1088": 0, "1086": 0, "1083": 0, "1094": 0, "1095": 0, "1093": 0, "1100": 0, "1104": 1, "1106": 1, "1110": 1, "1113": 1, "1120": 1, "1127": 1, "1137": 1, "1140": 2, "1141": 2, "1107": 0, "1108": 0, "1111": 0, "1114": 0, "1115": 0, "1116": 0, "1117": 0, "1118": 0, "1121": 0, "1122": 0, "1123": 0, "1124": 0, "1125": 0, "1129": 0, "1130": 0, "1132": 0, "1133": 0, "1131": 0, "1128": 0, "1138": 0, "1142": 0}}
+ git checkout 0b0998dc151feb77068e2387c34cc50ef6b356ae
Note: switching to '0b0998dc151feb77068e2387c34cc50ef6b356ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 0b0998dc15 Fixed #33759 -- Avoided unnecessary subquery in QuerySet.delete() with self-referential subqueries if supported.
M	django/db/migrations/operations/models.py
+ git apply /root/pre_state.patch
error: unrecognized input
