{"instance_id": "django__django-13012", "repo": "django/django", "version": "3.2", "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d", "patch_list": ["diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -863,6 +863,9 @@ def set_source_expressions(self, exprs):\n     def get_source_expressions(self):\n         return [self.expression]\n \n+    def get_group_by_cols(self, alias=None):\n+        return self.expression.get_group_by_cols(alias=alias)\n+\n     def as_sql(self, compiler, connection):\n         return self.expression.as_sql(compiler, connection)\n \n", "diff --git a/dev/null b/tests/test_coverup_django__django-13012.py\nnew file mode 100644\nindex e69de29..0737e64 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-13012.py\n@@ -0,0 +1,46 @@\n+from django.test import TestCase\n+from django.db import models\n+from django.db.models import ExpressionWrapper, IntegerField, Sum, Value\n+from django.db import connection\n+\n+class TestModel(models.Model):\n+    column_a = models.IntegerField()\n+    column_b = models.IntegerField()\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+class ExpressionWrapperGroupByTest(TestCase):\n+    databases = {'default'}\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        # Create the table manually\n+        with connection.cursor() as cursor:\n+            cursor.execute('''\n+                CREATE TABLE test_app_testmodel (\n+                    id INTEGER PRIMARY KEY AUTOINCREMENT,\n+                    column_a INTEGER NOT NULL,\n+                    column_b INTEGER NOT NULL\n+                )\n+            ''')\n+        TestModel.objects.create(column_a=1, column_b=10)\n+        TestModel.objects.create(column_a=1, column_b=20)\n+        TestModel.objects.create(column_a=2, column_b=30)\n+\n+    @classmethod\n+    def tearDownClass(cls):\n+        super().tearDownClass()\n+        with connection.cursor() as cursor:\n+            cursor.execute('DROP TABLE IF EXISTS test_app_testmodel')\n+\n+    def test_constant_expression_in_group_by(self):\n+        expr = ExpressionWrapper(Value(3), output_field=IntegerField())\n+        queryset = TestModel.objects.annotate(expr_res=expr).values('expr_res', 'column_a').annotate(sum=Sum('column_b'))\n+\n+        # Capture the generated SQL\n+        sql, params = queryset.query.get_compiler('default').as_sql()\n+\n+        # Check if the constant expression is included in the GROUP BY clause\n+        # We expect the constant to be correctly excluded once the bug is fixed\n+        self.assertNotIn('GROUP BY \"test_app_testmodel\".\"column_a\", %s', sql)\n"], "arch": "x86_64", "base_commit": "22a59c01c00cf9fbefaee0e8e67fab82bbaf1fd2", "test_directives": ["test_coverup_django__django-13012"], "coverage_files": ["django/db/models/expressions.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/expressions\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-13012", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}