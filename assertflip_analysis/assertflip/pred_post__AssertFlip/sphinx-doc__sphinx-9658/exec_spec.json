{"instance_id": "sphinx-doc__sphinx-9658", "repo": "sphinx-doc/sphinx", "version": "4.3", "environment_setup_commit": "6c6cc8a6f50b18331cb818160d168d7bb9c03e55", "patch_list": ["diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -26,6 +26,7 @@ class _MockObject:\n     \"\"\"Used by autodoc_mock_imports.\"\"\"\n \n     __display_name__ = '_MockObject'\n+    __name__ = ''\n     __sphinx_mock__ = True\n     __sphinx_decorator_args__: Tuple[Any, ...] = ()\n \n@@ -40,7 +41,7 @@ def __new__(cls, *args: Any, **kwargs: Any) -> Any:\n         return super().__new__(cls)\n \n     def __init__(self, *args: Any, **kwargs: Any) -> None:\n-        self.__qualname__ = ''\n+        self.__qualname__ = self.__name__\n \n     def __len__(self) -> int:\n         return 0\n@@ -73,6 +74,7 @@ def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None, decorator_args: Tuple = ()) -> Any:\n     attrs = {'__module__': module,\n              '__display_name__': module + '.' + name,\n+             '__name__': name,\n              '__sphinx_decorator_args__': decorator_args}\n     attrs.update(attributes or {})\n \n", "diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-9658.py\nnew file mode 100644\nindex e69de29..956d557 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-9658.py\n@@ -0,0 +1,50 @@\n+import pytest\n+from unittest import mock\n+from sphinx.ext.autodoc import ClassDocumenter\n+import sys\n+\n+def test_incorrect_bases_section(monkeypatch):\n+    # Mock the torch.nn.Module class\n+    mock_module = mock.MagicMock()\n+    mock_module.__name__ = 'torch.nn'\n+    mock_module.Module = mock.MagicMock()\n+    mock_module.Module.__name__ = 'Module'\n+    mock_module.Module.__module__ = 'torch.nn'\n+    mock_module.Module.__bases__ = (mock_module,)\n+    sys.modules['torch'] = mock_module\n+    sys.modules['torch.nn'] = mock_module\n+\n+    # Create a mock class that inherits from mocked torch.nn.Module\n+    class MockedDeepKernel(mock_module.Module):\n+        pass\n+\n+    # Mock the Sphinx environment and configuration\n+    mock_env = mock.MagicMock()\n+    mock_directive = mock.MagicMock()\n+    mock_directive.env = mock_env\n+    mock_directive.genopt = mock.MagicMock()\n+    mock_directive.state = mock.MagicMock()\n+    mock_directive.state.document = mock.MagicMock()\n+    mock_directive.state.document.settings = mock.MagicMock()\n+    mock_directive.state.document.settings.tab_width = 4\n+\n+    # Create a ClassDocumenter instance\n+    documenter = ClassDocumenter(mock_directive, 'MockedDeepKernel')\n+    documenter.object = MockedDeepKernel\n+    documenter.objpath = ['MockedDeepKernel']\n+    documenter.modname = 'mocked_module'\n+    documenter.fullname = 'mocked_module.MockedDeepKernel'\n+    documenter.options = mock.MagicMock()\n+    documenter.options.show_inheritance = True\n+    documenter.doc_as_attr = False\n+\n+    # Mock the add_line method to capture output\n+    captured_lines = []\n+    monkeypatch.setattr(documenter, 'add_line', lambda line, source, *lineno: captured_lines.append(line))\n+\n+    # Call the method to add the directive header\n+    documenter.add_directive_header('')\n+\n+    # Check for the presence of the correct \"Bases\" section\n+    # We expect the correct behavior to show \"Bases: torch.nn.Module\"\n+    assert any('Bases: torch.nn.Module' in line for line in captured_lines)\n"], "arch": "x86_64", "base_commit": "232dbe41c5250eb7d559d40438c4743483e95f15", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-9658.py"], "coverage_files": ["sphinx/ext/autodoc/mock.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp>=2.0.0/sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml>=1.1.5/sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/ext/autodoc/mock\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-9658.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}