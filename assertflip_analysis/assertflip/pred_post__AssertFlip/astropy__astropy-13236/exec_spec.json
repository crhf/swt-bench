{"instance_id": "astropy__astropy-13236", "repo": "astropy/astropy", "version": "5.0", "environment_setup_commit": "cdf311e0714e611d48b0a31eb1f0e2cbffab7f23", "patch_list": ["diff --git a/astropy/table/table.py b/astropy/table/table.py\n--- a/astropy/table/table.py\n+++ b/astropy/table/table.py\n@@ -1239,13 +1239,6 @@ def _convert_data_to_col(self, data, copy=True, default_name=None, dtype=None, n\n                                 f'{fully_qualified_name} '\n                                 'did not return a valid mixin column')\n \n-        # Structured ndarray gets viewed as a mixin unless already a valid\n-        # mixin class\n-        if (not isinstance(data, Column) and not data_is_mixin\n-                and isinstance(data, np.ndarray) and len(data.dtype) > 1):\n-            data = data.view(NdarrayMixin)\n-            data_is_mixin = True\n-\n         # Get the final column name using precedence.  Some objects may not\n         # have an info attribute. Also avoid creating info as a side effect.\n         if not name:\n", "diff --git a/dev/null b/astropy/tests/test_coverup_astropy__astropy-13236.py\nnew file mode 100644\nindex e69de29..d06f892 100644\n--- /dev/null\n+++ b/astropy/tests/test_coverup_astropy__astropy-13236.py\n@@ -0,0 +1,19 @@\n+import pytest\n+import numpy as np\n+from astropy.table import Table, Column\n+\n+def test_structured_array_transformation():\n+    # Create a structured numpy array with multiple fields\n+    structured_array = np.array([(1, 2.0), (3, 4.0)], dtype=[('a', 'i4'), ('b', 'f4')])\n+    \n+    # Initialize a Table object\n+    table = Table()\n+    \n+    # Add the structured array to the table\n+    table['structured'] = structured_array\n+    \n+    # Check the type of the column in the table\n+    column_type = type(table['structured'])\n+    \n+    # Assert that the column type is Column, indicating it has not been transformed\n+    assert column_type is Column, \"BUG: the structured array should be added as a Column but is currently transformed due to the bug\"\n"], "arch": "x86_64", "base_commit": "6ed769d58d89380ebaa1ef52b300691eefda8928", "test_directives": ["astropy/tests/test_coverup_astropy__astropy-13236.py"], "coverage_files": ["astropy/table/table.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "install": "python -m pip install -e .[test] --verbose", "pip_packages": ["attrs==23.1.0", "exceptiongroup==1.1.3", "execnet==2.0.2", "hypothesis==6.82.6", "iniconfig==2.0.0", "numpy==1.25.2", "packaging==23.1", "pluggy==1.3.0", "psutil==5.9.5", "pyerfa==2.0.0.3", "pytest-arraydiff==0.5.0", "pytest-astropy-header==0.2.2", "pytest-astropy==0.10.0", "pytest-cov==4.1.0", "pytest-doctestplus==1.0.0", "pytest-filter-subpackage==0.1.2", "pytest-mock==3.11.1", "pytest-openfiles==0.5.0", "pytest-remotedata==0.4.0", "pytest-xdist==3.3.1", "pytest==7.4.0", "PyYAML==6.0.1", "setuptools==68.0.0", "sortedcontainers==2.4.0", "tomli==2.0.1"], "pre_install": ["sed -i 's/requires = \\[\"setuptools\",/requires = \\[\"setuptools==68.0.0\",/' pyproject.toml"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(astropy/table/table\\.py)' -m pytest --no-header -rA  -p no:cacheprovider astropy/tests/test_coverup_astropy__astropy-13236.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}