+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 0192aac24123735b3eaf9b08df46429bb770c283
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 0192aac24123735b3eaf9b08df46429bb770c283
Author: Nate Prewitt <nate.prewitt@gmail.com>
Date:   Tue Dec 28 21:51:40 2021 -0700

    v2.27.0

diff --git a/HISTORY.md b/HISTORY.md
index 859bbcba..9acc1c59 100644
--- a/HISTORY.md
+++ b/HISTORY.md
@@ -6,13 +6,53 @@ dev
 
 - \[Short description of non-trivial change.\]
 
-- Added a `requests.exceptions.JSONDecodeError` to decrease inconsistencies
-  in the library. This gets raised in the `response.json()` method, and is
+2.27.0 (2022-01-03)
+-------------------
+
+**Improvements**
+
+- Officially added support for Python 3.10. (#5928)
+
+- Added a `requests.exceptions.JSONDecodeError` to unify JSON exceptions between
+  Python 2 and 3. This gets raised in the `response.json()` method, and is
   backwards compatible as it inherits from previously thrown exceptions.
-  Can be caught from `requests.exceptions.RequestException` as well.
+  Can be caught from `requests.exceptions.RequestException` as well. (#5856)
+
+- Improved error text for misnamed `InvalidSchema` and `MissingSchema`
+  exceptions. This is a temporary fix until exceptions can be renamed
+  (Schema->Scheme). (#6017)
+
+- Improved proxy parsing for proxy URLs missing a scheme. This will address
+  recent changes to `urlparse` in Python 3.9+. (#5917)
+
+**Bugfixes**
+
+- Fixed defect in `extract_zipped_paths` which could result in an infinite loop
+  for some paths. (#5851)
+
+- Fixed handling for `AttributeError` when calculating length of files obtained
+  by `Tarfile.extractfile()`. (#5239)
+
+- Fixed urllib3 exception leak, wrapping `urllib3.exceptions.InvalidHeader` with
+  `requests.exceptions.InvalidHeader`. (#5914)
+
+- Fixed bug where two Host headers were sent for chunked requests. (#5391)
+
+- Fixed regression in Requests 2.26.0 where `Proxy-Authorization` was
+  incorrectly stripped from all requests sent with `Session.send`. (#5924)
+
+- Fixed performance regression in 2.26.0 for hosts with a large number of
+  proxies available in the environment. (#5924)
+
+- Fixed idna exception leak, wrapping `UnicodeError` with
+  `requests.exceptions.InvalidURL` for URLs with a leading dot (.) in the
+  domain. (#5414)
+
+**Deprecations**
 
-- Catch `AttributeError` when calculating length of files obtained by
-  `Tarfile.extractfile()`
+- Requests support for Python 2.7 and 3.6 will be ending in 2022. While we
+  don't have exact dates, Requests 2.27.x is likely to be the last release
+  series providing support.
 
 2.26.0 (2021-07-13)
 -------------------
diff --git a/requests/__version__.py b/requests/__version__.py
index 0d7cde1d..cd009315 100644
--- a/requests/__version__.py
+++ b/requests/__version__.py
@@ -5,10 +5,10 @@
 __title__ = 'requests'
 __description__ = 'Python HTTP for Humans.'
 __url__ = 'https://requests.readthedocs.io'
-__version__ = '2.26.0'
-__build__ = 0x022600
+__version__ = '2.27.0'
+__build__ = 0x022700
 __author__ = 'Kenneth Reitz'
 __author_email__ = 'me@kennethreitz.org'
 __license__ = 'Apache 2.0'
-__copyright__ = 'Copyright 2020 Kenneth Reitz'
+__copyright__ = 'Copyright 2022 Kenneth Reitz'
 __cake__ = u'\u2728 \U0001f370 \u2728'
+ git diff 0192aac24123735b3eaf9b08df46429bb770c283
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install .
Processing /testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests==2.27.0) (1.26.20)
Requirement already satisfied: certifi>=2017.4.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests==2.27.0) (2025.8.3)
Requirement already satisfied: charset_normalizer~=2.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests==2.27.0) (2.0.12)
Requirement already satisfied: idna<4,>=2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests==2.27.0) (3.10)
Building wheels for collected packages: requests
  DEPRECATION: Building 'requests' using the legacy setup.py bdist_wheel mechanism, which will be removed in a future version. pip 25.3 will enforce this behaviour change. A possible replacement is to use the standardized build interface by setting the `--use-pep517` option, (possibly combined with `--no-build-isolation`), or adding a `pyproject.toml` file to the source tree of 'requests'. Discussion can be found at https://github.com/pypa/pip/issues/6334
  Building wheel for requests (setup.py): started
  Building wheel for requests (setup.py): finished with status 'done'
  Created wheel for requests: filename=requests-2.27.0-py2.py3-none-any.whl size=63160 sha256=f0819d39302f05ec20f90157d6c4693e0c2362436f34cd0ac5fcf1b1465c4934
  Stored in directory: /tmp/pip-ephem-wheel-cache-rd6qfcbe/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built requests
Installing collected packages: requests
  Attempting uninstall: requests
    Found existing installation: requests 2.27.0
    Uninstalling requests-2.27.0:
      Successfully uninstalled requests-2.27.0
Successfully installed requests-2.27.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch requests/utils.py...
Applied patch requests/utils.py cleanly.
+ git apply -v -
Checking patch test_coverup_psf__requests-6028.py...
Applied patch test_coverup_psf__requests-6028.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(requests/utils\.py)' -m pytest --no-header -rA -p no:cacheprovider test_coverup_psf__requests-6028.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(requests/utils\\.py)']
============================= test session starts ==============================
collected 1 item

test_coverup_psf__requests-6028.py F                                     [100%]

=================================== FAILURES ===================================
________________________ test_proxy_authentication_bug _________________________

    def test_proxy_authentication_bug():
        # Setup: Mock the proxy server and request
        proxies = {
            'http': 'http://user:pass@proxy.example.com:8080',
            'https': 'https://user:pass@proxy.example.com:8080',
        }
        auth = HTTPProxyAuth('user', 'pass')
    
        # Mock the proxy_headers method to simulate the bug
        with patch('requests.adapters.HTTPAdapter.proxy_headers', return_value={}):
            with patch('requests.sessions.Session.send') as mock_send:
                mock_response = mock_send.return_value
                mock_response.status_code = 407  # Simulate the bug: Proxy Authentication Required
    
                # Create a session and make a request
                session = Session()
                response = session.get('https://example.org/', proxies=proxies, auth=auth)
    
                # Assert the correct behavior occurs
>               assert response.status_code == 200  # Expecting a status code of 200 when the bug is fixed
E               AssertionError: assert 407 == 200
E                +  where 407 = <MagicMock name='send()' id='140159273471568'>.status_code

test_coverup_psf__requests-6028.py:25: AssertionError
----------------------------- Captured stdout call -----------------------------
0.25 /testbed/requests/utils.py(877):     return CaseInsensitiveDict({
0.25 /testbed/requests/utils.py(878):         'User-Agent': default_user_agent(),
0.25 /testbed/requests/utils.py(870):     return '%s/%s' % (name, __version__)
0.25 /testbed/requests/utils.py(879):         'Accept-Encoding': DEFAULT_ACCEPT_ENCODING,
0.25 /testbed/requests/utils.py(880):         'Accept': '*/*',
0.25 /testbed/requests/utils.py(881):         'Connection': 'keep-alive',
0.25 /testbed/requests/utils.py(877):     return CaseInsensitiveDict({
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
0.25 /testbed/requests/utils.py(641):     safe_with_percent = "!#$%&'()*+,/:;=?@[]~"
0.25 /testbed/requests/utils.py(642):     safe_without_percent = "!#$&'()*+,/:;=?@[]~"
0.25 /testbed/requests/utils.py(643):     try:
0.25 /testbed/requests/utils.py(647):         return quote(unquote_unreserved(uri), safe=safe_with_percent)
0.25 /testbed/requests/utils.py(615):     parts = uri.split('%')
0.25 /testbed/requests/utils.py(616):     for i in range(1, len(parts)):
0.25 /testbed/requests/utils.py(630):     return ''.join(parts)
0.25 /testbed/requests/utils.py(1017):     name, value = header
0.25 /testbed/requests/utils.py(1019):     if isinstance(value, bytes):
0.25 /testbed/requests/utils.py(1022):         pat = _CLEAN_HEADER_REGEX_STR
0.25 /testbed/requests/utils.py(1023):     try:
0.25 /testbed/requests/utils.py(1024):         if not pat.match(value):
0.25 /testbed/requests/utils.py(1017):     name, value = header
0.25 /testbed/requests/utils.py(1019):     if isinstance(value, bytes):
0.25 /testbed/requests/utils.py(1022):         pat = _CLEAN_HEADER_REGEX_STR
0.25 /testbed/requests/utils.py(1023):     try:
0.25 /testbed/requests/utils.py(1024):         if not pat.match(value):
0.25 /testbed/requests/utils.py(1017):     name, value = header
0.25 /testbed/requests/utils.py(1019):     if isinstance(value, bytes):
0.25 /testbed/requests/utils.py(1022):         pat = _CLEAN_HEADER_REGEX_STR
0.25 /testbed/requests/utils.py(1023):     try:
0.25 /testbed/requests/utils.py(1024):         if not pat.match(value):
0.25 /testbed/requests/utils.py(1017):     name, value = header
0.25 /testbed/requests/utils.py(1019):     if isinstance(value, bytes):
0.25 /testbed/requests/utils.py(1022):         pat = _CLEAN_HEADER_REGEX_STR
0.25 /testbed/requests/utils.py(1023):     try:
0.25 /testbed/requests/utils.py(1024):         if not pat.match(value):
0.25 /testbed/requests/utils.py(805):     if should_bypass_proxies(url, no_proxy=no_proxy):
0.25 /testbed/requests/utils.py(746):     get_proxy = lambda k: os.environ.get(k) or os.environ.get(k.upper())
0.25 /testbed/requests/utils.py(750):     no_proxy_arg = no_proxy
0.25 /testbed/requests/utils.py(751):     if no_proxy is None:
0.25 /testbed/requests/utils.py(752):         no_proxy = get_proxy('no_proxy')
0.25 /testbed/requests/utils.py(746):     get_proxy = lambda k: os.environ.get(k) or os.environ.get(k.upper())
0.25 /testbed/requests/utils.py(753):     parsed = urlparse(url)
0.25 /testbed/requests/utils.py(755):     if parsed.hostname is None:
0.25 /testbed/requests/utils.py(759):     if no_proxy:
0.25 /testbed/requests/utils.py(786):     with set_environ('no_proxy', no_proxy_arg):
0.25 /testbed/requests/utils.py(724):     value_changed = value is not None
0.25 /testbed/requests/utils.py(725):     if value_changed:
0.25 /testbed/requests/utils.py(728):     try:
0.25 /testbed/requests/utils.py(729):         yield
0.25 /testbed/requests/utils.py(788):         try:
0.25 /testbed/requests/utils.py(789):             bypass = proxy_bypass(parsed.hostname)
0.25 /testbed/requests/utils.py(731):         if value_changed:
0.25 /testbed/requests/utils.py(793):     if bypass:
0.25 /testbed/requests/utils.py(796):     return False
0.25 /testbed/requests/utils.py(808):         return getproxies()
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
0.25 /testbed/requests/utils.py(339):     if value is None:
0.25 /testbed/requests/utils.py(342):     if isinstance(value, (str, bytes, bool, int)):
0.25 /testbed/requests/utils.py(345):     if isinstance(value, Mapping):
0.25 /testbed/requests/utils.py(346):         value = value.items()
0.25 /testbed/requests/utils.py(348):     return list(value)
=========================== short test summary info ============================
FAILED test_coverup_psf__requests-6028.py::test_proxy_authentication_bug - As...
============================== 1 failed in 0.21s ===============================
+ cat coverage.cover
{"/testbed/requests/utils.py": {"3": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "23": 1, "24": 1, "26": 1, "27": 1, "29": 1, "30": 1, "31": 1, "35": 1, "36": 1, "37": 1, "40": 1, "42": 1, "44": 1, "47": 2, "48": 1, "52": 1, "55": 0, "94": 0, "106": 1, "115": 1, "179": 1, "236": 1, "244": 1, "281": 1, "282": 1, "295": 1, "322": 1, "352": 1, "384": 1, "419": 1, "444": 1, "459": 1, "470": 1, "490": 1, "515": 1, "540": 1, "558": 1, "568": 1, "605": 2, "606": 1, "609": 1, "633": 1, "655": 1, "670": 1, "681": 1, "692": 1, "716": 1, "717": 1, "738": 1, "799": 1, "811": 1, "837": 1, "864": 1, "873": 1, "885": 1, "923": 1, "924": 1, "925": 1, "928": 1, "960": 1, "989": 1, "1006": 1, "1007": 1, "1010": 1, "1031": 1, "1048": 1, "56": 0, "57": 0, "58": 0, "60": 0, "61": 0, "62": 0, "64": 0, "65": 0, "66": 0, "68": 0, "69": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "81": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "100": 0, "101": 0, "103": 0, "109": 0, "110": 0, "112": 0, "116": 0, "117": 0, "119": 0, "120": 0, "122": 0, "123": 0, "125": 0, "126": 0, "127": 0, "128": 0, "132": 0, "134": 0, "138": 0, "139": 0, "140": 0, "146": 0, "149": 0, "150": 0, "151": 0, "152": 0, "157": 0, "158": 0, "160": 0, "162": 0, "164": 0, "165": 0, "169": 0, "170": 0, "171": 0, "173": 0, "174": 0, "176": 0, "182": 0, "183": 0, "184": 0, "186": 0, "188": 0, "189": 0, "191": 0, "193": 0, "194": 0, "195": 0, "196": 0, "200": 0, "202": 0, "203": 0, "204": 0, "207": 0, "208": 0, "210": 0, "214": 0, "215": 0, "216": 0, "217": 0, "219": 0, "220": 0, "221": 0, "223": 0, "224": 0, "225": 0, "228": 0, "229": 0, "232": 0, "233": 0, "238": 0, "239": 0, "240": 0, "241": 0, "249": 0, "251": 0, "255": 0, "256": 0, "257": 0, "258": 0, "261": 0, "262": 0, "264": 0, "265": 0, "267": 0, "268": 0, "269": 0, "272": 0, "273": 0, "274": 0, "276": 0, "277": 0, "278": 0, "284": 0, "285": 0, "286": 0, "287": 0, "288": 0, "289": 0, "290": 0, "291": 0, "292": 0, "313": 0, "314": 0, "316": 0, "317": 0, "319": 0, "339": 7, "340": 0, "342": 7, "343": 0, "345": 7, "346": 7, "348": 7, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "406": 0, "407": 0, "408": 0, "409": 0, "410": 0, "411": 0, "412": 0, "413": 0, "414": 0, "415": 0, "427": 0, "432": 0, "439": 0, "440": 0, "441": 0, "451": 0, "453": 0, "454": 0, "456": 0, "467": 0, "475": 0, "476": 0, "479": 0, "481": 0, "482": 0, "483": 0, "485": 0, "486": 0, "487": 0, "498": 0, "499": 0, "500": 0, "501": 0, "503": 0, "504": 0, "505": 0, "506": 0, "507": 0, "508": 0, "509": 0, "510": 0, "511": 0, "512": 0, "522": 0, "524": 0, "525": 0, "527": 0, "529": 0, "530": 0, "532": 0, "533": 0, "535": 0, "537": 0, "543": 0, "544": 0, "545": 0, "546": 0, "548": 0, "549": 0, "550": 0, "551": 0, "552": 0, "553": 0, "554": 0, "555": 0, "560": 0, "561": 0, "562": 0, "563": 0, "564": 0, "565": 0, "580": 0, "581": 0, "584": 0, "586": 0, "589": 0, "591": 0, "592": 0, "593": 0, "594": 0, "595": 0, "598": 0, "599": 0, "600": 0, "601": 0, "615": 1, "616": 1, "617": 0, "618": 0, "619": 0, "620": 0, "621": 0, "622": 0, "624": 0, "625": 0, "627": 0, "629": 0, "630": 1, "641": 1, "642": 1, "643": 1, "647": 1, "648": 0, "652": 0, "663": 0, "664": 0, "665": 0, "666": 0, "667": 0, "677": 0, "678": 0, "685": 0, "686": 0, "687": 0, "688": 0, "689": 0, "698": 0, "699": 0, "700": 0, "701": 0, "702": 0, "704": 0, "705": 0, "707": 0, "708": 0, "709": 0, "710": 0, "712": 0, "713": 0, "724": 1, "725": 1, "726": 0, "727": 0, "728": 1, "729": 1, "731": 1, "732": 0, "733": 0, "735": 0, "746": 2, "750": 1, "751": 1, "752": 1, "753": 1, "755": 1, "757": 0, "759": 1, "762": 0, "763": 0, "766": 0, "767": 0, "768": 0, "769": 0, "770": 0, "771": 0, "774": 0, "776": 0, "777": 0, "778": 0, "780": 0, "781": 0, "784": 0, "786": 1, "788": 1, "789": 1, "790": 0, "791": 0, "793": 1, "794": 0, "796": 1, "805": 1, "806": 0, "808": 1, "817": 0, "818": 0, "819": 0, "820": 0, "823": 0, "824": 0, "825": 0, "826": 0, "822": 0, "828": 0, "829": 0, "830": 0, "831": 0, "832": 0, "834": 0, "848": 0, "849": 0, "850": 0, "851": 0, "852": 0, "854": 0, "855": 0, "857": 0, "859": 0, "860": 0, "861": 0, "870": 1, "877": 2, "878": 1, "879": 1, "880": 1, "881": 1, "893": 0, "895": 0, "897": 0, "898": 0, "899": 0, "901": 0, "902": 0, "903": 0, "904": 0, "905": 0, "907": 0, "909": 0, "910": 0, "911": 0, "912": 0, "913": 0, "915": 0, "917": 0, "919": 0, "935": 0, "936": 0, "937": 0, "938": 0, "939": 0, "940": 0, "941": 0, "942": 0, "943": 0, "944": 0, "945": 0, "946": 0, "947": 0, "948": 0, "949": 0, "951": 0, "952": 0, "953": 0, "954": 0, "955": 0, "957": 0, "966": 0, "967": 0, "973": 0, "974": 0, "975": 0, "977": 0, "980": 0, "981": 0, "982": 0, "983": 0, "984": 0, "986": 0, "995": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1002": 0, "1017": 4, "1019": 4, "1020": 0, "1022": 4, "1023": 4, "1024": 4, "1025": 0, "1026": 0, "1027": 0, "1028": 0, "1037": 0, "1040": 0, "1041": 0, "1043": 0, "1045": 0, "1052": 0, "1053": 0, "1054": 0, "1055": 0, "1056": 0, "1057": 0, "1060": 0}}
+ git checkout 0192aac24123735b3eaf9b08df46429bb770c283
Note: switching to '0192aac24123735b3eaf9b08df46429bb770c283'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 0192aac2 v2.27.0
M	requests/utils.py
+ git apply /root/pre_state.patch
error: unrecognized input
