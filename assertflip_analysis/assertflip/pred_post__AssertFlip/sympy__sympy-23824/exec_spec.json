{"instance_id": "sympy__sympy-23824", "repo": "sympy/sympy", "version": "1.12", "environment_setup_commit": "c6cb7c5602fa48034ab1bd43c2347a7e8488f12e", "patch_list": ["diff --git a/sympy/physics/hep/gamma_matrices.py b/sympy/physics/hep/gamma_matrices.py\n--- a/sympy/physics/hep/gamma_matrices.py\n+++ b/sympy/physics/hep/gamma_matrices.py\n@@ -694,8 +694,7 @@ def kahane_simplify(expression):\n \n     # If `first_dum_pos` is not zero, it means that there are trailing free gamma\n     # matrices in front of `expression`, so multiply by them:\n-    for i in range(0, first_dum_pos):\n-        [ri.insert(0, free_pos[i]) for ri in resulting_indices]\n+    resulting_indices = list( free_pos[0:first_dum_pos] + ri for ri in resulting_indices )\n \n     resulting_expr = S.Zero\n     for i in resulting_indices:\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-23824.py\nnew file mode 100644\nindex e69de29..528ee69 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-23824.py\n@@ -0,0 +1,15 @@\n+from sympy.physics.hep.gamma_matrices import GammaMatrix as G, kahane_simplify, LorentzIndex\n+from sympy.tensor.tensor import tensor_indices\n+\n+def test_kahane_leading_gamma_matrix_bug():\n+    mu, nu, rho, sigma = tensor_indices(\"mu, nu, rho, sigma\", LorentzIndex)\n+    \n+    # Test case 1: Correct behavior\n+    t1 = G(mu)*G(-mu)*G(rho)*G(sigma)\n+    r1 = kahane_simplify(t1)\n+    assert r1.equals(4*G(rho)*G(sigma)), \"Test case 1 failed: Order of gamma matrices is incorrect\"\n+\n+    # Test case 2: Correct behavior expected\n+    t2 = G(rho)*G(sigma)*G(mu)*G(-mu)\n+    r2 = kahane_simplify(t2)\n+    assert r2.equals(4*G(rho)*G(sigma)), \"Test case 2 failed: Order of gamma matrices is incorrect\"\n"], "arch": "x86_64", "base_commit": "39de9a2698ad4bb90681c0fdb70b30a78233145f", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-23824.py"], "coverage_files": ["sympy/physics/hep/gamma_matrices.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/physics/hep/gamma_matrices\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-23824.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}