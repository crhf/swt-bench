{"instance_id": "django__django-13786", "repo": "django/django", "version": "3.2", "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d", "patch_list": ["diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -137,11 +137,15 @@ def reduce(self, operation, app_label):\n                 ),\n             ]\n         elif isinstance(operation, AlterModelOptions) and self.name_lower == operation.name_lower:\n+            options = {**self.options, **operation.options}\n+            for key in operation.ALTER_OPTION_KEYS:\n+                if key not in operation.options:\n+                    options.pop(key, None)\n             return [\n                 CreateModel(\n                     self.name,\n                     fields=self.fields,\n-                    options={**self.options, **operation.options},\n+                    options=options,\n                     bases=self.bases,\n                     managers=self.managers,\n                 ),\n", "diff --git a/dev/null b/tests/test_coverup_django__django-13786.py\nnew file mode 100644\nindex e69de29..b351ac2 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-13786.py\n@@ -0,0 +1,31 @@\n+from django.test import SimpleTestCase\n+from django.db.migrations.state import ModelState\n+from django.db.migrations.operations.models import CreateModel, AlterModelOptions\n+\n+class CreateModelReduceTest(SimpleTestCase):\n+    def test_reduce_with_empty_alter_model_options(self):\n+        # Setup: CreateModel with non-empty options\n+        create_model_op = CreateModel(\n+            name='TestModel',\n+            fields=[],\n+            options={'verbose_name': 'Test Model'},\n+        )\n+\n+        # Setup: AlterModelOptions with empty options\n+        alter_model_options_op = AlterModelOptions(\n+            name='TestModel',\n+            options={},\n+        )\n+\n+        # Perform the reduction\n+        reduced_operations = create_model_op.reduce(alter_model_options_op, 'test_app')\n+\n+        # There should be one operation in the reduced list\n+        self.assertEqual(len(reduced_operations), 1)\n+\n+        # The reduced operation should be a CreateModel\n+        reduced_create_model_op = reduced_operations[0]\n+        self.assertIsInstance(reduced_create_model_op, CreateModel)\n+\n+        # The options should be empty after reduction\n+        self.assertEqual(reduced_create_model_op.options, {})\n"], "arch": "x86_64", "base_commit": "bb64b99b78a579cb2f6178011a4cf9366e634438", "test_directives": ["test_coverup_django__django-13786"], "coverage_files": ["django/db/migrations/operations/models.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/operations/models\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-13786", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}