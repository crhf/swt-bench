{"instance_id": "django__django-11820", "repo": "django/django", "version": "3.1", "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab", "patch_list": ["diff --git a/django/db/models/base.py b/django/db/models/base.py\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1708,9 +1708,15 @@ def _check_ordering(cls):\n             fld = None\n             for part in field.split(LOOKUP_SEP):\n                 try:\n-                    fld = _cls._meta.get_field(part)\n+                    # pk is an alias that won't be found by opts.get_field.\n+                    if part == 'pk':\n+                        fld = _cls._meta.pk\n+                    else:\n+                        fld = _cls._meta.get_field(part)\n                     if fld.is_relation:\n                         _cls = fld.get_path_info()[-1].to_opts.model\n+                    else:\n+                        _cls = None\n                 except (FieldDoesNotExist, AttributeError):\n                     if fld is None or fld.get_transform(part) is None:\n                         errors.append(\n", "diff --git a/dev/null b/tests/test_coverup_django__django-11820.py\nnew file mode 100644\nindex e69de29..0040ad9 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11820.py\n@@ -0,0 +1,27 @@\n+from django.test import SimpleTestCase\n+from django.db import models\n+from django.core.checks import Error\n+\n+class ParentModel(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+class ChildModel(models.Model):\n+    parent = models.ForeignKey(ParentModel, on_delete=models.CASCADE)\n+\n+    class Meta:\n+        ordering = ['parent__pk']\n+        app_label = 'test_app'\n+\n+class OrderingValidationTest(SimpleTestCase):\n+    def test_ordering_with_related_pk(self):\n+        \"\"\"\n+        Test that models.E015 is incorrectly raised when Meta.ordering contains __pk of a related field.\n+        \"\"\"\n+        errors = ChildModel.check()\n+        error_ids = [error.id for error in errors]\n+\n+        # Assert that models.E015 is not raised, which is the correct behavior\n+        self.assertNotIn('models.E015', error_ids)\n"], "arch": "x86_64", "base_commit": "c2678e49759e5c4c329bff0eeca2886267005d21", "test_directives": ["test_coverup_django__django-11820"], "coverage_files": ["django/db/models/base.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/base\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11820", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}