{"instance_id": "sympy__sympy-15809", "repo": "sympy/sympy", "version": "1.4", "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004", "patch_list": ["diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,8 +339,6 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n-        if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n \n         args = (sympify(arg) for arg in args)\n \n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-15809.py\nnew file mode 100644\nindex e69de29..90185ea 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-15809.py\n@@ -0,0 +1,8 @@\n+from sympy import Min, Max, oo\n+\n+def test_min_max_no_arguments():\n+    # Test Min() with no arguments\n+    assert Min() == oo\n+\n+    # Test Max() with no arguments\n+    assert Max() == -oo\n"], "arch": "x86_64", "base_commit": "28d913d3cead6c5646307ffa6540b21d65059dfd", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-15809.py"], "coverage_files": ["sympy/functions/elementary/miscellaneous.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/functions/elementary/miscellaneous\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-15809.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}