{"instance_id": "scikit-learn__scikit-learn-12973", "repo": "scikit-learn/scikit-learn", "version": "0.21", "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6", "patch_list": ["diff --git a/sklearn/linear_model/least_angle.py b/sklearn/linear_model/least_angle.py\n--- a/sklearn/linear_model/least_angle.py\n+++ b/sklearn/linear_model/least_angle.py\n@@ -1479,7 +1479,7 @@ def __init__(self, criterion='aic', fit_intercept=True, verbose=False,\n         self.eps = eps\n         self.fit_path = True\n \n-    def fit(self, X, y, copy_X=True):\n+    def fit(self, X, y, copy_X=None):\n         \"\"\"Fit the model using X, y as training data.\n \n         Parameters\n@@ -1490,7 +1490,9 @@ def fit(self, X, y, copy_X=True):\n         y : array-like, shape (n_samples,)\n             target values. Will be cast to X's dtype if necessary\n \n-        copy_X : boolean, optional, default True\n+        copy_X : boolean, optional, default None\n+            If provided, this parameter will override the choice\n+            of copy_X made at instance creation.\n             If ``True``, X will be copied; else, it may be overwritten.\n \n         Returns\n@@ -1498,10 +1500,12 @@ def fit(self, X, y, copy_X=True):\n         self : object\n             returns an instance of self.\n         \"\"\"\n+        if copy_X is None:\n+            copy_X = self.copy_X\n         X, y = check_X_y(X, y, y_numeric=True)\n \n         X, y, Xmean, ymean, Xstd = LinearModel._preprocess_data(\n-            X, y, self.fit_intercept, self.normalize, self.copy_X)\n+            X, y, self.fit_intercept, self.normalize, copy_X)\n         max_iter = self.max_iter\n \n         Gram = self.precompute\n", "diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-12973.py\nnew file mode 100644\nindex e69de29..2292a2b 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-12973.py\n@@ -0,0 +1,24 @@\n+import numpy as np\n+from sklearn.linear_model import LassoLarsIC\n+import pytest\n+\n+def test_lassolarsic_copy_X_behavior():\n+    # Create a small dataset\n+    X = np.array([[1, 2], [3, 4], [5, 6]], dtype=float)\n+    y = np.array([1, 2, 3], dtype=float)\n+\n+    # Initialize LassoLarsIC with copy_X=False\n+    model = LassoLarsIC(copy_X=False)\n+\n+    # Fit the model\n+    model.fit(X, y)\n+\n+    # Modify X after fitting\n+    X[0, 0] = 999\n+\n+    # Check if the model's internal state reflects the changes to X\n+    # Since copy_X=False, changes to X should affect the model's state\n+    # Correct behavior: The model's coefficients should change if X is modified\n+    assert model.coef_[0] == 0, \"Model's internal state should reflect changes to X\"\n+\n+# Note: The test will fail under the current buggy behavior, exposing the bug.\n"], "arch": "x86_64", "base_commit": "a7b8b9e9e16d4e15fabda5ae615086c2e1c47d8a", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-12973.py"], "coverage_files": ["sklearn/linear_model/least_angle.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/linear_model/least_angle\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-12973.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}