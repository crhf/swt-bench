{"instance_id": "django__django-11603", "repo": "django/django", "version": "3.0", "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27", "patch_list": ["diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py\n--- a/django/db/models/aggregates.py\n+++ b/django/db/models/aggregates.py\n@@ -99,6 +99,7 @@ def _get_repr_options(self):\n class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):\n     function = 'AVG'\n     name = 'Avg'\n+    allow_distinct = True\n \n \n class Count(Aggregate):\n@@ -142,6 +143,7 @@ def _get_repr_options(self):\n class Sum(FixDurationInputMixin, Aggregate):\n     function = 'SUM'\n     name = 'Sum'\n+    allow_distinct = True\n \n \n class Variance(NumericOutputFieldMixin, Aggregate):\n", "diff --git a/dev/null b/tests/test_coverup_django__django-11603.py\nnew file mode 100644\nindex e69de29..278e65d 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11603.py\n@@ -0,0 +1,59 @@\n+from django.test import TestCase\n+from django.db import models, connection\n+from django.db.models import Avg, Sum\n+\n+# Define a temporary model for testing\n+class MockModel(models.Model):\n+    value = models.IntegerField()\n+\n+    class Meta:\n+        app_label = 'tests'\n+        managed = True\n+\n+class AggregateDistinctTests(TestCase):\n+    databases = {'default'}\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        with connection.cursor() as cursor:\n+            cursor.execute('CREATE TABLE tests_mockmodel (id INTEGER PRIMARY KEY AUTOINCREMENT, value INTEGER);')\n+        \n+        MockModel.objects.bulk_create([\n+            MockModel(value=1),\n+            MockModel(value=2),\n+            MockModel(value=2),\n+            MockModel(value=3),\n+            MockModel(value=4),\n+            MockModel(value=4),\n+            MockModel(value=5),\n+        ])\n+\n+    def test_avg_with_distinct(self):\n+        queryset = MockModel.objects.all()\n+        try:\n+            result = queryset.aggregate(avg_value=Avg('value', distinct=True))\n+            exception_thrown = False\n+        except TypeError as e:\n+            exception_thrown = True\n+            result = str(e)\n+        \n+        self.assertFalse(exception_thrown, \"Avg with DISTINCT should not throw a TypeError.\")\n+        self.assertAlmostEqual(result['avg_value'], 3.0, places=1)\n+\n+    def test_sum_with_distinct(self):\n+        queryset = MockModel.objects.all()\n+        try:\n+            result = queryset.aggregate(sum_value=Sum('value', distinct=True))\n+            exception_thrown = False\n+        except TypeError as e:\n+            exception_thrown = True\n+            result = str(e)\n+        \n+        self.assertFalse(exception_thrown, \"Sum with DISTINCT should not throw a TypeError.\")\n+        self.assertEqual(result['sum_value'], 15)\n+\n+    @classmethod\n+    def tearDownClass(cls):\n+        with connection.cursor() as cursor:\n+            cursor.execute('DROP TABLE tests_mockmodel;')\n+        super().tearDownClass()\n"], "arch": "x86_64", "base_commit": "f618e033acd37d59b536d6e6126e6c5be18037f6", "test_directives": ["test_coverup_django__django-11603"], "coverage_files": ["django/db/models/aggregates.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/aggregates\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11603", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref ~= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow != 5.4.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}