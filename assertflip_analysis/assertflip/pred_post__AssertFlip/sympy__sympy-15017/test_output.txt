+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 6810dee426943c1a2fe85b5002dd0d4cf2246a05
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit 6810dee426943c1a2fe85b5002dd0d4cf2246a05
Merge: b7c5ba2bf3 9d9939b431
Author: Jason Moore <moorepants@gmail.com>
Date:   Thu Aug 2 06:19:36 2018 -0700

    Merge pull request #14453 from jashan498/beam_examples
    
    continuum_mechanics : added more beam problems

+ git diff 6810dee426943c1a2fe85b5002dd0d4cf2246a05
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.2.1.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.2.1.dev0
    Uninstalling sympy-1.2.1.dev0:
      Successfully uninstalled sympy-1.2.1.dev0
  DEPRECATION: Legacy editable install of sympy==1.2.1.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch sympy/tensor/array/dense_ndim_array.py...
Applied patch sympy/tensor/array/dense_ndim_array.py cleanly.
+ git apply -v -
<stdin>:12: trailing whitespace.
    
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-15017.py...
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-15017.py cleanly.
warning: 1 line adds whitespace errors.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/tensor/array/dense_ndim_array\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-15017.p
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/tensor/array/dense_ndim_array\\.py)']
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(1): from __future__ import print_function, division
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(2): import functools
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(4): import itertools
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(6): from sympy.core.sympify import _sympify
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(8): from sympy import Basic, Tuple
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(9): from sympy.tensor.array.mutable_ndim_array import MutableNDimArray
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(10): from sympy.tensor.array.ndim_array import NDimArray, ImmutableNDimArray
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(13): class DenseNDimArray(NDimArray):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(13): class DenseNDimArray(NDimArray):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(15):     def __new__(self, *args, **kwargs):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(18):     def __getitem__(self, index):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(70):     @classmethod
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(71):     def zeros(cls, *shape):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(75):     def tomatrix(self):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(99):     def __iter__(self):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(102):     def reshape(self, *newshape):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(132): class ImmutableDenseNDimArray(DenseNDimArray, ImmutableNDimArray):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(132): class ImmutableDenseNDimArray(DenseNDimArray, ImmutableNDimArray):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(133):     """
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(137):     def __new__(cls, iterable, shape=None, **kwargs):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(140):     @classmethod
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(141):     def _new(cls, iterable, shape, **kwargs):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(155):     def __setitem__(self, index, value):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(158):     def as_mutable(self):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(162): class MutableDenseNDimArray(DenseNDimArray, MutableNDimArray):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(162): class MutableDenseNDimArray(DenseNDimArray, MutableNDimArray):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(164):     def __new__(cls, iterable=None, shape=None, **kwargs):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(167):     @classmethod
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(168):     def _new(cls, iterable, shape, **kwargs):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(180):     def __setitem__(self, index, value):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(200):     def as_immutable(self):
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(203):     @property
0.30 /testbed/sympy/tensor/array/dense_ndim_array.py(204):     def free_symbols(self):
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        35181726
hash randomization: on (PYTHONHASHSEED=951285292)

sympy/polys/tests/test_coverup_sympy__sympy-15017.py[1] 
test_len_rank_0_array 0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(138):         return cls._new(iterable, shape, **kwargs)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(142):         from sympy.utilities.iterables import flatten
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(144):         shape, flat_list = cls._handle_ndarray_creation_inputs(iterable, shape, **kwargs)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(145):         shape = Tuple(*map(_sympify, shape))
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(146):         flat_list = flatten(flat_list)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(147):         flat_list = Tuple(*flat_list)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(148):         self = Basic.__new__(cls, flat_list, shape, **kwargs)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(149):         self._shape = shape
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(150):         self._array = list(flat_list)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(151):         self._rank = len(shape)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(152):         self._loop_size = functools.reduce(lambda x,y: x*y, shape, 1)
0.38 /testbed/sympy/tensor/array/dense_ndim_array.py(153):         return self
ok                                                    [OK]


================== tests finished: 1 passed, in 0.01 seconds ===================
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/tensor/array/dense_ndim_array\\.py)']
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(1): from __future__ import print_function, division
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(2): import functools
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(4): import itertools
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(6): from sympy.core.sympify import _sympify
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(8): from sympy import Basic, Tuple
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(9): from sympy.tensor.array.mutable_ndim_array import MutableNDimArray
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(10): from sympy.tensor.array.ndim_array import NDimArray, ImmutableNDimArray
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(13): class DenseNDimArray(NDimArray):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(13): class DenseNDimArray(NDimArray):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(15):     def __new__(self, *args, **kwargs):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(18):     def __getitem__(self, index):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(70):     @classmethod
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(71):     def zeros(cls, *shape):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(75):     def tomatrix(self):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(99):     def __iter__(self):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(102):     def reshape(self, *newshape):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(132): class ImmutableDenseNDimArray(DenseNDimArray, ImmutableNDimArray):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(132): class ImmutableDenseNDimArray(DenseNDimArray, ImmutableNDimArray):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(133):     """
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(137):     def __new__(cls, iterable, shape=None, **kwargs):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(140):     @classmethod
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(141):     def _new(cls, iterable, shape, **kwargs):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(155):     def __setitem__(self, index, value):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(158):     def as_mutable(self):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(162): class MutableDenseNDimArray(DenseNDimArray, MutableNDimArray):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(162): class MutableDenseNDimArray(DenseNDimArray, MutableNDimArray):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(164):     def __new__(cls, iterable=None, shape=None, **kwargs):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(167):     @classmethod
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(168):     def _new(cls, iterable, shape, **kwargs):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(180):     def __setitem__(self, index, value):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(200):     def as_immutable(self):
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(203):     @property
0.74 /testbed/sympy/tensor/array/dense_ndim_array.py(204):     def free_symbols(self):
+ cat coverage.cover
{"/testbed/sympy/tensor/array/dense_ndim_array.py": {"1": 1, "2": 1, "4": 1, "6": 1, "8": 1, "9": 1, "10": 1, "13": 2, "132": 2, "162": 2, "15": 1, "18": 1, "70": 1, "71": 1, "75": 1, "99": 1, "102": 1, "16": 0, "46": 0, "47": 0, "48": 0, "50": 0, "52": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "64": 0, "65": 0, "67": 0, "68": 0, "53": 0, "54": 0, "55": 0, "56": 0, "72": 0, "73": 0, "92": 0, "94": 0, "95": 0, "97": 0, "100": 0, "124": 0, "125": 0, "126": 0, "129": 0, "137": 1, "140": 1, "141": 1, "155": 1, "158": 1, "138": 1, "142": 1, "144": 1, "145": 1, "146": 1, "147": 1, "148": 1, "149": 1, "150": 1, "151": 1, "152": 1, "153": 1, "156": 0, "159": 0, "164": 1, "167": 1, "168": 1, "180": 1, "200": 1, "203": 1, "204": 1, "165": 0, "169": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "194": 0, "195": 0, "196": 0, "198": 0, "201": 0, "205": 0}}
{"/testbed/sympy/tensor/array/dense_ndim_array.py": {"1": 1, "2": 1, "4": 1, "6": 1, "8": 1, "9": 1, "10": 1, "13": 2, "132": 2, "162": 2, "15": 1, "18": 1, "70": 1, "71": 1, "75": 1, "99": 1, "102": 1, "16": 0, "46": 0, "47": 0, "48": 0, "50": 0, "52": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "64": 0, "65": 0, "67": 0, "68": 0, "53": 0, "54": 0, "55": 0, "56": 0, "72": 0, "73": 0, "92": 0, "94": 0, "95": 0, "97": 0, "100": 0, "124": 0, "125": 0, "126": 0, "129": 0, "137": 1, "140": 1, "141": 1, "155": 1, "158": 1, "138": 0, "142": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "156": 0, "159": 0, "164": 1, "167": 1, "168": 1, "180": 1, "200": 1, "203": 1, "204": 1, "165": 0, "169": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "194": 0, "195": 0, "196": 0, "198": 0, "201": 0, "205": 0}}
+ git checkout 6810dee426943c1a2fe85b5002dd0d4cf2246a05
Note: switching to '6810dee426943c1a2fe85b5002dd0d4cf2246a05'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 6810dee426 Merge pull request #14453 from jashan498/beam_examples
M	sympy/tensor/array/dense_ndim_array.py
+ git apply /root/pre_state.patch
error: unrecognized input
