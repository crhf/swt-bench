{"instance_id": "sympy__sympy-15017", "repo": "sympy/sympy", "version": "1.2", "environment_setup_commit": "e53e809176de9aa0fb62e85689f8cdb669d4cacb", "patch_list": ["diff --git a/sympy/tensor/array/dense_ndim_array.py b/sympy/tensor/array/dense_ndim_array.py\n--- a/sympy/tensor/array/dense_ndim_array.py\n+++ b/sympy/tensor/array/dense_ndim_array.py\n@@ -149,7 +149,7 @@ def _new(cls, iterable, shape, **kwargs):\n         self._shape = shape\n         self._array = list(flat_list)\n         self._rank = len(shape)\n-        self._loop_size = functools.reduce(lambda x,y: x*y, shape) if shape else 0\n+        self._loop_size = functools.reduce(lambda x,y: x*y, shape, 1)\n         return self\n \n     def __setitem__(self, index, value):\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-15017.py\nnew file mode 100644\nindex e69de29..693d136 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-15017.py\n@@ -0,0 +1,8 @@\n+from sympy import Array\n+\n+def test_len_rank_0_array():\n+    # Create a rank-0 array (scalar) using sympy.Array\n+    a = Array(3)\n+    \n+    # Assert that len(a) returns 1, which is the correct behavior\n+    assert len(a) == 1\n"], "arch": "x86_64", "base_commit": "6810dee426943c1a2fe85b5002dd0d4cf2246a05", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-15017.py"], "coverage_files": ["sympy/tensor/array/dense_ndim_array.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/tensor/array/dense_ndim_array\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-15017.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}