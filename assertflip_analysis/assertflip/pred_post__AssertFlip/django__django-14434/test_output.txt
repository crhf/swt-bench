+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 5e04e84d67da8163f365e9f5fcd169e2630e2873
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 5e04e84d67da8163f365e9f5fcd169e2630e2873
Author: Yuekui Li <liyuekui@gmail.com>
Date:   Wed May 19 16:30:15 2021 -0700

    Fixed #32503 -- Fixed altering BLOB/TEXT field to non-nullable with default on MySQL 8.0.13+.
    
    MySQL 8.0.13+ supports defaults for BLOB/TEXT but not in the
    ALTER COLUMN statement.
    
    Regression in 6b16c91157512587017e9178d066ed1a683e7795.
    
    Thanks Matt Westcott for the report.

diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index 4998a3fe2e..ad2f5a7da1 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -266,6 +266,13 @@ class BaseDatabaseSchemaEditor:
         """
         return False
 
+    def skip_default_on_alter(self, field):
+        """
+        Some backends don't accept default values for certain columns types
+        (i.e. MySQL longtext and longblob) in the ALTER COLUMN statement.
+        """
+        return False
+
     def prepare_default(self, value):
         """
         Only used for backends which have requires_literal_defaults feature
@@ -721,7 +728,7 @@ class BaseDatabaseSchemaEditor:
             old_default = self.effective_default(old_field)
             new_default = self.effective_default(new_field)
             if (
-                not self.skip_default(new_field) and
+                not self.skip_default_on_alter(new_field) and
                 old_default != new_default and
                 new_default is not None
             ):
diff --git a/django/db/backends/mysql/schema.py b/django/db/backends/mysql/schema.py
index 9bbcffc899..39450dd50d 100644
--- a/django/db/backends/mysql/schema.py
+++ b/django/db/backends/mysql/schema.py
@@ -68,6 +68,13 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
             return self._is_limited_data_type(field)
         return False
 
+    def skip_default_on_alter(self, field):
+        if self._is_limited_data_type(field) and not self.connection.mysql_is_mariadb:
+            # MySQL doesn't support defaults for BLOB and TEXT in the
+            # ALTER COLUMN statement.
+            return True
+        return False
+
     @property
     def _supports_limited_data_type_defaults(self):
         # MariaDB >= 10.2.1 and MySQL >= 8.0.13 supports defaults for BLOB
diff --git a/tests/schema/models.py b/tests/schema/models.py
index 6d4465807a..75e4de0874 100644
--- a/tests/schema/models.py
+++ b/tests/schema/models.py
@@ -158,6 +158,7 @@ class IntegerPK(models.Model):
 
 class Note(models.Model):
     info = models.TextField()
+    address = models.TextField(null=True)
 
     class Meta:
         apps = new_apps
diff --git a/tests/schema/tests.py b/tests/schema/tests.py
index 8587d2b15d..c5f5bd2e85 100644
--- a/tests/schema/tests.py
+++ b/tests/schema/tests.py
@@ -778,6 +778,15 @@ class SchemaTests(TransactionTestCase):
         with connection.schema_editor() as editor:
             editor.alter_field(Note, old_field, new_field, strict=True)
 
+    def test_alter_text_field_to_not_null_with_default_value(self):
+        with connection.schema_editor() as editor:
+            editor.create_model(Note)
+        old_field = Note._meta.get_field('address')
+        new_field = TextField(blank=True, default='', null=False)
+        new_field.set_attributes_from_name('address')
+        with connection.schema_editor() as editor:
+            editor.alter_field(Note, old_field, new_field, strict=True)
+
     @skipUnlessDBFeature('can_defer_constraint_checks', 'can_rollback_ddl')
     def test_alter_fk_checks_deferred_constraints(self):
         """
+ git diff 5e04e84d67da8163f365e9f5fcd169e2630e2873
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.3.2 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0.dev20210521113437) (3.8.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0.dev20210521113437) (2025.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0.dev20210521113437) (0.5.3)
Requirement already satisfied: typing-extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from asgiref>=3.3.2->Django==4.0.dev20210521113437) (4.13.2)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-4.0.dev20210521113437-0.editable-py3-none-any.whl size=26104 sha256=2b1bd4d39c81ad0dda14c57ba9c2140c5a14a1bb50d87b732d2c1e185eebf483
  Stored in directory: /tmp/pip-ephem-wheel-cache-qcs0t02k/wheels/b2/50/f1/218f2e9962a80d01a4b1297698978f9fb3b60056aa24343f24
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 4.0.dev20210521113437
    Uninstalling Django-4.0.dev20210521113437:
      Successfully uninstalled Django-4.0.dev20210521113437
Successfully installed Django-4.0.dev20210521113437
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch django/db/backends/base/schema.py...
Applied patch django/db/backends/base/schema.py cleanly.
+ git apply -v -
<stdin>:18: trailing whitespace.
        
<stdin>:24: trailing whitespace.
        
<stdin>:27: trailing whitespace.
        
Checking patch tests/test_coverup_django__django-14434.py...
Applied patch tests/test_coverup_django__django-14434.py cleanly.
warning: 3 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/backends/base/schema\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14434
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/db/backends/base/schema\\.py)']
Testing against Django installed in '/testbed/django'
0.58 /testbed/django/db/backends/base/schema.py(1): import logging
0.58 /testbed/django/db/backends/base/schema.py(2): from datetime import datetime
0.58 /testbed/django/db/backends/base/schema.py(4): from django.db.backends.ddl_references import (
0.58 /testbed/django/db/backends/base/schema.py(7): from django.db.backends.utils import names_digest, split_identifier
0.58 /testbed/django/db/backends/base/schema.py(8): from django.db.models import Deferrable, Index
0.58 /testbed/django/db/backends/base/schema.py(9): from django.db.models.sql import Query
0.58 /testbed/django/db/backends/base/schema.py(10): from django.db.transaction import TransactionManagementError, atomic
0.58 /testbed/django/db/backends/base/schema.py(11): from django.utils import timezone
0.58 /testbed/django/db/backends/base/schema.py(13): logger = logging.getLogger('django.db.backends.schema')
0.58 /testbed/django/db/backends/base/schema.py(16): def _is_relevant_relation(relation, altered_field):
0.58 /testbed/django/db/backends/base/schema.py(32): def _all_related_fields(model):
0.58 /testbed/django/db/backends/base/schema.py(36): def _related_non_m2m_objects(old_field, new_field):
0.58 /testbed/django/db/backends/base/schema.py(45): class BaseDatabaseSchemaEditor:
0.58 /testbed/django/db/backends/base/schema.py(45): class BaseDatabaseSchemaEditor:
0.58 /testbed/django/db/backends/base/schema.py(46):     """
0.58 /testbed/django/db/backends/base/schema.py(53):     sql_create_table = "CREATE TABLE %(table)s (%(definition)s)"
0.58 /testbed/django/db/backends/base/schema.py(54):     sql_rename_table = "ALTER TABLE %(old_table)s RENAME TO %(new_table)s"
0.58 /testbed/django/db/backends/base/schema.py(55):     sql_retablespace_table = "ALTER TABLE %(table)s SET TABLESPACE %(new_tablespace)s"
0.58 /testbed/django/db/backends/base/schema.py(56):     sql_delete_table = "DROP TABLE %(table)s CASCADE"
0.58 /testbed/django/db/backends/base/schema.py(58):     sql_create_column = "ALTER TABLE %(table)s ADD COLUMN %(column)s %(definition)s"
0.58 /testbed/django/db/backends/base/schema.py(59):     sql_alter_column = "ALTER TABLE %(table)s %(changes)s"
0.58 /testbed/django/db/backends/base/schema.py(60):     sql_alter_column_type = "ALTER COLUMN %(column)s TYPE %(type)s"
0.58 /testbed/django/db/backends/base/schema.py(61):     sql_alter_column_null = "ALTER COLUMN %(column)s DROP NOT NULL"
0.58 /testbed/django/db/backends/base/schema.py(62):     sql_alter_column_not_null = "ALTER COLUMN %(column)s SET NOT NULL"
0.58 /testbed/django/db/backends/base/schema.py(63):     sql_alter_column_default = "ALTER COLUMN %(column)s SET DEFAULT %(default)s"
0.58 /testbed/django/db/backends/base/schema.py(64):     sql_alter_column_no_default = "ALTER COLUMN %(column)s DROP DEFAULT"
0.58 /testbed/django/db/backends/base/schema.py(65):     sql_alter_column_no_default_null = sql_alter_column_no_default
0.58 /testbed/django/db/backends/base/schema.py(66):     sql_alter_column_collate = "ALTER COLUMN %(column)s TYPE %(type)s%(collation)s"
0.58 /testbed/django/db/backends/base/schema.py(67):     sql_delete_column = "ALTER TABLE %(table)s DROP COLUMN %(column)s CASCADE"
0.58 /testbed/django/db/backends/base/schema.py(68):     sql_rename_column = "ALTER TABLE %(table)s RENAME COLUMN %(old_column)s TO %(new_column)s"
0.58 /testbed/django/db/backends/base/schema.py(69):     sql_update_with_default = "UPDATE %(table)s SET %(column)s = %(default)s WHERE %(column)s IS NULL"
0.58 /testbed/django/db/backends/base/schema.py(71):     sql_unique_constraint = "UNIQUE (%(columns)s)%(deferrable)s"
0.58 /testbed/django/db/backends/base/schema.py(72):     sql_check_constraint = "CHECK (%(check)s)"
0.58 /testbed/django/db/backends/base/schema.py(73):     sql_delete_constraint = "ALTER TABLE %(table)s DROP CONSTRAINT %(name)s"
0.58 /testbed/django/db/backends/base/schema.py(74):     sql_constraint = "CONSTRAINT %(name)s %(constraint)s"
0.58 /testbed/django/db/backends/base/schema.py(76):     sql_create_check = "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s CHECK (%(check)s)"
0.58 /testbed/django/db/backends/base/schema.py(77):     sql_delete_check = sql_delete_constraint
0.58 /testbed/django/db/backends/base/schema.py(79):     sql_create_unique = "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s UNIQUE (%(columns)s)%(deferrable)s"
0.58 /testbed/django/db/backends/base/schema.py(80):     sql_delete_unique = sql_delete_constraint
0.58 /testbed/django/db/backends/base/schema.py(83):         "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s FOREIGN KEY (%(column)s) "
0.58 /testbed/django/db/backends/base/schema.py(82):     sql_create_fk = (
0.58 /testbed/django/db/backends/base/schema.py(86):     sql_create_inline_fk = None
0.58 /testbed/django/db/backends/base/schema.py(87):     sql_create_column_inline_fk = None
0.58 /testbed/django/db/backends/base/schema.py(88):     sql_delete_fk = sql_delete_constraint
0.58 /testbed/django/db/backends/base/schema.py(90):     sql_create_index = "CREATE INDEX %(name)s ON %(table)s (%(columns)s)%(include)s%(extra)s%(condition)s"
0.58 /testbed/django/db/backends/base/schema.py(91):     sql_create_unique_index = "CREATE UNIQUE INDEX %(name)s ON %(table)s (%(columns)s)%(include)s%(condition)s"
0.58 /testbed/django/db/backends/base/schema.py(92):     sql_delete_index = "DROP INDEX %(name)s"
0.58 /testbed/django/db/backends/base/schema.py(94):     sql_create_pk = "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s PRIMARY KEY (%(columns)s)"
0.58 /testbed/django/db/backends/base/schema.py(95):     sql_delete_pk = sql_delete_constraint
0.58 /testbed/django/db/backends/base/schema.py(97):     sql_delete_procedure = 'DROP PROCEDURE %(procedure)s'
0.58 /testbed/django/db/backends/base/schema.py(99):     def __init__(self, connection, collect_sql=False, atomic=True):
0.58 /testbed/django/db/backends/base/schema.py(108):     def __enter__(self):
0.58 /testbed/django/db/backends/base/schema.py(115):     def __exit__(self, exc_type, exc_value, traceback):
0.58 /testbed/django/db/backends/base/schema.py(124):     def execute(self, sql, params=()):
0.58 /testbed/django/db/backends/base/schema.py(147):     def quote_name(self, name):
0.58 /testbed/django/db/backends/base/schema.py(150):     def table_sql(self, model):
0.58 /testbed/django/db/backends/base/schema.py(209):     def column_sql(self, model, field, include_default=False):
0.58 /testbed/django/db/backends/base/schema.py(262):     def skip_default(self, field):
0.58 /testbed/django/db/backends/base/schema.py(269):     def skip_default_on_alter(self, field):
0.58 /testbed/django/db/backends/base/schema.py(276):     def prepare_default(self, value):
0.58 /testbed/django/db/backends/base/schema.py(285):     def _column_default_sql(self, field):
0.58 /testbed/django/db/backends/base/schema.py(292):     @staticmethod
0.58 /testbed/django/db/backends/base/schema.py(293):     def _effective_default(field):
0.58 /testbed/django/db/backends/base/schema.py(315):     def effective_default(self, field):
0.58 /testbed/django/db/backends/base/schema.py(319):     def quote_value(self, value):
0.58 /testbed/django/db/backends/base/schema.py(331):     def create_model(self, model):
0.58 /testbed/django/db/backends/base/schema.py(348):     def delete_model(self, model):
0.58 /testbed/django/db/backends/base/schema.py(364):     def add_index(self, model, index):
0.58 /testbed/django/db/backends/base/schema.py(375):     def remove_index(self, model, index):
0.58 /testbed/django/db/backends/base/schema.py(384):     def add_constraint(self, model, constraint):
0.58 /testbed/django/db/backends/base/schema.py(392):     def remove_constraint(self, model, constraint):
0.58 /testbed/django/db/backends/base/schema.py(398):     def alter_unique_together(self, model, old_unique_together, new_unique_together):
0.58 /testbed/django/db/backends/base/schema.py(414):     def alter_index_together(self, model, old_index_together, new_index_together):
0.58 test_references_column_false_due_to_table_instance (test_coverup_django__django-14434.CreateUniqueSQLTest)
Test that references_column is true when a Table instance is passed ... FAIL

======================================================================
FAIL: test_references_column_false_due_to_table_instance (test_coverup_django__django-14434.CreateUniqueSQLTest)
Test that references_column is true when a Table instance is passed
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-14434.py", line 23, in test_references_column_false_due_to_table_instance
    self.assertTrue(result)  # This should fail due to the bug
AssertionError: False is not true

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
/testbed/django/db/backends/base/schema.py(435):     def _delete_composed_index(self, model, fields, constraint_kwargs, sql):
0.58 /testbed/django/db/backends/base/schema.py(451):     def alter_db_table(self, model, old_db_table, new_db_table):
0.58 /testbed/django/db/backends/base/schema.py(466):     def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace):
0.58 /testbed/django/db/backends/base/schema.py(474):     def add_field(self, model, field):
0.58 /testbed/django/db/backends/base/schema.py(531):     def remove_field(self, model, field):
0.58 /testbed/django/db/backends/base/schema.py(561):     def alter_field(self, model, old_field, new_field, strict=False):
0.58 /testbed/django/db/backends/base/schema.py(604):     def _alter_field(self, model, old_field, new_field, old_type, new_type,
0.58 /testbed/django/db/backends/base/schema.py(859):     def _alter_column_null_sql(self, model, old_field, new_field):
0.58 /testbed/django/db/backends/base/schema.py(881):     def _alter_column_default_sql(self, model, old_field, new_field, drop=False):
0.58 /testbed/django/db/backends/base/schema.py(918):     def _alter_column_type_sql(self, model, old_field, new_field, new_type):
0.58 /testbed/django/db/backends/base/schema.py(939):     def _alter_column_collation_sql(self, model, new_field, new_type, new_collation):
0.58 /testbed/django/db/backends/base/schema.py(949):     def _alter_many_to_many(self, model, old_field, new_field, strict):
0.58 /testbed/django/db/backends/base/schema.py(970):     def _create_index_name(self, table_name, column_names, suffix=""):
0.58 /testbed/django/db/backends/base/schema.py(999):     def _get_index_tablespace_sql(self, model, fields, db_tablespace=None):
0.58 /testbed/django/db/backends/base/schema.py(1009):     def _index_condition_sql(self, condition):
0.58 /testbed/django/db/backends/base/schema.py(1014):     def _index_include_sql(self, model, columns):
0.58 /testbed/django/db/backends/base/schema.py(1022):     def _create_index_sql(self, model, *, fields=None, name=None, suffix='', using='',
0.58 /testbed/django/db/backends/base/schema.py(1023):                           db_tablespace=None, col_suffixes=(), sql=None, opclasses=(),
0.58 /testbed/django/db/backends/base/schema.py(1024):                           condition=None, include=None, expressions=None):
0.58 /testbed/django/db/backends/base/schema.py(1022):     def _create_index_sql(self, model, *, fields=None, name=None, suffix='', using='',
0.58 /testbed/django/db/backends/base/schema.py(1061):     def _delete_index_sql(self, model, name, sql=None):
0.58 /testbed/django/db/backends/base/schema.py(1068):     def _index_columns(self, table, columns, col_suffixes, opclasses):
0.58 /testbed/django/db/backends/base/schema.py(1071):     def _model_indexes_sql(self, model):
0.58 /testbed/django/db/backends/base/schema.py(1094):     def _field_indexes_sql(self, model, field):
0.58 /testbed/django/db/backends/base/schema.py(1103):     def _field_should_be_altered(self, old_field, new_field):
0.58 /testbed/django/db/backends/base/schema.py(1132):     def _field_should_be_indexed(self, model, field):
0.58 /testbed/django/db/backends/base/schema.py(1135):     def _field_became_primary_key(self, old_field, new_field):
0.58 /testbed/django/db/backends/base/schema.py(1138):     def _unique_should_be_added(self, old_field, new_field):
0.58 /testbed/django/db/backends/base/schema.py(1143):     def _rename_field_sql(self, table, old_field, new_field, new_type):
0.58 /testbed/django/db/backends/base/schema.py(1151):     def _create_fk_sql(self, model, field, suffix):
0.58 /testbed/django/db/backends/base/schema.py(1168):     def _fk_constraint_name(self, model, field, suffix):
0.58 /testbed/django/db/backends/base/schema.py(1181):     def _delete_fk_sql(self, model, name):
0.58 /testbed/django/db/backends/base/schema.py(1184):     def _deferrable_constraint_sql(self, deferrable):
0.58 /testbed/django/db/backends/base/schema.py(1192):     def _unique_sql(
0.58 /testbed/django/db/backends/base/schema.py(1225):     def _create_unique_sql(
0.58 /testbed/django/db/backends/base/schema.py(1267):     def _delete_unique_sql(
0.58 /testbed/django/db/backends/base/schema.py(1288):     def _check_sql(self, name, check):
0.58 /testbed/django/db/backends/base/schema.py(1294):     def _create_check_sql(self, model, name, check):
0.58 /testbed/django/db/backends/base/schema.py(1302):     def _delete_check_sql(self, model, name):
0.58 /testbed/django/db/backends/base/schema.py(1305):     def _delete_constraint_sql(self, template, model, name):
0.58 /testbed/django/db/backends/base/schema.py(1312):     def _constraint_names(self, model, column_names=None, unique=None,
0.58 /testbed/django/db/backends/base/schema.py(1342):     def _delete_primary_key(self, model, strict=False):
0.58 /testbed/django/db/backends/base/schema.py(1352):     def _create_primary_key_sql(self, model, field):
0.58 /testbed/django/db/backends/base/schema.py(1362):     def _delete_primary_key_sql(self, model, name):
0.58 /testbed/django/db/backends/base/schema.py(1365):     def _collate_sql(self, collation):
0.58 /testbed/django/db/backends/base/schema.py(1368):     def remove_procedure(self, procedure_name, param_types=()):
Found 1 tests.
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
+ cat coverage.cover
{"/testbed/django/db/backends/base/schema.py": {"1": 1, "2": 1, "4": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "13": 1, "16": 1, "32": 1, "36": 1, "45": 2, "21": 0, "22": 0, "24": 0, "25": 0, "27": 0, "29": 0, "33": 0, "39": 0, "40": 0, "41": 0, "53": 1, "54": 1, "55": 1, "56": 1, "58": 1, "59": 1, "60": 1, "61": 1, "62": 1, "63": 1, "64": 1, "65": 1, "66": 1, "67": 1, "68": 1, "69": 1, "71": 1, "72": 1, "73": 1, "74": 1, "76": 1, "77": 1, "79": 1, "80": 1, "83": 1, "82": 1, "86": 1, "87": 1, "88": 1, "90": 1, "91": 1, "92": 1, "94": 1, "95": 1, "97": 1, "99": 1, "108": 1, "115": 1, "124": 1, "147": 1, "150": 1, "209": 1, "262": 1, "269": 1, "276": 1, "285": 1, "292": 1, "293": 1, "315": 1, "319": 1, "331": 1, "348": 1, "364": 1, "375": 1, "384": 1, "392": 1, "398": 1, "414": 1, "435": 1, "451": 1, "466": 1, "474": 1, "531": 1, "561": 1, "604": 1, "859": 1, "881": 1, "918": 1, "939": 1, "949": 1, "970": 1, "999": 1, "1009": 1, "1014": 1, "1022": 2, "1023": 1, "1024": 1, "1061": 1, "1068": 1, "1071": 1, "1094": 1, "1103": 1, "1132": 1, "1135": 1, "1138": 1, "1143": 1, "1151": 1, "1168": 1, "1181": 1, "1184": 1, "1192": 1, "1225": 1, "1267": 1, "1288": 1, "1294": 1, "1302": 1, "1305": 1, "1312": 1, "1342": 1, "1352": 1, "1362": 1, "1365": 1, "1368": 1, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "128": 0, "129": 0, "130": 0, "134": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "142": 0, "144": 0, "145": 0, "148": 0, "154": 0, "155": 0, "156": 0, "158": 0, "159": 0, "160": 0, "162": 0, "163": 0, "164": 0, "166": 0, "167": 0, "168": 0, "170": 0, "171": 0, "172": 0, "173": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "183": 0, "184": 0, "186": 0, "187": 0, "188": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "215": 0, "216": 0, "217": 0, "219": 0, "220": 0, "222": 0, "223": 0, "224": 0, "226": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "237": 0, "239": 0, "240": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "251": 0, "252": 0, "253": 0, "254": 0, "256": 0, "257": 0, "258": 0, "260": 0, "267": 0, "274": 0, "280": 0, "281": 0, "290": 0, "295": 0, "296": 0, "297": 0, "298": 0, "299": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "307": 0, "308": 0, "309": 0, "310": 0, "312": 0, "313": 0, "317": 0, "327": 0, "336": 0, "338": 0, "341": 0, "344": 0, "345": 0, "346": 0, "351": 0, "352": 0, "353": 0, "356": 0, "357": 0, "360": 0, "361": 0, "362": 0, "367": 0, "366": 0, "368": 0, "370": 0, "373": 0, "378": 0, "377": 0, "379": 0, "381": 0, "382": 0, "386": 0, "387": 0, "390": 0, "394": 0, "395": 0, "396": 0, "404": 0, "405": 0, "407": 0, "408": 0, "410": 0, "411": 0, "412": 0, "420": 0, "421": 0, "423": 0, "424": 0, "425": 0, "426": 0, "427": 0, "428": 0, "431": 0, "432": 0, "433": 0, "436": 0, "437": 0, "438": 0, "439": 0, "440": 0, "441": 0, "443": 0, "444": 0, "445": 0, "446": 0, "447": 0, "449": 0, "453": 0, "454": 0, "455": 0, "456": 0, "457": 0, "458": 0, "459": 0, "462": 0, "463": 0, "464": 0, "468": 0, "469": 0, "470": 0, "471": 0, "480": 0, "481": 0, "483": 0, "485": 0, "486": 0, "488": 0, "489": 0, "490": 0, "491": 0, "492": 0, "494": 0, "495": 0, "496": 0, "497": 0, "498": 0, "499": 0, "500": 0, "501": 0, "502": 0, "503": 0, "504": 0, "508": 0, "510": 0, "511": 0, "512": 0, "513": 0, "515": 0, "518": 0, "519": 0, "520": 0, "521": 0, "522": 0, "524": 0, "526": 0, "528": 0, "529": 0, "537": 0, "538": 0, "540": 0, "541": 0, "543": 0, "544": 0, "545": 0, "546": 0, "548": 0, "549": 0, "550": 0, "552": 0, "554": 0, "555": 0, "557": 0, "558": 0, "559": 0, "569": 0, "570": 0, "572": 0, "573": 0, "574": 0, "575": 0, "576": 0, "577": 0, "578": 0, "579": 0, "581": 0, "583": 0, "584": 0, "585": 0, "586": 0, "587": 0, "588": 0, "589": 0, "590": 0, "591": 0, "593": 0, "594": 0, "595": 0, "596": 0, "598": 0, "601": 0, "602": 0, "608": 0, "610": 0, "609": 0, "611": 0, "612": 0, "614": 0, "615": 0, "616": 0, "617": 0, "618": 0, "619": 0, "621": 0, "622": 0, "623": 0, "625": 0, "627": 0, "628": 0, "629": 0, "630": 0, "632": 0, "633": 0, "634": 0, "635": 0, "636": 0, "638": 0, "639": 0, "643": 0, "644": 0, "645": 0, "646": 0, "642": 0, "648": 0, "651": 0, "652": 0, "653": 0, "655": 0, "656": 0, "667": 0, "669": 0, "672": 0, "673": 0, "674": 0, "676": 0, "680": 0, "682": 0, "683": 0, "684": 0, "685": 0, "686": 0, "688": 0, "689": 0, "690": 0, "691": 0, "692": 0, "694": 0, "695": 0, "697": 0, "698": 0, "700": 0, "701": 0, "702": 0, "704": 0, "705": 0, "706": 0, "708": 0, "709": 0, "710": 0, "712": 0, "713": 0, "715": 0, "716": 0, "717": 0, "718": 0, "726": 0, "727": 0, "728": 0, "729": 0, "731": 0, "730": 0, "732": 0, "733": 0, "735": 0, "736": 0, "738": 0, "739": 0, "740": 0, "741": 0, "744": 0, "745": 0, "743": 0, "747": 0, "748": 0, "751": 0, "753": 0, "754": 0, "755": 0, "757": 0, "758": 0, "759": 0, "760": 0, "761": 0, "763": 0, "765": 0, "767": 0, "768": 0, "769": 0, "770": 0, "771": 0, "773": 0, "777": 0, "778": 0, "779": 0, "780": 0, "781": 0, "783": 0, "785": 0, "786": 0, "787": 0, "789": 0, "790": 0, "792": 0, "793": 0, "803": 0, "804": 0, "807": 0, "808": 0, "809": 0, "811": 0, "813": 0, "815": 0, "817": 0, "818": 0, "819": 0, "820": 0, "821": 0, "823": 0, "824": 0, "825": 0, "826": 0, "828": 0, "830": 0, "831": 0, "833": 0, "834": 0, "835": 0, "836": 0, "838": 0, "839": 0, "840": 0, "841": 0, "843": 0, "844": 0, "845": 0, "848": 0, "849": 0, "850": 0, "851": 0, "852": 0, "854": 0, "856": 0, "857": 0, "866": 0, "867": 0, "869": 0, "871": 0, "872": 0, "874": 0, "875": 0, "876": 0, "878": 0, "873": 0, "888": 0, "889": 0, "890": 0, "892": 0, "893": 0, "894": 0, "898": 0, "899": 0, "901": 0, "902": 0, "903": 0, "904": 0, "906": 0, "908": 0, "910": 0, "911": 0, "912": 0, "913": 0, "915": 0, "909": 0, "930": 0, "931": 0, "932": 0, "934": 0, "929": 0, "936": 0, "928": 0, "941": 0, "942": 0, "943": 0, "944": 0, "946": 0, "940": 0, "952": 0, "953": 0, "954": 0, "956": 0, "957": 0, "960": 0, "961": 0, "963": 0, "964": 0, "966": 0, "967": 0, "977": 0, "978": 0, "979": 0, "981": 0, "982": 0, "983": 0, "985": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "991": 0, "995": 0, "996": 0, "997": 0, "1000": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1005": 0, "1006": 0, "1007": 0, "1010": 0, "1011": 0, "1012": 0, "1015": 0, "1016": 0, "1017": 0, "1018": 0, "1019": 0, "1030": 0, "1031": 0, "1032": 0, "1033": 0, "1035": 0, "1036": 0, "1037": 0, "1038": 0, "1040": 0, "1046": 0, "1047": 0, "1048": 0, "1049": 0, "1050": 0, "1053": 0, "1052": 0, "1054": 0, "1056": 0, "1057": 0, "1058": 0, "1042": 0, "1043": 0, "1044": 0, "1062": 0, "1063": 0, "1064": 0, "1065": 0, "1069": 0, "1076": 0, "1077": 0, "1078": 0, "1079": 0, "1080": 0, "1082": 0, "1083": 0, "1084": 0, "1086": 0, "1088": 0, "1087": 0, "1089": 0, "1091": 0, "1092": 0, "1098": 0, "1099": 0, "1100": 0, "1101": 0, "1104": 0, "1105": 0, "1111": 0, "1112": 0, "1113": 0, "1114": 0, "1115": 0, "1116": 0, "1118": 0, "1119": 0, "1120": 0, "1121": 0, "1122": 0, "1110": 0, "1124": 0, "1125": 0, "1126": 0, "1128": 0, "1129": 0, "1127": 0, "1133": 0, "1136": 0, "1139": 0, "1140": 0, "1144": 0, "1145": 0, "1146": 0, "1147": 0, "1148": 0, "1152": 0, "1153": 0, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1161": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1169": 0, "1172": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1177": 0, "1178": 0, "1170": 0, "1182": 0, "1185": 0, "1186": 0, "1187": 0, "1188": 0, "1189": 0, "1190": 0, "1197": 0, "1196": 0, "1198": 0, "1200": 0, "1201": 0, "1204": 0, "1205": 0, "1206": 0, "1207": 0, "1208": 0, "1209": 0, "1210": 0, "1211": 0, "1213": 0, "1214": 0, "1215": 0, "1216": 0, "1217": 0, "1218": 0, "1220": 0, "1221": 0, "1222": 0, "1231": 0, "1229": 0, "1232": 0, "1234": 0, "1235": 0, "1236": 0, "1238": 0, "1240": 0, "1243": 0, "1244": 0, "1245": 0, "1246": 0, "1248": 0, "1249": 0, "1250": 0, "1252": 0, "1253": 0, "1254": 0, "1256": 0, "1257": 0, "1258": 0, "1259": 0, "1260": 0, "1261": 0, "1262": 0, "1263": 0, "1264": 0, "1241": 0, "1273": 0, "1271": 0, "1274": 0, "1276": 0, "1277": 0, "1278": 0, "1281": 0, "1282": 0, "1283": 0, "1285": 0, "1286": 0, "1289": 0, "1290": 0, "1291": 0, "1295": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1303": 0, "1306": 0, "1307": 0, "1308": 0, "1309": 0, "1316": 0, "1317": 0, "1319": 0, "1321": 0, "1322": 0, "1323": 0, "1324": 0, "1325": 0, "1326": 0, "1327": 0, "1328": 0, "1329": 0, "1330": 0, "1331": 0, "1332": 0, "1333": 0, "1334": 0, "1335": 0, "1336": 0, "1337": 0, "1338": 0, "1339": 0, "1340": 0, "1318": 0, "1343": 0, "1344": 0, "1345": 0, "1346": 0, "1347": 0, "1349": 0, "1350": 0, "1353": 0, "1354": 0, "1355": 0, "1356": 0, "1357": 0, "1359": 0, "1363": 0, "1366": 0, "1369": 0, "1370": 0, "1371": 0, "1373": 0}}
+ git checkout 5e04e84d67da8163f365e9f5fcd169e2630e2873
Note: switching to '5e04e84d67da8163f365e9f5fcd169e2630e2873'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 5e04e84d67 Fixed #32503 -- Fixed altering BLOB/TEXT field to non-nullable with default on MySQL 8.0.13+.
M	django/db/backends/base/schema.py
+ git apply /root/pre_state.patch
error: unrecognized input
