{"instance_id": "django__django-15572", "repo": "django/django", "version": "4.1", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9", "patch_list": ["diff --git a/django/template/autoreload.py b/django/template/autoreload.py\n--- a/django/template/autoreload.py\n+++ b/django/template/autoreload.py\n@@ -17,7 +17,7 @@ def get_template_directories():\n         if not isinstance(backend, DjangoTemplates):\n             continue\n \n-        items.update(cwd / to_path(dir) for dir in backend.engine.dirs)\n+        items.update(cwd / to_path(dir) for dir in backend.engine.dirs if dir)\n \n         for loader in backend.engine.template_loaders:\n             if not hasattr(loader, \"get_dirs\"):\n@@ -25,7 +25,7 @@ def get_template_directories():\n             items.update(\n                 cwd / to_path(directory)\n                 for directory in loader.get_dirs()\n-                if not is_django_path(directory)\n+                if directory and not is_django_path(directory)\n             )\n     return items\n \n", "diff --git a/dev/null b/tests/test_coverup_django__django-15572.py\nnew file mode 100644\nindex e69de29..9d2d820 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15572.py\n@@ -0,0 +1,41 @@\n+from django.test import SimpleTestCase, override_settings\n+from django.utils.autoreload import autoreload_started, file_changed\n+from django.dispatch import receiver\n+from pathlib import Path\n+import os\n+\n+class TemplateAutoreloadTests(SimpleTestCase):\n+\n+    @override_settings(TEMPLATES=[{\n+        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n+        'DIRS': [''],  # Set DIRS to contain an empty string\n+    }])\n+    def test_autoreload_with_empty_template_dir(self):\n+        \"\"\"\n+        Test that autoreload does not trigger when TEMPLATES DIRS contains an empty string.\n+        \"\"\"\n+\n+        # Simulate the environment variable TEMPLATES_DIRS to return an empty string\n+        os.environ['TEMPLATES_DIRS'] = ''\n+\n+        # Start the autoreload mechanism\n+        autoreload_triggered = []\n+\n+        @receiver(autoreload_started)\n+        def on_autoreload_started(sender, **kwargs):\n+            autoreload_triggered.append(True)\n+\n+        # Simulate a file change event\n+        @receiver(file_changed)\n+        def on_file_changed(sender, file_path, **kwargs):\n+            # Convert file_path to a Path object to avoid AttributeError\n+            file_path = Path(file_path)\n+            # Simulate a non-Python file change\n+            if file_path.suffix != '.py':\n+                autoreload_triggered.append(True)\n+\n+        # Trigger a file change event\n+        file_changed.send(sender=self.__class__, file_path=Path('template.html'))\n+\n+        # Assert that the autoreload mechanism does not trigger\n+        self.assertFalse(autoreload_triggered, \"Autoreload should not trigger due to the empty string in TEMPLATES DIRS.\")\n"], "arch": "x86_64", "base_commit": "0b31e024873681e187b574fe1c4afe5e48aeeecf", "test_directives": ["test_coverup_django__django-15572"], "coverage_files": ["django/template/autoreload.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/template/autoreload\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15572", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.4.1\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}