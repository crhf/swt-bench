{"instance_id": "sympy__sympy-16450", "repo": "sympy/sympy", "version": "1.5", "environment_setup_commit": "70381f282f2d9d039da860e391fe51649df2779d", "patch_list": ["diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -251,7 +251,7 @@ def posify(eq):\n             eq[i] = e.subs(reps)\n         return f(eq), {r: s for s, r in reps.items()}\n \n-    reps = {s: Dummy(s.name, positive=True)\n+    reps = {s: Dummy(s.name, positive=True, **s.assumptions0)\n                  for s in eq.free_symbols if s.is_positive is None}\n     eq = eq.subs(reps)\n     return eq, {r: s for s, r in reps.items()}\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-16450.py\nnew file mode 100644\nindex e69de29..6391958 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-16450.py\n@@ -0,0 +1,11 @@\n+from sympy import Symbol, posify\n+\n+def test_posify_finite_assumption():\n+    # Create a symbol with the finite=True assumption\n+    x = Symbol('x', finite=True)\n+    \n+    # Apply posify to the symbol\n+    xp, _ = posify(x)\n+    \n+    # Assert that the is_finite property is True, which is the expected correct behavior\n+    assert xp.is_finite is True\n"], "arch": "x86_64", "base_commit": "aefdd023dc4f73c441953ed51f5f05a076f0862f", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-16450.py"], "coverage_files": ["sympy/simplify/simplify.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/simplify/simplify\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-16450.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}