+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
+++ '[' -n '5.1.16(1)-release' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo ']'
+++ source /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo
++++ function_exists _get_comp_words_by_ref
++++ declare -f -F _get_comp_words_by_ref
++++ return 1
++++ return 0
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh
+++ '[' -n '' ']'
+++ _la_log 'Beginning libarrow activation.'
+++ '[' '' = 1 ']'
+++ _la_gdb_prefix=/opt/miniconda3/envs/testbed/share/gdb/auto-load
+++ '[' '!' -w /opt/miniconda3/envs/testbed/share/gdb/auto-load ']'
+++ _la_placeholder=replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX
+++ _la_symlink_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib
+++ _la_orig_install_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
+++ _la_log '          _la_gdb_prefix: /opt/miniconda3/envs/testbed/share/gdb/auto-load'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_placeholder: replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_symlink_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib'
+++ '[' '' = 1 ']'
+++ _la_log '    _la_orig_install_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib'
+++ '[' '' = 1 ']'
+++ _la_log '  content of that folder:'
+++ '[' '' = 1 ']'
++++ ls -al /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
++++ sed 's/^/      /'
+++ _la_log '      total 12
      drwxr-xr-x 2 root root 4096 Aug 25 05:38 .
      drwxr-xr-x 3 root root 4096 Aug 25 05:38 ..
      -rw-r--r-- 1 root root  971 Aug 25 05:38 libarrow.so.2100.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ for _la_target in "$_la_orig_install_dir/"*.py
+++ '[' '!' -e /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py ']'
++++ basename /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py
+++ _la_symlink=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py
+++ _la_log '   _la_target: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ _la_log '  _la_symlink: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ '[' -L /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py ']'
++++ readlink /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py
+++ '[' /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py = /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py ']'
+++ _la_log 'symlink $_la_symlink already exists and points to $_la_target, skipping.'
+++ '[' '' = 1 ']'
+++ continue
+++ _la_log 'Libarrow activation complete.'
+++ '[' '' = 1 ']'
+++ unset _la_gdb_prefix
+++ unset _la_log
+++ unset _la_orig_install_dir
+++ unset _la_placeholder
+++ unset _la_symlink
+++ unset _la_symlink_dir
+++ unset _la_target
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD d3b6aa6d8b997df115a53c001d00222a0f92f63a
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit d3b6aa6d8b997df115a53c001d00222a0f92f63a
Author: Mathias Hauser <mathause@users.noreply.github.com>
Date:   Wed Jan 19 00:39:12 2022 +0100

    unpin dask again (#6171)

diff --git a/ci/requirements/environment-windows.yml b/ci/requirements/environment-windows.yml
index a9074b6c..8dafb6f8 100644
--- a/ci/requirements/environment-windows.yml
+++ b/ci/requirements/environment-windows.yml
@@ -8,7 +8,7 @@ dependencies:
   # - cdms2  # Not available on Windows
   # - cfgrib  # Causes Python interpreter crash on Windows: https://github.com/pydata/xarray/pull/3340
   - cftime
-  - dask-core != 2021.12.0 # https://github.com/pydata/xarray/pull/6111, can remove on next release
+  - dask-core
   - distributed
   - fsspec!=2021.7.0
   - h5netcdf
diff --git a/ci/requirements/environment.yml b/ci/requirements/environment.yml
index 890220b5..eab06fbe 100644
--- a/ci/requirements/environment.yml
+++ b/ci/requirements/environment.yml
@@ -10,7 +10,7 @@ dependencies:
   - cdms2
   - cfgrib
   - cftime
-  - dask-core != 2021.12.0 # https://github.com/pydata/xarray/pull/6111, can remove on next release
+  - dask-core
   - distributed
   - fsspec!=2021.7.0
   - h5netcdf
+ git diff d3b6aa6d8b997df115a53c001d00222a0f92f63a
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval '. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh
++++ unset UDUNITS2_XML_PATH
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh
++++ unset PROJ_DATA
++++ unset PROJ_NETWORK
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh
++++ test -n ''
++++ unset XML_CATALOG_FILES
++++ unset xml_catalog_files_libxml2
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh
++++ unset GEOTIFF_CSV
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh
++++ unset GDAL_DATA
++++ '[' -n '' ']'
++++ unset GDAL_DRIVER_PATH
++++ '[' -n '' ']'
++++ unset CPL_ZIP_ENCODING
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
++++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ unset _CONDA_SET_ESMFMKFILE
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n '' ']'
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
+++ '[' -n '5.1.16(1)-release' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo ']'
+++ source /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo
++++ function_exists _get_comp_words_by_ref
++++ declare -f -F _get_comp_words_by_ref
++++ return 1
++++ return 0
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libarrow_activate.sh
+++ '[' -n '' ']'
+++ _la_log 'Beginning libarrow activation.'
+++ '[' '' = 1 ']'
+++ _la_gdb_prefix=/opt/miniconda3/envs/testbed/share/gdb/auto-load
+++ '[' '!' -w /opt/miniconda3/envs/testbed/share/gdb/auto-load ']'
+++ _la_placeholder=replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX
+++ _la_symlink_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib
+++ _la_orig_install_dir=/opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
+++ _la_log '          _la_gdb_prefix: /opt/miniconda3/envs/testbed/share/gdb/auto-load'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_placeholder: replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX'
+++ '[' '' = 1 ']'
+++ _la_log '         _la_symlink_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib'
+++ '[' '' = 1 ']'
+++ _la_log '    _la_orig_install_dir: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib'
+++ '[' '' = 1 ']'
+++ _la_log '  content of that folder:'
+++ '[' '' = 1 ']'
++++ ls -al /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib
++++ sed 's/^/      /'
+++ _la_log '      total 12
      drwxr-xr-x 2 root root 4096 Aug 25 05:38 .
      drwxr-xr-x 3 root root 4096 Aug 25 05:38 ..
      -rw-r--r-- 1 root root  971 Aug 25 05:38 libarrow.so.2100.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ for _la_target in "$_la_orig_install_dir/"*.py
+++ '[' '!' -e /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py ']'
++++ basename /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py
+++ _la_symlink=/opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py
+++ _la_log '   _la_target: /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ _la_log '  _la_symlink: /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py'
+++ '[' '' = 1 ']'
+++ '[' -L /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py ']'
++++ readlink /opt/miniconda3/envs/testbed/share/gdb/auto-load//opt/miniconda3/envs/testbed/lib/libarrow.so.2100.0.0-gdb.py
+++ '[' /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py = /opt/miniconda3/envs/testbed/share/gdb/auto-load/replace_this_section_with_absolute_slashed_path_to_CONDA_PREFIX/lib/libarrow.so.2100.0.0-gdb.py ']'
+++ _la_log 'symlink $_la_symlink already exists and points to $_la_target, skipping.'
+++ '[' '' = 1 ']'
+++ continue
+++ _la_log 'Libarrow activation complete.'
+++ '[' '' = 1 ']'
+++ unset _la_gdb_prefix
+++ unset _la_log
+++ unset _la_orig_install_dir
+++ unset _la_placeholder
+++ unset _la_symlink
+++ unset _la_symlink_dir
+++ unset _la_target
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy>=1.18 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==0.20.3.dev52+gd3b6aa6d8) (1.23.0)
Requirement already satisfied: pandas>=1.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==0.20.3.dev52+gd3b6aa6d8) (1.5.3)
Requirement already satisfied: python-dateutil>=2.8.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.1->xarray==0.20.3.dev52+gd3b6aa6d8) (2.8.2)
Requirement already satisfied: pytz>=2020.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.1->xarray==0.20.3.dev52+gd3b6aa6d8) (2023.3)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from python-dateutil>=2.8.1->pandas>=1.1->xarray==0.20.3.dev52+gd3b6aa6d8) (1.16.0)
Building wheels for collected packages: xarray
  Building editable for xarray (pyproject.toml): started
  Building editable for xarray (pyproject.toml): finished with status 'done'
  Created wheel for xarray: filename=xarray-0.20.3.dev52+gd3b6aa6d8-0.editable-py3-none-any.whl size=8954 sha256=ebd9f6621117c5cb939a9df8126940b5a3474f14c15ae30f578ace156a3feb84
  Stored in directory: /tmp/pip-ephem-wheel-cache-1ib5ib32/wheels/0d/a6/cb/465a7b303d624cc531250fa27c75d038ddc29430bdb6ba7c9f
Successfully built xarray
Installing collected packages: xarray
  Attempting uninstall: xarray
    Found existing installation: xarray 0.20.3.dev52+gd3b6aa6d8
    Uninstalling xarray-0.20.3.dev52+gd3b6aa6d8:
      Successfully uninstalled xarray-0.20.3.dev52+gd3b6aa6d8
Successfully installed xarray-0.20.3.dev52+gd3b6aa6d8
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch xarray/core/computation.py...
Applied patch xarray/core/computation.py cleanly.
+ git apply -v -
<stdin>:16: trailing whitespace.
    
<stdin>:19: trailing whitespace.
    
<stdin>:22: trailing whitespace.
    
Checking patch xarray/tests/test_coverup_pydata__xarray-4687.py...
Applied patch xarray/tests/test_coverup_pydata__xarray-4687.py cleanly.
warning: 3 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(xarray/core/computation\.py)' -m pytest --no-header -rA -p no:cacheprovider xarray/tests/test_coverup_pydata__xarray-4687.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(xarray/core/computation\\.py)']
============================= test session starts ==============================
collected 1 item

xarray/tests/test_coverup_pydata__xarray-4687.py F                       [100%]

=================================== FAILURES ===================================
______________________ test_xr_where_preserves_attributes ______________________

    def test_xr_where_preserves_attributes():
        # Create a DataArray with attributes and a specific dtype
        data = xr.DataArray(np.ones([10, 10], dtype=np.int8))
        data.attrs["attr_1"] = "test1"
        data.attrs["attr_2"] = "test2"
    
        # Apply xr.where with a condition
        result = xr.where(data == 1, 5, 0)
    
        # Check if the attributes are preserved
>       assert result.attrs == data.attrs, "Attributes should be preserved"
E       AssertionError: Attributes should be preserved
E       assert {} == {'attr_1': 't...r_2': 'test2'}
E         Right contains 2 more items:
E         {'attr_1': 'test1', 'attr_2': 'test2'}
E         Use -v to get more diff

/testbed/xarray/tests/test_coverup_pydata__xarray-4687.py:15: AssertionError
----------------------------- Captured stdout call -----------------------------
3.64 /testbed/xarray/core/computation.py(1813):     if keep_attrs is None:
3.64 /testbed/xarray/core/computation.py(1814):         keep_attrs = _get_keep_attrs(default=False)
3.64 /testbed/xarray/core/computation.py(1816):     if keep_attrs is True:
3.64 /testbed/xarray/core/computation.py(1822):     return apply_ufunc(
3.64 /testbed/xarray/core/computation.py(1823):         duck_array_ops.where,
3.64 /testbed/xarray/core/computation.py(1824):         cond,
3.64 /testbed/xarray/core/computation.py(1825):         x,
3.64 /testbed/xarray/core/computation.py(1826):         y,
3.64 /testbed/xarray/core/computation.py(1827):         join="exact",
3.64 /testbed/xarray/core/computation.py(1828):         dataset_join="exact",
3.64 /testbed/xarray/core/computation.py(1829):         dask="allowed",
3.64 /testbed/xarray/core/computation.py(1830):         keep_attrs=keep_attrs,
3.64 /testbed/xarray/core/computation.py(1822):     return apply_ufunc(
3.64 /testbed/xarray/core/computation.py(1057):     from .dataarray import DataArray
3.64 /testbed/xarray/core/computation.py(1058):     from .groupby import GroupBy
3.64 /testbed/xarray/core/computation.py(1059):     from .variable import Variable
3.64 /testbed/xarray/core/computation.py(1061):     if input_core_dims is None:
3.64 /testbed/xarray/core/computation.py(1062):         input_core_dims = ((),) * (len(args))
3.64 /testbed/xarray/core/computation.py(1071):     if kwargs is None:
3.64 /testbed/xarray/core/computation.py(1072):         kwargs = {}
3.64 /testbed/xarray/core/computation.py(1074):     signature = _UFuncSignature(input_core_dims, output_core_dims)
3.64 /testbed/xarray/core/computation.py(83):         self.input_core_dims = tuple(tuple(a) for a in input_core_dims)
3.64 /testbed/xarray/core/computation.py(83):         self.input_core_dims = tuple(tuple(a) for a in input_core_dims)
3.64 /testbed/xarray/core/computation.py(83):         self.input_core_dims = tuple(tuple(a) for a in input_core_dims)
3.64 /testbed/xarray/core/computation.py(83):         self.input_core_dims = tuple(tuple(a) for a in input_core_dims)
3.64 /testbed/xarray/core/computation.py(83):         self.input_core_dims = tuple(tuple(a) for a in input_core_dims)
3.64 /testbed/xarray/core/computation.py(84):         self.output_core_dims = tuple(tuple(a) for a in output_core_dims)
3.64 /testbed/xarray/core/computation.py(84):         self.output_core_dims = tuple(tuple(a) for a in output_core_dims)
3.64 /testbed/xarray/core/computation.py(84):         self.output_core_dims = tuple(tuple(a) for a in output_core_dims)
3.64 /testbed/xarray/core/computation.py(85):         self._all_input_core_dims = None
3.64 /testbed/xarray/core/computation.py(86):         self._all_output_core_dims = None
3.64 /testbed/xarray/core/computation.py(87):         self._all_core_dims = None
3.64 /testbed/xarray/core/computation.py(1076):     if exclude_dims:
3.64 /testbed/xarray/core/computation.py(1089):     if dask == "parallelized":
3.64 /testbed/xarray/core/computation.py(1113):     if kwargs:
3.64 /testbed/xarray/core/computation.py(1116):     if keep_attrs is None:
3.64 /testbed/xarray/core/computation.py(1119):     if isinstance(keep_attrs, bool):
3.64 /testbed/xarray/core/computation.py(1120):         keep_attrs = "override" if keep_attrs else "drop"
3.64 /testbed/xarray/core/computation.py(1122):     variables_vfunc = functools.partial(
3.64 /testbed/xarray/core/computation.py(1123):         apply_variable_ufunc,
3.64 /testbed/xarray/core/computation.py(1124):         func,
3.64 /testbed/xarray/core/computation.py(1125):         signature=signature,
3.64 /testbed/xarray/core/computation.py(1126):         exclude_dims=exclude_dims,
3.64 /testbed/xarray/core/computation.py(1127):         keep_attrs=keep_attrs,
3.64 /testbed/xarray/core/computation.py(1128):         dask=dask,
3.64 /testbed/xarray/core/computation.py(1129):         vectorize=vectorize,
3.64 /testbed/xarray/core/computation.py(1130):         output_dtypes=output_dtypes,
3.64 /testbed/xarray/core/computation.py(1131):         dask_gufunc_kwargs=dask_gufunc_kwargs,
3.64 /testbed/xarray/core/computation.py(1122):     variables_vfunc = functools.partial(
3.64 /testbed/xarray/core/computation.py(1135):     if any(isinstance(a, GroupBy) for a in args):
3.64 /testbed/xarray/core/computation.py(1135):     if any(isinstance(a, GroupBy) for a in args):
3.64 /testbed/xarray/core/computation.py(1135):     if any(isinstance(a, GroupBy) for a in args):
3.64 /testbed/xarray/core/computation.py(1135):     if any(isinstance(a, GroupBy) for a in args):
3.64 /testbed/xarray/core/computation.py(1135):     if any(isinstance(a, GroupBy) for a in args):
3.64 /testbed/xarray/core/computation.py(1153):     elif any(is_dict_like(a) for a in args):
3.64 /testbed/xarray/core/computation.py(1153):     elif any(is_dict_like(a) for a in args):
3.64 /testbed/xarray/core/computation.py(1153):     elif any(is_dict_like(a) for a in args):
3.64 /testbed/xarray/core/computation.py(1153):     elif any(is_dict_like(a) for a in args):
3.64 /testbed/xarray/core/computation.py(1153):     elif any(is_dict_like(a) for a in args):
3.64 /testbed/xarray/core/computation.py(1165):     elif any(isinstance(a, DataArray) for a in args):
3.64 /testbed/xarray/core/computation.py(1165):     elif any(isinstance(a, DataArray) for a in args):
3.64 /testbed/xarray/core/computation.py(1166):         return apply_dataarray_vfunc(
3.64 /testbed/xarray/core/computation.py(1167):             variables_vfunc,
3.64 /testbed/xarray/core/computation.py(1166):         return apply_dataarray_vfunc(
3.64 /testbed/xarray/core/computation.py(1168):             *args,
3.64 /testbed/xarray/core/computation.py(1166):         return apply_dataarray_vfunc(
3.64 /testbed/xarray/core/computation.py(1169):             signature=signature,
3.64 /testbed/xarray/core/computation.py(1170):             join=join,
3.64 /testbed/xarray/core/computation.py(1171):             exclude_dims=exclude_dims,
3.64 /testbed/xarray/core/computation.py(1172):             keep_attrs=keep_attrs,
3.64 /testbed/xarray/core/computation.py(1166):         return apply_dataarray_vfunc(
3.64 /testbed/xarray/core/computation.py(272):     from .dataarray import DataArray
3.64 /testbed/xarray/core/computation.py(274):     if len(args) > 1:
3.64 /testbed/xarray/core/computation.py(275):         args = deep_align(
3.64 /testbed/xarray/core/computation.py(276):             args, join=join, copy=False, exclude=exclude_dims, raise_on_invalid=False
3.64 /testbed/xarray/core/computation.py(275):         args = deep_align(
3.64 /testbed/xarray/core/computation.py(279):     objs = _all_of_type(args, DataArray)
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(281):     if keep_attrs == "drop":
3.64 /testbed/xarray/core/computation.py(282):         name = result_name(args)
3.64 /testbed/xarray/core/computation.py(191):     names = {getattr(obj, "name", _DEFAULT_NAME) for obj in objects}
3.64 /testbed/xarray/core/computation.py(191):     names = {getattr(obj, "name", _DEFAULT_NAME) for obj in objects}
3.64 /testbed/xarray/core/computation.py(191):     names = {getattr(obj, "name", _DEFAULT_NAME) for obj in objects}
3.64 /testbed/xarray/core/computation.py(191):     names = {getattr(obj, "name", _DEFAULT_NAME) for obj in objects}
3.64 /testbed/xarray/core/computation.py(191):     names = {getattr(obj, "name", _DEFAULT_NAME) for obj in objects}
3.64 /testbed/xarray/core/computation.py(192):     names.discard(_DEFAULT_NAME)
3.64 /testbed/xarray/core/computation.py(193):     if len(names) == 1:
3.64 /testbed/xarray/core/computation.py(194):         (name,) = names
3.64 /testbed/xarray/core/computation.py(197):     return name
3.64 /testbed/xarray/core/computation.py(286):     result_coords = build_output_coords(
3.64 /testbed/xarray/core/computation.py(287):         args, signature, exclude_dims, combine_attrs=keep_attrs
3.64 /testbed/xarray/core/computation.py(286):     result_coords = build_output_coords(
3.64 /testbed/xarray/core/computation.py(235):     coords_list = _get_coords_list(args)
3.64 /testbed/xarray/core/computation.py(201):     coords_list = []
3.64 /testbed/xarray/core/computation.py(202):     for arg in args:
3.64 /testbed/xarray/core/computation.py(203):         try:
3.64 /testbed/xarray/core/computation.py(204):             coords = arg.coords
3.64 /testbed/xarray/core/computation.py(208):             coords_list.append(coords)
3.64 /testbed/xarray/core/computation.py(202):     for arg in args:
3.64 /testbed/xarray/core/computation.py(203):         try:
3.64 /testbed/xarray/core/computation.py(204):             coords = arg.coords
3.64 /testbed/xarray/core/computation.py(205):         except AttributeError:
3.64 /testbed/xarray/core/computation.py(206):             pass  # skip this argument
3.64 /testbed/xarray/core/computation.py(202):     for arg in args:
3.64 /testbed/xarray/core/computation.py(203):         try:
3.64 /testbed/xarray/core/computation.py(204):             coords = arg.coords
3.64 /testbed/xarray/core/computation.py(205):         except AttributeError:
3.64 /testbed/xarray/core/computation.py(206):             pass  # skip this argument
3.64 /testbed/xarray/core/computation.py(202):     for arg in args:
3.64 /testbed/xarray/core/computation.py(209):     return coords_list
3.64 /testbed/xarray/core/computation.py(237):     if len(coords_list) == 1 and not exclude_dims:
3.64 /testbed/xarray/core/computation.py(239):         (unpacked_coords,) = coords_list
3.64 /testbed/xarray/core/computation.py(240):         merged_vars = dict(unpacked_coords.variables)
3.64 /testbed/xarray/core/computation.py(247):     output_coords = []
3.64 /testbed/xarray/core/computation.py(248):     for output_dims in signature.output_core_dims:
3.64 /testbed/xarray/core/computation.py(249):         dropped_dims = signature.all_input_core_dims - set(output_dims)
3.64 /testbed/xarray/core/computation.py(91):         if self._all_input_core_dims is None:
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(93):                 dim for dims in self.input_core_dims for dim in dims
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(93):                 dim for dims in self.input_core_dims for dim in dims
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(93):                 dim for dims in self.input_core_dims for dim in dims
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(93):                 dim for dims in self.input_core_dims for dim in dims
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(92):             self._all_input_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(95):         return self._all_input_core_dims
3.64 /testbed/xarray/core/computation.py(250):         if dropped_dims:
3.64 /testbed/xarray/core/computation.py(255):             filtered = merged_vars
3.64 /testbed/xarray/core/computation.py(256):         output_coords.append(filtered)
3.64 /testbed/xarray/core/computation.py(248):     for output_dims in signature.output_core_dims:
3.64 /testbed/xarray/core/computation.py(258):     return output_coords
3.64 /testbed/xarray/core/computation.py(290):     data_vars = [getattr(a, "variable", a) for a in args]
3.64 /testbed/xarray/core/computation.py(290):     data_vars = [getattr(a, "variable", a) for a in args]
3.64 /testbed/xarray/core/computation.py(290):     data_vars = [getattr(a, "variable", a) for a in args]
3.64 /testbed/xarray/core/computation.py(290):     data_vars = [getattr(a, "variable", a) for a in args]
3.64 /testbed/xarray/core/computation.py(290):     data_vars = [getattr(a, "variable", a) for a in args]
3.64 /testbed/xarray/core/computation.py(291):     result_var = func(*data_vars)
3.64 /testbed/xarray/core/computation.py(636):     from .variable import Variable, as_compatible_data
3.64 /testbed/xarray/core/computation.py(638):     dim_sizes = unified_dim_sizes(
3.64 /testbed/xarray/core/computation.py(639):         (a for a in args if hasattr(a, "dims")), exclude_dims=exclude_dims
3.64 /testbed/xarray/core/computation.py(638):     dim_sizes = unified_dim_sizes(
3.64 /testbed/xarray/core/computation.py(533):     dim_sizes: Dict[Hashable, int] = {}
3.64 /testbed/xarray/core/computation.py(535):     for var in variables:
3.64 /testbed/xarray/core/computation.py(639):         (a for a in args if hasattr(a, "dims")), exclude_dims=exclude_dims
3.64 /testbed/xarray/core/computation.py(536):         if len(set(var.dims)) < len(var.dims):
3.64 /testbed/xarray/core/computation.py(541):         for dim, size in zip(var.dims, var.shape):
3.64 /testbed/xarray/core/computation.py(542):             if dim not in exclude_dims:
3.64 /testbed/xarray/core/computation.py(543):                 if dim not in dim_sizes:
3.64 /testbed/xarray/core/computation.py(544):                     dim_sizes[dim] = size
3.64 /testbed/xarray/core/computation.py(541):         for dim, size in zip(var.dims, var.shape):
3.64 /testbed/xarray/core/computation.py(542):             if dim not in exclude_dims:
3.64 /testbed/xarray/core/computation.py(543):                 if dim not in dim_sizes:
3.64 /testbed/xarray/core/computation.py(544):                     dim_sizes[dim] = size
3.64 /testbed/xarray/core/computation.py(541):         for dim, size in zip(var.dims, var.shape):
3.64 /testbed/xarray/core/computation.py(535):     for var in variables:
3.64 /testbed/xarray/core/computation.py(639):         (a for a in args if hasattr(a, "dims")), exclude_dims=exclude_dims
3.64 /testbed/xarray/core/computation.py(639):         (a for a in args if hasattr(a, "dims")), exclude_dims=exclude_dims
3.64 /testbed/xarray/core/computation.py(639):         (a for a in args if hasattr(a, "dims")), exclude_dims=exclude_dims
3.64 /testbed/xarray/core/computation.py(551):     return dim_sizes
3.64 /testbed/xarray/core/computation.py(641):     broadcast_dims = tuple(
3.64 /testbed/xarray/core/computation.py(642):         dim for dim in dim_sizes if dim not in signature.all_core_dims
3.64 /testbed/xarray/core/computation.py(641):     broadcast_dims = tuple(
3.64 /testbed/xarray/core/computation.py(641):     broadcast_dims = tuple(
3.64 /testbed/xarray/core/computation.py(642):         dim for dim in dim_sizes if dim not in signature.all_core_dims
3.64 /testbed/xarray/core/computation.py(107):         if self._all_core_dims is None:
3.64 /testbed/xarray/core/computation.py(108):             self._all_core_dims = self.all_input_core_dims | self.all_output_core_dims
3.64 /testbed/xarray/core/computation.py(91):         if self._all_input_core_dims is None:
3.64 /testbed/xarray/core/computation.py(95):         return self._all_input_core_dims
3.64 /testbed/xarray/core/computation.py(99):         if self._all_output_core_dims is None:
3.64 /testbed/xarray/core/computation.py(100):             self._all_output_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(101):                 dim for dims in self.output_core_dims for dim in dims
3.64 /testbed/xarray/core/computation.py(100):             self._all_output_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(100):             self._all_output_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(101):                 dim for dims in self.output_core_dims for dim in dims
3.64 /testbed/xarray/core/computation.py(100):             self._all_output_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(100):             self._all_output_core_dims = frozenset(
3.64 /testbed/xarray/core/computation.py(103):         return self._all_output_core_dims
3.64 /testbed/xarray/core/computation.py(109):         return self._all_core_dims
3.64 /testbed/xarray/core/computation.py(641):     broadcast_dims = tuple(
3.64 /testbed/xarray/core/computation.py(642):         dim for dim in dim_sizes if dim not in signature.all_core_dims
3.64 /testbed/xarray/core/computation.py(107):         if self._all_core_dims is None:
3.64 /testbed/xarray/core/computation.py(109):         return self._all_core_dims
3.64 /testbed/xarray/core/computation.py(641):     broadcast_dims = tuple(
3.64 /testbed/xarray/core/computation.py(644):     output_dims = [broadcast_dims + out for out in signature.output_core_dims]
3.64 /testbed/xarray/core/computation.py(644):     output_dims = [broadcast_dims + out for out in signature.output_core_dims]
3.64 /testbed/xarray/core/computation.py(644):     output_dims = [broadcast_dims + out for out in signature.output_core_dims]
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(650):         for arg, core_dims in zip(args, signature.input_core_dims)
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(650):         for arg, core_dims in zip(args, signature.input_core_dims)
3.64 /testbed/xarray/core/computation.py(648):         if isinstance(arg, Variable)
3.64 /testbed/xarray/core/computation.py(647):         broadcast_compat_data(arg, broadcast_dims, core_dims)
3.64 /testbed/xarray/core/computation.py(562):     data = variable.data
3.64 /testbed/xarray/core/computation.py(564):     old_dims = variable.dims
3.64 /testbed/xarray/core/computation.py(565):     new_dims = broadcast_dims + core_dims
3.64 /testbed/xarray/core/computation.py(567):     if new_dims == old_dims:
3.64 /testbed/xarray/core/computation.py(569):         return data
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(650):         for arg, core_dims in zip(args, signature.input_core_dims)
3.64 /testbed/xarray/core/computation.py(648):         if isinstance(arg, Variable)
3.64 /testbed/xarray/core/computation.py(647):         broadcast_compat_data(arg, broadcast_dims, core_dims)
3.64 /testbed/xarray/core/computation.py(649):         else arg
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(650):         for arg, core_dims in zip(args, signature.input_core_dims)
3.64 /testbed/xarray/core/computation.py(648):         if isinstance(arg, Variable)
3.64 /testbed/xarray/core/computation.py(647):         broadcast_compat_data(arg, broadcast_dims, core_dims)
3.64 /testbed/xarray/core/computation.py(649):         else arg
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(646):     input_data = [
3.64 /testbed/xarray/core/computation.py(653):     if any(is_duck_dask_array(array) for array in input_data):
3.64 /testbed/xarray/core/computation.py(653):     if any(is_duck_dask_array(array) for array in input_data):
3.64 /testbed/xarray/core/computation.py(653):     if any(is_duck_dask_array(array) for array in input_data):
3.64 /testbed/xarray/core/computation.py(653):     if any(is_duck_dask_array(array) for array in input_data):
3.64 /testbed/xarray/core/computation.py(653):     if any(is_duck_dask_array(array) for array in input_data):
3.64 /testbed/xarray/core/computation.py(729):         if vectorize:
3.64 /testbed/xarray/core/computation.py(734):     result_data = func(*input_data)
3.64 /testbed/xarray/core/computation.py(736):     if signature.num_outputs == 1:
3.64 /testbed/xarray/core/computation.py(123):         return len(self.output_core_dims)
3.64 /testbed/xarray/core/computation.py(737):         result_data = (result_data,)
3.64 /testbed/xarray/core/computation.py(749):     objs = _all_of_type(args, Variable)
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(58):     return [arg for arg in args if isinstance(arg, kind)]
3.64 /testbed/xarray/core/computation.py(750):     attrs = merge_attrs(
3.64 /testbed/xarray/core/computation.py(751):         [obj.attrs for obj in objs],
3.64 /testbed/xarray/core/computation.py(751):         [obj.attrs for obj in objs],
3.64 /testbed/xarray/core/computation.py(751):         [obj.attrs for obj in objs],
3.64 /testbed/xarray/core/computation.py(752):         combine_attrs=keep_attrs,
3.64 /testbed/xarray/core/computation.py(750):     attrs = merge_attrs(
3.64 /testbed/xarray/core/computation.py(755):     output = []
3.64 /testbed/xarray/core/computation.py(756):     for dims, data in zip(output_dims, result_data):
3.64 /testbed/xarray/core/computation.py(757):         data = as_compatible_data(data)
3.64 /testbed/xarray/core/computation.py(758):         if data.ndim != len(dims):
3.64 /testbed/xarray/core/computation.py(765):         var = Variable(dims, data, fastpath=True)
3.64 /testbed/xarray/core/computation.py(766):         for dim, new_size in var.sizes.items():
3.64 /testbed/xarray/core/computation.py(767):             if dim in dim_sizes and new_size != dim_sizes[dim]:
3.64 /testbed/xarray/core/computation.py(766):         for dim, new_size in var.sizes.items():
3.64 /testbed/xarray/core/computation.py(767):             if dim in dim_sizes and new_size != dim_sizes[dim]:
3.64 /testbed/xarray/core/computation.py(766):         for dim, new_size in var.sizes.items():
3.64 /testbed/xarray/core/computation.py(777):         var.attrs = attrs
3.64 /testbed/xarray/core/computation.py(778):         output.append(var)
3.64 /testbed/xarray/core/computation.py(756):     for dims, data in zip(output_dims, result_data):
3.64 /testbed/xarray/core/computation.py(780):     if signature.num_outputs == 1:
3.64 /testbed/xarray/core/computation.py(123):         return len(self.output_core_dims)
3.64 /testbed/xarray/core/computation.py(781):         return output[0]
3.64 /testbed/xarray/core/computation.py(293):     if signature.num_outputs > 1:
3.64 /testbed/xarray/core/computation.py(123):         return len(self.output_core_dims)
3.64 /testbed/xarray/core/computation.py(299):         (coords,) = result_coords
3.64 /testbed/xarray/core/computation.py(300):         out = DataArray(result_var, coords, name=name, fastpath=True)
3.64 /testbed/xarray/core/computation.py(302):     attrs = merge_attrs([x.attrs for x in objs], combine_attrs=keep_attrs)
3.64 /testbed/xarray/core/computation.py(302):     attrs = merge_attrs([x.attrs for x in objs], combine_attrs=keep_attrs)
3.64 /testbed/xarray/core/computation.py(302):     attrs = merge_attrs([x.attrs for x in objs], combine_attrs=keep_attrs)
3.64 /testbed/xarray/core/computation.py(303):     if isinstance(out, tuple):
3.64 /testbed/xarray/core/computation.py(307):         out.attrs = attrs
3.64 /testbed/xarray/core/computation.py(309):     return out
=========================== short test summary info ============================
FAILED xarray/tests/test_coverup_pydata__xarray-4687.py::test_xr_where_preserves_attributes
============================== 1 failed in 1.45s ===============================
+ cat coverage.cover
{"/testbed/xarray/core/computation.py": {"4": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "27": 1, "29": 1, "30": 1, "31": 1, "32": 1, "33": 1, "34": 1, "35": 1, "37": 1, "38": 0, "39": 0, "40": 0, "41": 0, "43": 1, "44": 1, "45": 1, "48": 1, "56": 1, "61": 2, "188": 1, "200": 1, "215": 1, "216": 1, "212": 1, "265": 1, "266": 1, "267": 1, "261": 1, "312": 1, "316": 1, "323": 1, "335": 1, "336": 1, "337": 1, "338": 1, "339": 1, "334": 1, "344": 1, "343": 1, "352": 1, "351": 1, "360": 1, "370": 1, "381": 1, "380": 1, "400": 1, "418": 1, "419": 1, "420": 1, "421": 1, "422": 1, "414": 1, "468": 1, "483": 1, "530": 1, "529": 1, "554": 1, "557": 1, "611": 1, "628": 1, "629": 1, "630": 1, "631": 1, "632": 1, "633": 1, "624": 1, "786": 1, "812": 1, "813": 1, "814": 1, "815": 1, "816": 1, "817": 1, "818": 1, "819": 1, "820": 1, "821": 1, "822": 1, "823": 1, "824": 1, "825": 1, "809": 1, "1182": 1, "1262": 1, "1340": 1, "1377": 1, "1585": 1, "1730": 1, "1834": 1, "1870": 1, "1871": 1, "1872": 1, "1873": 1, "1866": 1, "1929": 1, "50": 0, "51": 0, "52": 0, "53": 0, "58": 10, "74": 1, "82": 1, "89": 1, "90": 1, "97": 1, "98": 1, "105": 1, "106": 1, "111": 1, "112": 1, "117": 1, "118": 1, "121": 1, "122": 1, "125": 1, "134": 1, "137": 1, "144": 1, "149": 1, "83": 5, "84": 3, "85": 1, "86": 1, "87": 1, "91": 2, "92": 9, "93": 4, "95": 2, "99": 1, "100": 5, "101": 2, "103": 1, "107": 2, "108": 1, "109": 2, "113": 0, "114": 0, "119": 0, "123": 3, "126": 0, "128": 0, "129": 0, "127": 0, "131": 0, "132": 0, "135": 0, "138": 0, "139": 0, "140": 0, "141": 0, "145": 0, "146": 0, "147": 0, "157": 0, "159": 0, "161": 0, "163": 0, "167": 0, "169": 0, "171": 0, "173": 0, "180": 0, "181": 0, "184": 0, "185": 0, "158": 0, "162": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "191": 5, "192": 1, "193": 1, "194": 1, "197": 1, "196": 0, "201": 1, "202": 4, "203": 3, "204": 3, "205": 2, "206": 2, "208": 1, "209": 1, "235": 1, "237": 1, "239": 1, "240": 1, "243": 0, "244": 0, "247": 1, "248": 2, "249": 1, "250": 1, "251": 0, "252": 0, "255": 1, "256": 1, "258": 1, "272": 1, "274": 1, "275": 2, "276": 1, "279": 1, "281": 1, "282": 1, "284": 0, "285": 0, "286": 2, "287": 1, "290": 5, "291": 1, "293": 1, "294": 0, "296": 0, "299": 1, "300": 1, "302": 3, "303": 1, "304": 0, "305": 0, "309": 1, "307": 1, "295": 0, "313": 0, "317": 0, "318": 0, "319": 0, "320": 0, "324": 0, "325": 0, "326": 0, "327": 0, "328": 0, "329": 0, "331": 0, "346": 0, "347": 0, "348": 0, "354": 0, "356": 0, "355": 0, "361": 0, "362": 0, "363": 0, "364": 0, "365": 0, "366": 0, "367": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "386": 0, "387": 0, "388": 0, "390": 0, "391": 0, "392": 0, "394": 0, "395": 0, "397": 0, "407": 0, "409": 0, "410": 0, "411": 0, "427": 0, "429": 0, "430": 0, "431": 0, "436": 0, "438": 0, "439": 0, "440": 0, "443": 0, "444": 0, "446": 0, "448": 0, "449": 0, "452": 0, "453": 0, "455": 0, "456": 0, "458": 0, "459": 0, "460": 0, "461": 0, "465": 0, "463": 0, "470": 0, "472": 0, "473": 0, "474": 0, "475": 0, "476": 0, "477": 0, "478": 0, "479": 0, "480": 0, "487": 0, "488": 0, "490": 0, "491": 0, "492": 0, "493": 0, "494": 0, "495": 0, "500": 0, "501": 0, "503": 0, "504": 0, "505": 0, "506": 0, "507": 0, "508": 0, "509": 0, "510": 0, "514": 0, "516": 0, "517": 0, "519": 0, "520": 0, "521": 0, "522": 0, "523": 0, "526": 0, "525": 0, "533": 1, "535": 2, "536": 1, "537": 0, "538": 0, "539": 0, "541": 3, "542": 2, "543": 2, "544": 2, "545": 0, "546": 0, "547": 0, "549": 0, "551": 1, "562": 1, "564": 1, "565": 1, "567": 1, "569": 1, "571": 0, "572": 0, "573": 0, "574": 0, "575": 0, "576": 0, "577": 0, "581": 0, "582": 0, "583": 0, "584": 0, "585": 0, "586": 0, "591": 0, "592": 0, "593": 0, "594": 0, "595": 0, "597": 0, "598": 0, "599": 0, "600": 0, "601": 0, "602": 0, "605": 0, "606": 0, "608": 0, "612": 0, "613": 0, "614": 0, "615": 0, "616": 0, "621": 0, "619": 0, "636": 1, "638": 2, "639": 5, "641": 5, "642": 3, "644": 3, "646": 9, "650": 4, "653": 5, "654": 0, "655": 0, "656": 0, "662": 0, "663": 0, "665": 0, "666": 0, "668": 0, "670": 0, "671": 0, "672": 0, "673": 0, "675": 0, "677": 0, "678": 0, "679": 0, "680": 0, "684": 0, "688": 0, "690": 0, "691": 0, "692": 0, "693": 0, "694": 0, "695": 0, "696": 0, "698": 0, "699": 0, "701": 0, "702": 0, "703": 0, "704": 0, "707": 0, "721": 0, "722": 0, "724": 0, "725": 0, "726": 0, "729": 1, "730": 0, "731": 0, "734": 1, "736": 1, "737": 1, "739": 0, "738": 0, "741": 0, "742": 0, "744": 0, "745": 0, "749": 1, "750": 2, "751": 3, "752": 1, "755": 1, "756": 2, "757": 1, "758": 1, "759": 0, "760": 0, "761": 0, "762": 0, "765": 1, "766": 3, "767": 2, "768": 0, "769": 0, "772": 0, "773": 0, "777": 1, "778": 1, "780": 1, "781": 1, "783": 0, "648": 3, "647": 3, "649": 2, "708": 0, "710": 0, "711": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "719": 0, "788": 0, "789": 0, "790": 0, "791": 0, "797": 0, "798": 0, "799": 0, "802": 0, "803": 0, "806": 0, "805": 0, "1057": 1, "1058": 1, "1059": 1, "1061": 1, "1062": 1, "1063": 0, "1064": 0, "1065": 0, "1067": 0, "1068": 0, "1071": 1, "1072": 1, "1074": 1, "1076": 1, "1077": 0, "1078": 0, "1079": 0, "1081": 0, "1082": 0, "1083": 0, "1085": 0, "1089": 1, "1090": 0, "1091": 0, "1093": 0, "1095": 0, "1096": 0, "1097": 0, "1099": 0, "1100": 0, "1102": 0, "1103": 0, "1104": 0, "1105": 0, "1108": 0, "1109": 0, "1111": 0, "1113": 1, "1114": 0, "1116": 1, "1117": 0, "1119": 1, "1120": 1, "1122": 2, "1123": 1, "1124": 1, "1125": 1, "1126": 1, "1127": 1, "1128": 1, "1129": 1, "1130": 1, "1131": 1, "1135": 5, "1136": 0, "1137": 0, "1138": 0, "1139": 0, "1140": 0, "1141": 0, "1142": 0, "1143": 0, "1144": 0, "1145": 0, "1146": 0, "1147": 0, "1148": 0, "1149": 0, "1151": 0, "1153": 5, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1161": 0, "1162": 0, "1165": 2, "1166": 4, "1167": 1, "1168": 1, "1169": 1, "1170": 1, "1171": 1, "1172": 1, "1175": 0, "1176": 0, "1179": 0, "1251": 0, "1253": 0, "1254": 0, "1255": 0, "1256": 0, "1259": 0, "1329": 0, "1331": 0, "1332": 0, "1333": 0, "1334": 0, "1337": 0, "1346": 0, "1349": 0, "1350": 0, "1351": 0, "1352": 0, "1355": 0, "1356": 0, "1362": 0, "1363": 0, "1366": 0, "1367": 0, "1371": 0, "1372": 0, "1373": 0, "1374": 0, "1515": 0, "1516": 0, "1517": 0, "1518": 0, "1520": 0, "1521": 0, "1522": 0, "1523": 0, "1525": 0, "1526": 0, "1527": 0, "1528": 0, "1531": 0, "1533": 0, "1538": 0, "1537": 0, "1539": 0, "1540": 0, "1541": 0, "1545": 0, "1546": 0, "1547": 0, "1548": 0, "1549": 0, "1550": 0, "1552": 0, "1557": 0, "1558": 0, "1560": 0, "1562": 0, "1564": 0, "1566": 0, "1567": 0, "1571": 0, "1572": 0, "1573": 0, "1574": 0, "1575": 0, "1576": 0, "1577": 0, "1578": 0, "1580": 0, "1582": 0, "1662": 0, "1663": 0, "1665": 0, "1666": 0, "1667": 0, "1668": 0, "1671": 0, "1672": 0, "1674": 0, "1675": 0, "1677": 0, "1678": 0, "1679": 0, "1680": 0, "1682": 0, "1683": 0, "1685": 0, "1686": 0, "1687": 0, "1689": 0, "1690": 0, "1691": 0, "1692": 0, "1694": 0, "1697": 0, "1698": 0, "1699": 0, "1701": 0, "1705": 0, "1706": 0, "1708": 0, "1709": 0, "1711": 0, "1713": 0, "1714": 0, "1718": 0, "1719": 0, "1720": 0, "1721": 0, "1722": 0, "1723": 0, "1724": 0, "1725": 0, "1727": 0, "1813": 1, "1814": 1, "1816": 1, "1819": 0, "1822": 2, "1823": 1, "1824": 1, "1825": 1, "1826": 1, "1827": 1, "1828": 1, "1829": 1, "1830": 1, "1851": 0, "1852": 0, "1854": 0, "1856": 0, "1858": 0, "1859": 0, "1860": 0, "1861": 0, "1863": 0, "1877": 0, "1878": 0, "1880": 0, "1881": 0, "1882": 0, "1884": 0, "1887": 0, "1889": 0, "1890": 0, "1891": 0, "1892": 0, "1895": 0, "1897": 0, "1899": 0, "1900": 0, "1903": 0, "1906": 0, "1907": 0, "1909": 0, "1910": 0, "1911": 0, "1913": 0, "1915": 0, "1917": 0, "1919": 0, "1921": 0, "1924": 0, "1926": 0, "1943": 0, "1946": 0, "1948": 0, "1952": 0, "1953": 0, "1954": 0, "1955": 0, "1956": 0, "1958": 0, "1959": 0, "1960": 0, "1961": 0, "1962": 0, "1964": 0, "1965": 0, "1966": 0, "1969": 0, "1970": 0, "1973": 0, "1975": 0, "1976": 0, "1977": 0, "1978": 0, "1979": 0, "1980": 0, "1981": 0, "1982": 0, "1984": 0, "1947": 0}}
+ git checkout d3b6aa6d8b997df115a53c001d00222a0f92f63a
M	xarray/core/computation.py
Note: switching to 'd3b6aa6d8b997df115a53c001d00222a0f92f63a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at d3b6aa6d unpin dask again (#6171)
+ git apply /root/pre_state.patch
error: unrecognized input
