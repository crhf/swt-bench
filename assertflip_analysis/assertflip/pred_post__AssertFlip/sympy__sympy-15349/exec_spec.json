{"instance_id": "sympy__sympy-15349", "repo": "sympy/sympy", "version": "1.4", "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004", "patch_list": ["diff --git a/sympy/algebras/quaternion.py b/sympy/algebras/quaternion.py\n--- a/sympy/algebras/quaternion.py\n+++ b/sympy/algebras/quaternion.py\n@@ -529,7 +529,7 @@ def to_rotation_matrix(self, v=None):\n \n         m10 = 2*s*(q.b*q.c + q.d*q.a)\n         m11 = 1 - 2*s*(q.b**2 + q.d**2)\n-        m12 = 2*s*(q.c*q.d + q.b*q.a)\n+        m12 = 2*s*(q.c*q.d - q.b*q.a)\n \n         m20 = 2*s*(q.b*q.d - q.c*q.a)\n         m21 = 2*s*(q.c*q.d + q.b*q.a)\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-15349.py\nnew file mode 100644\nindex e69de29..7b42996 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-15349.py\n@@ -0,0 +1,23 @@\n+from sympy.algebras.quaternion import Quaternion\n+from sympy import symbols, cos, sin, trigsimp, Matrix\n+\n+def test_quaternion_to_rotation_matrix_bug():\n+    # Define a symbolic variable\n+    x = symbols('x')\n+    \n+    # Create a quaternion with known parameters\n+    q = Quaternion(cos(x/2), sin(x/2), 0, 0)\n+    \n+    # Generate the rotation matrix using to_rotation_matrix()\n+    rotation_matrix = trigsimp(q.to_rotation_matrix())\n+    \n+    # Expected correct matrix after the bug is fixed\n+    expected_matrix = Matrix([\n+        [1, 0, 0],\n+        [0, cos(x), -sin(x)],  # Corrected: [0, cos(x), -sin(x)]\n+        [0, sin(x), cos(x)]    # Corrected: [0, sin(x), cos(x)]\n+    ])\n+    \n+    # Assert that the matrix matches the expected correct form\n+    assert rotation_matrix == expected_matrix, \"The rotation matrix does not match the expected correct form.\"\n+\n"], "arch": "x86_64", "base_commit": "768da1c6f6ec907524b8ebbf6bf818c92b56101b", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-15349.py"], "coverage_files": ["sympy/algebras/quaternion.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/algebras/quaternion\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-15349.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}