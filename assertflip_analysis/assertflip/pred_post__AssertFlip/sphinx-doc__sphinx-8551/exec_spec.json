{"instance_id": "sphinx-doc__sphinx-8551", "repo": "sphinx-doc/sphinx", "version": "3.4", "environment_setup_commit": "3f560cd67239f75840cc7a439ab54d8509c855f6", "patch_list": ["diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -272,6 +272,8 @@ def make_xref(self, rolename: str, domain: str, target: str,\n         result = super().make_xref(rolename, domain, target,  # type: ignore\n                                    innernode, contnode, env)\n         result['refspecific'] = True\n+        result['py:module'] = env.ref_context.get('py:module')\n+        result['py:class'] = env.ref_context.get('py:class')\n         if target.startswith(('.', '~')):\n             prefix, result['reftarget'] = target[0], target[1:]\n             if prefix == '.':\ndiff --git a/sphinx/util/docfields.py b/sphinx/util/docfields.py\n--- a/sphinx/util/docfields.py\n+++ b/sphinx/util/docfields.py\n@@ -295,6 +295,7 @@ def transform(self, node: nodes.field_list) -> None:\n                         self.directive.domain,\n                         target,\n                         contnode=content[0],\n+                        env=self.directive.state.document.settings.env\n                     )\n                     if _is_single_paragraph(field_body):\n                         paragraph = cast(nodes.paragraph, field_body[0])\n", "diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-8551.py\nnew file mode 100644\nindex e69de29..32f12f8 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-8551.py\n@@ -0,0 +1,57 @@\n+import pytest\n+from sphinx.application import Sphinx\n+from io import StringIO\n+import os\n+\n+@pytest.fixture\n+def sphinx_app(tmp_path):\n+    srcdir = tmp_path / \"src\"\n+    srcdir.mkdir()\n+    confdir = srcdir\n+    outdir = tmp_path / \"out\"\n+    doctreedir = tmp_path / \"doctree\"\n+    buildername = \"html\"\n+\n+    # Create a minimal conf.py file\n+    (confdir / \"conf.py\").write_text(\"\"\"\n+project = 'Test Project'\n+extensions = []\n+\"\"\")\n+\n+    # Create a mock documentation structure\n+    (srcdir / \"index.rst\").write_text(\"\"\"\n+    .. py:module:: mod\n+\n+    .. py:class:: A\n+\n+    .. py:module:: mod.submod\n+\n+    .. py:class:: A\n+\n+    .. py:function:: f()\n+\n+        :param A a: BUG: links to mod.A instead of mod.submod.A\n+        :rtype: A\n+    \"\"\")\n+\n+    app = Sphinx(\n+        srcdir=str(srcdir),\n+        confdir=str(confdir),\n+        outdir=str(outdir),\n+        doctreedir=str(doctreedir),\n+        buildername=buildername,\n+        warningiserror=False,\n+        status=None,\n+        warning=StringIO()\n+    )\n+    return app\n+\n+def test_ambiguous_class_lookup_warning(sphinx_app):\n+    sphinx_app.build()\n+\n+    # Capture the warnings from the build process\n+    warnings = sphinx_app._warning.getvalue()\n+\n+    # Check for the absence of warnings indicating ambiguous cross-references\n+    assert \"more than one target found for cross-reference 'A': mod.A, mod.submod.A\" not in warnings\n+    # The test should pass only when the bug is fixed and no warnings are present\n"], "arch": "x86_64", "base_commit": "57ed10c68057c96491acbd3e62254ccfaf9e3861", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-8551.py"], "coverage_files": ["sphinx/util/docfields.py", "sphinx/domains/python.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp/sphinxcontrib-htmlhelp<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml/sphinxcontrib-serializinghtml<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/util/docfields\\.py|sphinx/domains/python\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-8551.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}