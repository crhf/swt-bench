+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 22cdfb0c93f8ec78492d87edb810f10cb7f57a31
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit 22cdfb0c93f8ec78492d87edb810f10cb7f57a31
Author: Michael Waskom <mwaskom@users.noreply.github.com>
Date:   Sat Dec 10 11:06:39 2022 -0500

    Fix inner axis visibility in relplot with unshared axes (#3180)
    
    * Fix inner axis visibility in relplot with unshared axes
    
    * Don't reveal internal names when setting axis labels
    
    * Better test name

diff --git a/doc/whatsnew/v0.12.2.rst b/doc/whatsnew/v0.12.2.rst
index da1d8b81..8eeb8f19 100644
--- a/doc/whatsnew/v0.12.2.rst
+++ b/doc/whatsnew/v0.12.2.rst
@@ -9,3 +9,5 @@ v0.12.2 (Unreleased)
 - |Fix| Fixed a regression in v0.12.0 where manually-added labels could have duplicate legend entries (:pr:`3116`).
 
 - |Fix| Fixed a bug in :func:`histplot` with `kde=True` and `log_scale=True` where the curve was not scaled properly (:pr:`3173`).
+
+- |Fix| Fixed a bug in :func:`relplot` where inner axis labels would be shown when axis sharing was disabled (:pr:`3180`).
diff --git a/seaborn/relational.py b/seaborn/relational.py
index 4fa854a6..18e18bb6 100644
--- a/seaborn/relational.py
+++ b/seaborn/relational.py
@@ -955,7 +955,8 @@ def relplot(
     g.map_dataframe(func, **plot_kws)
 
     # Label the axes, using the original variables
-    g.set(xlabel=variables.get("x"), ylabel=variables.get("y"))
+    # Pass "" when the variable name is None to overwrite internal variables
+    g.set_axis_labels(variables.get("x") or "", variables.get("y") or "")
 
     # Show the legend
     if legend:
diff --git a/tests/test_relational.py b/tests/test_relational.py
index eee12e25..b100f4ec 100644
--- a/tests/test_relational.py
+++ b/tests/test_relational.py
@@ -624,6 +624,23 @@ class TestRelationalPlotter(Helpers):
         for line, color in zip(lines, palette):
             assert line.get_color() == color
 
+    def test_relplot_unshared_axis_labels(self, long_df):
+
+        col, row = "a", "b"
+        g = relplot(
+            data=long_df, x="x", y="y", col=col, row=row,
+            facet_kws=dict(sharex=False, sharey=False),
+        )
+
+        for ax in g.axes[-1, :].flat:
+            assert ax.get_xlabel() == "x"
+        for ax in g.axes[:-1, :].flat:
+            assert ax.get_xlabel() == ""
+        for ax in g.axes[:, 0].flat:
+            assert ax.get_ylabel() == "y"
+        for ax in g.axes[:, 1:].flat:
+            assert ax.get_ylabel() == ""
+
     def test_relplot_data(self, long_df):
 
         g = relplot(
+ git diff 22cdfb0c93f8ec78492d87edb810f10cb7f57a31
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e '.[dev]'
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy>=1.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (1.25.2)
Requirement already satisfied: pandas>=0.25 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (2.0.0)
Requirement already satisfied: matplotlib!=3.6.1,>=3.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (3.7.2)
Requirement already satisfied: pytest in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (8.4.1)
Requirement already satisfied: pytest-cov in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (6.2.1)
Requirement already satisfied: pytest-xdist in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (3.8.0)
Requirement already satisfied: flake8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (7.3.0)
Requirement already satisfied: mypy in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (1.17.1)
Requirement already satisfied: pandas-stubs in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (2.2.2.240807)
Requirement already satisfied: pre-commit in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (4.3.0)
Requirement already satisfied: flit in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from seaborn==0.12.2.dev0) (3.12.0)
Requirement already satisfied: contourpy>=1.0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (1.1.0)
Requirement already satisfied: cycler>=0.10 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (0.11.0)
Requirement already satisfied: fonttools>=4.22.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (4.42.1)
Requirement already satisfied: kiwisolver>=1.0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (1.4.5)
Requirement already satisfied: packaging>=20.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (23.1)
Requirement already satisfied: pillow>=6.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (10.0.0)
Requirement already satisfied: pyparsing<3.1,>=2.3.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (3.0.9)
Requirement already satisfied: python-dateutil>=2.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (2.8.2)
Requirement already satisfied: importlib-resources>=3.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (6.0.1)
Requirement already satisfied: zipp>=3.1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from importlib-resources>=3.2.0->matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (3.16.2)
Requirement already satisfied: pytz>=2020.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pandas>=0.25->seaborn==0.12.2.dev0) (2023.3.post1)
Requirement already satisfied: tzdata>=2022.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pandas>=0.25->seaborn==0.12.2.dev0) (2023.1)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.1->seaborn==0.12.2.dev0) (1.16.0)
Requirement already satisfied: mccabe<0.8.0,>=0.7.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flake8->seaborn==0.12.2.dev0) (0.7.0)
Requirement already satisfied: pycodestyle<2.15.0,>=2.14.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flake8->seaborn==0.12.2.dev0) (2.14.0)
Requirement already satisfied: pyflakes<3.5.0,>=3.4.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flake8->seaborn==0.12.2.dev0) (3.4.0)
Requirement already satisfied: flit_core>=3.12.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flit->seaborn==0.12.2.dev0) (3.12.0)
Requirement already satisfied: requests in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flit->seaborn==0.12.2.dev0) (2.32.5)
Requirement already satisfied: docutils in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flit->seaborn==0.12.2.dev0) (0.22)
Requirement already satisfied: tomli-w in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flit->seaborn==0.12.2.dev0) (1.2.0)
Requirement already satisfied: pip in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from flit->seaborn==0.12.2.dev0) (25.1)
Requirement already satisfied: typing_extensions>=4.6.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from mypy->seaborn==0.12.2.dev0) (4.14.1)
Requirement already satisfied: mypy_extensions>=1.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from mypy->seaborn==0.12.2.dev0) (1.1.0)
Requirement already satisfied: pathspec>=0.9.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from mypy->seaborn==0.12.2.dev0) (0.12.1)
Requirement already satisfied: tomli>=1.1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from mypy->seaborn==0.12.2.dev0) (2.2.1)
Requirement already satisfied: types-pytz>=2022.1.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pandas-stubs->seaborn==0.12.2.dev0) (2025.2.0.20250809)
Requirement already satisfied: cfgv>=2.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pre-commit->seaborn==0.12.2.dev0) (3.4.0)
Requirement already satisfied: identify>=1.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pre-commit->seaborn==0.12.2.dev0) (2.6.13)
Requirement already satisfied: nodeenv>=0.11.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pre-commit->seaborn==0.12.2.dev0) (1.9.1)
Requirement already satisfied: pyyaml>=5.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pre-commit->seaborn==0.12.2.dev0) (6.0.2)
Requirement already satisfied: virtualenv>=20.10.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pre-commit->seaborn==0.12.2.dev0) (20.34.0)
Requirement already satisfied: distlib<1,>=0.3.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from virtualenv>=20.10.0->pre-commit->seaborn==0.12.2.dev0) (0.4.0)
Requirement already satisfied: filelock<4,>=3.12.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from virtualenv>=20.10.0->pre-commit->seaborn==0.12.2.dev0) (3.19.1)
Requirement already satisfied: platformdirs<5,>=3.9.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from virtualenv>=20.10.0->pre-commit->seaborn==0.12.2.dev0) (4.3.8)
Requirement already satisfied: exceptiongroup>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->seaborn==0.12.2.dev0) (1.3.0)
Requirement already satisfied: iniconfig>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->seaborn==0.12.2.dev0) (2.1.0)
Requirement already satisfied: pluggy<2,>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->seaborn==0.12.2.dev0) (1.6.0)
Requirement already satisfied: pygments>=2.7.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->seaborn==0.12.2.dev0) (2.19.2)
Requirement already satisfied: coverage>=7.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from coverage[toml]>=7.5->pytest-cov->seaborn==0.12.2.dev0) (7.10.5)
Requirement already satisfied: execnet>=2.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-xdist->seaborn==0.12.2.dev0) (2.1.1)
Requirement already satisfied: charset_normalizer<4,>=2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests->flit->seaborn==0.12.2.dev0) (3.4.3)
Requirement already satisfied: idna<4,>=2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests->flit->seaborn==0.12.2.dev0) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests->flit->seaborn==0.12.2.dev0) (2.5.0)
Requirement already satisfied: certifi>=2017.4.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests->flit->seaborn==0.12.2.dev0) (2025.8.3)
Building wheels for collected packages: seaborn
  Building editable for seaborn (pyproject.toml): started
  Building editable for seaborn (pyproject.toml): finished with status 'done'
  Created wheel for seaborn: filename=seaborn-0.12.2.dev0-py3-none-any.whl size=3956 sha256=ef622b56aab54dcad40115688334e9112a5b00df90fabbb135070366483ef736
  Stored in directory: /tmp/pip-ephem-wheel-cache-hd9in83j/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built seaborn
Installing collected packages: seaborn
  Attempting uninstall: seaborn
    Found existing installation: seaborn 0.12.2.dev0
    Uninstalling seaborn-0.12.2.dev0:
      Successfully uninstalled seaborn-0.12.2.dev0
Successfully installed seaborn-0.12.2.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch seaborn/_core/scales.py...
Checking patch seaborn/utils.py...
Applied patch seaborn/_core/scales.py cleanly.
Applied patch seaborn/utils.py cleanly.
+ git apply -v -
Checking patch tests/test_coverup_mwaskom__seaborn-3187.py...
Applied patch tests/test_coverup_mwaskom__seaborn-3187.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(seaborn/_core/scales\.py|seaborn/utils\.py)' -m pytest --no-header -rA tests/test_coverup_mwaskom__seaborn-3187.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(seaborn/_core/scales\\.py|seaborn/utils\\.py)']
============================= test session starts ==============================
collected 1 item

tests/test_coverup_mwaskom__seaborn-3187.py F                            [100%]

=================================== FAILURES ===================================
________________________ test_legend_values_with_offset ________________________

    def test_legend_values_with_offset():
        # Set matplotlib rcParams to use offset
        mpl.rcParams['axes.formatter.useoffset'] = True
    
        # Load dataset and create a column with large values
        penguins = sns.load_dataset("penguins")
        penguins["body_mass_mg"] = penguins["body_mass_g"] * 1000
    
        # Create a plot using seaborn with the large values column affecting the legend
        ax = sns.scatterplot(
            data=penguins, x="bill_length_mm", y="bill_depth_mm",
            hue="species", size="body_mass_mg", legend="full"
        )
    
        # Retrieve the legend from the plot
        legend = ax.get_legend()
    
        # Check the legend values to confirm they include the offset
        if legend is not None:
            labels = [text.get_text() for text in legend.get_texts()]
            # The legend values should include the offset
>           assert all('e' in label for label in labels), "Legend values do not include offset notation"
E           AssertionError: Legend values do not include offset notation
E           assert False
E            +  where False = all(<generator object test_legend_values_with_offset.<locals>.<genexpr> at 0x7f2fdeb01eb0>)

tests/test_coverup_mwaskom__seaborn-3187.py:27: AssertionError
----------------------------- Captured stdout call -----------------------------
1.89 /testbed/seaborn/utils.py(573):     if isinstance(name, pd.DataFrame):
1.89 /testbed/seaborn/utils.py(581):     url = f"https://raw.githubusercontent.com/mwaskom/seaborn-data/master/{name}.csv"
1.89 /testbed/seaborn/utils.py(583):     if cache:
1.89 /testbed/seaborn/utils.py(584):         cache_path = os.path.join(get_data_home(data_home), os.path.basename(url))
1.89 /testbed/seaborn/utils.py(530):     if data_home is None:
1.89 /testbed/seaborn/utils.py(531):         data_home = os.environ.get("SEABORN_DATA", user_cache_dir("seaborn"))
1.89 /testbed/seaborn/utils.py(532):     data_home = os.path.expanduser(data_home)
1.89 /testbed/seaborn/utils.py(533):     if not os.path.exists(data_home):
1.89 /testbed/seaborn/utils.py(534):         os.makedirs(data_home)
1.89 /testbed/seaborn/utils.py(535):     return data_home
1.89 /testbed/seaborn/utils.py(585):         if not os.path.exists(cache_path):
1.89 /testbed/seaborn/utils.py(586):             if name not in get_dataset_names():
1.89 /testbed/seaborn/utils.py(511):     url = "https://github.com/mwaskom/seaborn-data"
1.89 /testbed/seaborn/utils.py(512):     with urlopen(url) as resp:
2.42 /testbed/seaborn/utils.py(513):         html = resp.read()
2.43 /testbed/seaborn/utils.py(515):     pat = r"/mwaskom/seaborn-data/blob/master/(\w*).csv"
2.43 /testbed/seaborn/utils.py(516):     datasets = re.findall(pat, html.decode())
2.43 /testbed/seaborn/utils.py(517):     return datasets
2.43 /testbed/seaborn/utils.py(588):             urlretrieve(url, cache_path)
2.47 /testbed/seaborn/utils.py(589):         full_path = cache_path
2.47 /testbed/seaborn/utils.py(593):     df = pd.read_csv(full_path, **kws)
2.47 /testbed/seaborn/utils.py(595):     if df.iloc[-1].isnull().all():
2.47 /testbed/seaborn/utils.py(600):     if name == "tips":
2.47 /testbed/seaborn/utils.py(606):     elif name == "flights":
2.47 /testbed/seaborn/utils.py(610):     elif name == "exercise":
2.47 /testbed/seaborn/utils.py(615):     elif name == "titanic":
2.47 /testbed/seaborn/utils.py(619):     elif name == "penguins":
2.47 /testbed/seaborn/utils.py(620):         df["sex"] = df["sex"].str.title()
2.47 /testbed/seaborn/utils.py(643):     return df
2.48 /testbed/seaborn/utils.py(294):     cycler = mpl.rcParams['axes.prop_cycle']
2.48 /testbed/seaborn/utils.py(295):     return cycler.by_key()['color'] if 'color' in cycler.keys else [".15"]
2.48 /testbed/seaborn/utils.py(294):     cycler = mpl.rcParams['axes.prop_cycle']
2.48 /testbed/seaborn/utils.py(295):     return cycler.by_key()['color'] if 'color' in cycler.keys else [".15"]
2.48 /testbed/seaborn/utils.py(278):     return vector[pd.notnull(vector)]
2.48 /testbed/seaborn/utils.py(294):     cycler = mpl.rcParams['axes.prop_cycle']
2.48 /testbed/seaborn/utils.py(295):     return cycler.by_key()['color'] if 'color' in cycler.keys else [".15"]
2.48 /testbed/seaborn/utils.py(294):     cycler = mpl.rcParams['axes.prop_cycle']
2.48 /testbed/seaborn/utils.py(295):     return cycler.by_key()['color'] if 'color' in cycler.keys else [".15"]
2.48 /testbed/seaborn/utils.py(278):     return vector[pd.notnull(vector)]
2.51 /testbed/seaborn/utils.py(91):     if hue is not None:
2.51 /testbed/seaborn/utils.py(97):         return None
2.76 /testbed/seaborn/utils.py(823):     font_size = plt.rcParams.get("legend.title_fontsize", None)
2.76 /testbed/seaborn/utils.py(824):     hpackers = legend.findobj(mpl.offsetbox.VPacker)[0].get_children()
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(829):             draw_area.set_width(0)
2.76 /testbed/seaborn/utils.py(830):             for text in text_area.get_children():
2.76 /testbed/seaborn/utils.py(831):                 if font_size is not None:
2.76 /testbed/seaborn/utils.py(830):             for text in text_area.get_children():
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(829):             draw_area.set_width(0)
2.76 /testbed/seaborn/utils.py(830):             for text in text_area.get_children():
2.76 /testbed/seaborn/utils.py(831):                 if font_size is not None:
2.76 /testbed/seaborn/utils.py(830):             for text in text_area.get_children():
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.76 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.76 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.76 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
2.77 /testbed/seaborn/utils.py(826):         draw_area, text_area = hpack.get_children()
2.77 /testbed/seaborn/utils.py(827):         handles = draw_area.get_children()
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(828):         if not all(artist.get_visible() for artist in handles):
2.77 /testbed/seaborn/utils.py(825):     for hpack in hpackers:
=============================== warnings summary ===============================
tests/test_coverup_mwaskom__seaborn-3187.py::test_legend_values_with_offset
  /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pandas/core/dtypes/cast.py:1429: DeprecationWarning: np.find_common_type is deprecated.  Please use `np.result_type` or `np.promote_types`.
  See https://numpy.org/devdocs/release/1.25.0-notes.html and the docs for more information.  (Deprecated NumPy 1.25)
    return np.find_common_type(types, [])

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_coverup_mwaskom__seaborn-3187.py::test_legend_values_with_offset
========================= 1 failed, 1 warning in 2.44s =========================
+ cat coverage.cover
{"/testbed/seaborn/utils.py": {"2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "17": 1, "18": 1, "20": 1, "24": 1, "54": 1, "77": 1, "88": 1, "172": 1, "207": 1, "224": 1, "251": 1, "264": 1, "281": 1, "298": 1, "400": 1, "490": 1, "499": 1, "505": 1, "520": 1, "538": 1, "646": 1, "670": 1, "687": 1, "717": 1, "739": 1, "768": 1, "788": 1, "796": 1, "815": 1, "835": 1, "860": 1, "861": 1, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "50": 0, "51": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "71": 0, "70": 0, "73": 0, "74": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "91": 1, "97": 1, "99": 0, "100": 0, "102": 0, "103": 0, "105": 0, "107": 0, "108": 0, "109": 0, "110": 0, "112": 0, "116": 0, "118": 0, "120": 0, "122": 0, "123": 0, "125": 0, "131": 0, "133": 0, "136": 0, "137": 0, "139": 0, "141": 0, "144": 0, "145": 0, "146": 0, "148": 0, "154": 0, "155": 0, "156": 0, "157": 0, "159": 0, "160": 0, "162": 0, "164": 0, "165": 0, "166": 0, "167": 0, "169": 0, "117": 0, "189": 0, "190": 0, "193": 0, "196": 0, "199": 0, "202": 0, "204": 0, "221": 0, "241": 0, "242": 0, "243": 0, "244": 0, "245": 0, "247": 0, "248": 0, "257": 0, "258": 0, "259": 0, "260": 0, "261": 0, "278": 2, "294": 4, "295": 4, "323": 0, "324": 0, "325": 0, "326": 0, "327": 0, "328": 0, "330": 0, "331": 0, "333": 0, "334": 0, "335": 0, "336": 0, "337": 0, "338": 0, "339": 0, "340": 0, "343": 0, "344": 0, "346": 0, "348": 0, "350": 0, "352": 0, "353": 0, "354": 0, "355": 0, "356": 0, "358": 0, "359": 0, "361": 0, "363": 0, "365": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "373": 0, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "387": 0, "388": 0, "389": 0, "390": 0, "391": 0, "392": 0, "393": 0, "394": 0, "395": 0, "396": 0, "397": 0, "345": 0, "349": 0, "360": 0, "364": 0, "432": 0, "435": 0, "436": 0, "437": 0, "438": 0, "439": 0, "440": 0, "441": 0, "442": 0, "443": 0, "445": 0, "446": 0, "448": 0, "449": 0, "451": 0, "452": 0, "453": 0, "456": 0, "457": 0, "461": 0, "462": 0, "465": 0, "468": 0, "469": 0, "470": 0, "471": 0, "472": 0, "473": 0, "474": 0, "477": 0, "480": 0, "481": 0, "482": 0, "483": 0, "486": 0, "487": 0, "492": 0, "493": 0, "494": 0, "496": 0, "501": 0, "502": 0, "511": 1, "512": 1, "513": 1, "515": 1, "516": 1, "517": 1, "530": 1, "531": 1, "532": 1, "533": 1, "534": 1, "535": 1, "573": 1, "575": 0, "574": 0, "579": 0, "581": 1, "583": 1, "584": 1, "585": 1, "586": 1, "587": 0, "588": 1, "589": 1, "591": 0, "593": 1, "595": 1, "596": 0, "600": 1, "601": 0, "602": 0, "603": 0, "604": 0, "606": 1, "607": 0, "608": 0, "610": 1, "611": 0, "612": 0, "613": 0, "615": 1, "616": 0, "617": 0, "619": 1, "620": 1, "622": 0, "623": 0, "624": 0, "626": 0, "627": 0, "629": 0, "630": 0, "633": 0, "634": 0, "635": 0, "637": 0, "638": 0, "640": 0, "641": 0, "643": 1, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "665": 0, "667": 0, "683": 0, "684": 0, "689": 0, "692": 0, "694": 0, "698": 0, "699": 0, "701": 0, "704": 0, "705": 0, "706": 0, "711": 0, "712": 0, "714": 0, "695": 0, "696": 0, "730": 0, "731": 0, "732": 0, "733": 0, "734": 0, "735": 0, "736": 0, "760": 0, "761": 0, "762": 0, "763": 0, "764": 0, "765": 0, "771": 0, "772": 0, "773": 0, "774": 0, "775": 0, "776": 0, "777": 0, "778": 0, "779": 0, "770": 0, "781": 0, "782": 0, "783": 0, "784": 0, "785": 0, "790": 0, "791": 0, "792": 0, "805": 0, "806": 0, "808": 0, "809": 0, "810": 0, "812": 0, "823": 1, "824": 1, "825": 100, "826": 99, "827": 99, "828": 295, "829": 2, "830": 4, "831": 2, "832": 0, "844": 0, "845": 0, "846": 0, "847": 0, "848": 0, "850": 0, "852": 0, "853": 0, "851": 0, "855": 0, "857": 0, "871": 0, "872": 0, "873": 0, "874": 0, "876": 0}}
{"/testbed/seaborn/_core/scales.py": {"1": 1, "2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "9": 1, "10": 1, "11": 1, "28": 1, "33": 1, "34": 1, "35": 1, "37": 1, "38": 1, "40": 1, "41": 1, "42": 0, "43": 0, "45": 0, "46": 0, "51": 0, "54": 2, "143": 2, "144": 1, "304": 2, "305": 1, "310": 2, "311": 1, "316": 2, "317": 1, "428": 2, "429": 1, "663": 2, "664": 1, "791": 2, "901": 1, "909": 1, "924": 1, "949": 1, "969": 1, "980": 1, "57": 1, "59": 1, "60": 1, "61": 1, "62": 1, "63": 1, "65": 1, "71": 1, "74": 1, "77": 1, "80": 1, "83": 1, "97": 1, "105": 1, "110": 1, "131": 1, "132": 1, "67": 0, "68": 0, "69": 0, "72": 0, "75": 0, "78": 0, "81": 0, "85": 0, "86": 0, "88": 0, "95": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "98": 0, "99": 0, "102": 0, "103": 0, "108": 0, "116": 0, "117": 0, "118": 0, "120": 0, "122": 0, "123": 0, "124": 0, "126": 0, "127": 0, "129": 0, "134": 0, "140": 0, "135": 0, "136": 0, "137": 0, "138": 0, "150": 1, "151": 1, "153": 1, "155": 1, "236": 1, "260": 1, "285": 1, "294": 1, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "166": 0, "168": 0, "182": 0, "192": 0, "193": 0, "194": 0, "199": 0, "201": 0, "206": 0, "209": 0, "221": 0, "222": 0, "220": 0, "226": 0, "229": 0, "231": 0, "232": 0, "234": 0, "183": 0, "185": 0, "186": 0, "215": 0, "216": 0, "217": 0, "218": 0, "227": 0, "254": 0, "256": 0, "255": 0, "258": 0, "279": 0, "281": 0, "280": 0, "283": 0, "287": 0, "288": 0, "290": 0, "292": 0, "296": 0, "297": 0, "299": 0, "301": 0, "307": 1, "313": 1, "319": 1, "320": 1, "322": 1, "394": 1, "326": 0, "327": 0, "328": 0, "329": 0, "330": 0, "332": 0, "334": 0, "336": 0, "337": 0, "338": 0, "340": 0, "341": 0, "344": 0, "345": 0, "346": 0, "348": 0, "349": 0, "350": 0, "351": 0, "353": 0, "357": 0, "360": 0, "361": 0, "362": 0, "363": 0, "359": 0, "366": 0, "371": 0, "377": 0, "378": 0, "379": 0, "380": 0, "385": 0, "386": 0, "387": 0, "388": 0, "389": 0, "390": 0, "392": 0, "354": 0, "367": 0, "368": 0, "369": 0, "370": 0, "396": 0, "398": 0, "403": 0, "404": 0, "405": 0, "406": 0, "407": 0, "408": 0, "409": 0, "410": 0, "411": 0, "412": 0, "413": 0, "414": 0, "415": 0, "416": 0, "417": 0, "418": 0, "419": 0, "420": 0, "421": 0, "422": 0, "423": 0, "425": 0, "399": 0, "400": 0, "401": 0, "433": 1, "434": 1, "439": 1, "441": 2, "444": 1, "445": 1, "446": 1, "447": 1, "448": 1, "449": 1, "502": 2, "505": 1, "506": 1, "507": 1, "553": 1, "567": 1, "623": 1, "478": 0, "479": 0, "480": 0, "481": 0, "483": 0, "484": 0, "485": 0, "486": 0, "487": 0, "488": 0, "490": 0, "492": 0, "493": 0, "494": 0, "495": 0, "496": 0, "497": 0, "498": 0, "491": 0, "500": 0, "535": 0, "536": 0, "537": 0, "538": 0, "540": 0, "541": 0, "542": 0, "544": 0, "546": 0, "547": 0, "548": 0, "549": 0, "545": 0, "551": 0, "557": 0, "558": 0, "559": 0, "560": 0, "561": 0, "562": 0, "563": 0, "564": 0, "565": 0, "569": 0, "571": 0, "572": 0, "574": 0, "575": 0, "576": 0, "578": 0, "580": 0, "581": 0, "583": 0, "585": 0, "586": 0, "587": 0, "588": 0, "590": 0, "591": 0, "593": 0, "594": 0, "595": 0, "597": 0, "598": 0, "599": 0, "601": 0, "602": 0, "605": 0, "606": 0, "607": 0, "608": 0, "610": 0, "612": 0, "613": 0, "615": 0, "616": 0, "617": 0, "619": 0, "621": 0, "625": 0, "626": 0, "627": 0, "628": 0, "629": 0, "631": 0, "632": 0, "634": 0, "635": 0, "636": 0, "637": 0, "639": 0, "640": 0, "642": 0, "644": 0, "646": 0, "648": 0, "649": 0, "650": 0, "651": 0, "652": 0, "654": 0, "655": 0, "658": 0, "660": 0, "678": 1, "680": 1, "682": 2, "684": 1, "716": 2, "719": 1, "745": 1, "758": 1, "705": 0, "707": 0, "708": 0, "706": 0, "710": 0, "712": 0, "713": 0, "714": 0, "741": 0, "742": 0, "743": 0, "747": 0, "748": 0, "749": 0, "750": 0, "753": 0, "754": 0, "756": 0, "760": 0, "761": 0, "763": 0, "766": 0, "768": 0, "770": 0, "801": 1, "803": 1, "818": 1, "821": 1, "829": 1, "832": 1, "835": 1, "840": 1, "844": 1, "848": 1, "852": 1, "856": 1, "859": 1, "877": 1, "885": 1, "893": 1, "805": 0, "806": 0, "807": 0, "808": 0, "809": 0, "813": 0, "815": 0, "819": 0, "822": 0, "830": 0, "833": 0, "838": 0, "841": 0, "842": 0, "845": 0, "846": 0, "849": 0, "850": 0, "853": 0, "854": 0, "857": 0, "861": 0, "862": 0, "863": 0, "865": 0, "867": 0, "868": 0, "869": 0, "870": 0, "871": 0, "872": 0, "879": 0, "880": 0, "881": 0, "882": 0, "883": 0, "891": 0, "894": 0, "903": 0, "906": 0, "904": 0, "911": 0, "913": 0, "917": 0, "921": 0, "914": 0, "915": 0, "918": 0, "919": 0, "927": 0, "928": 0, "929": 0, "930": 0, "931": 0, "932": 0, "934": 0, "936": 0, "938": 0, "942": 0, "946": 0, "935": 0, "939": 0, "940": 0, "943": 0, "944": 0, "956": 0, "958": 0, "962": 0, "966": 0, "959": 0, "960": 0, "963": 0, "964": 0, "971": 0, "974": 0, "977": 0, "972": 0, "975": 0, "982": 0, "985": 0, "988": 0, "983": 0, "986": 0}}
+ git checkout 22cdfb0c93f8ec78492d87edb810f10cb7f57a31
M	seaborn/_core/scales.py
M	seaborn/utils.py
Note: switching to '22cdfb0c93f8ec78492d87edb810f10cb7f57a31'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 22cdfb0c Fix inner axis visibility in relplot with unshared axes (#3180)
+ git apply /root/pre_state.patch
error: unrecognized input
