{"instance_id": "sympy__sympy-13757", "repo": "sympy/sympy", "version": "1.1", "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3", "patch_list": ["diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -106,6 +106,7 @@ class Poly(Expr):\n \n     is_commutative = True\n     is_Poly = True\n+    _op_priority = 10.001\n \n     def __new__(cls, rep, *gens, **args):\n         \"\"\"Create a new polynomial instance out of something useful. \"\"\"\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-13757.py\nnew file mode 100644\nindex e69de29..d8974f0 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-13757.py\n@@ -0,0 +1,9 @@\n+from sympy import symbols, Poly\n+\n+x = symbols('x')\n+\n+def test_multiply_expression_by_poly():\n+    # Multiplying a symbolic expression by a Poly with the expression on the left\n+    result = x * Poly(x)\n+    # Correct behavior should be a Poly object representing x**2\n+    assert str(result) == \"Poly(x**2, x, domain='ZZ')\"\n"], "arch": "x86_64", "base_commit": "a5e6a101869e027e7930e694f8b1cfb082603453", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-13757.py"], "coverage_files": ["sympy/polys/polytools.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/polys/polytools\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-13757.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}