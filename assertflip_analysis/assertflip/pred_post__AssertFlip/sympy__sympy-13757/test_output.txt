+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD a5e6a101869e027e7930e694f8b1cfb082603453
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit a5e6a101869e027e7930e694f8b1cfb082603453
Merge: 8a3956d911 82317ab2d0
Author: Kalevi Suominen <jksuom@gmail.com>
Date:   Sat Dec 16 10:52:36 2017 +0200

    Merge pull request #13678 from symbolique/master
    
    Fix is_real for trigonometric and hyperbolic functions

+ git diff a5e6a101869e027e7930e694f8b1cfb082603453
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.1.2.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.1.2.dev0
    Uninstalling sympy-1.1.2.dev0:
      Successfully uninstalled sympy-1.1.2.dev0
  DEPRECATION: Legacy editable install of sympy==1.1.2.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch sympy/polys/polytools.py...
Applied patch sympy/polys/polytools.py cleanly.
+ git apply -v -
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-13757.py...
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-13757.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/polys/polytools\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-13757.p
/testbed/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping, defaultdict
/testbed/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  class OrderedSet(collections.MutableSet):
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/polys/polytools\\.py)']
0.32 /testbed/sympy/polys/polytools.py(1): """User-friendly public interface to polynomial functions. """
0.32 /testbed/sympy/polys/polytools.py(3): from __future__ import print_function, division
0.32 /testbed/sympy/polys/polytools.py(5): from sympy.core import (
0.32 /testbed/sympy/polys/polytools.py(9): from sympy.core.mul import _keep_coeff
0.32 /testbed/sympy/polys/polytools.py(10): from sympy.core.symbol import Symbol
0.32 /testbed/sympy/polys/polytools.py(11): from sympy.core.basic import preorder_traversal
0.32 /testbed/sympy/polys/polytools.py(12): from sympy.core.relational import Relational
0.32 /testbed/sympy/polys/polytools.py(13): from sympy.core.sympify import sympify
0.32 /testbed/sympy/polys/polytools.py(14): from sympy.core.decorators import _sympifyit
0.32 /testbed/sympy/polys/polytools.py(15): from sympy.core.function import Derivative
0.32 /testbed/sympy/polys/polytools.py(17): from sympy.logic.boolalg import BooleanAtom
0.32 /testbed/sympy/polys/polytools.py(19): from sympy.polys.polyclasses import DMP
0.39 /testbed/sympy/polys/polytools.py(21): from sympy.polys.polyutils import (
0.39 /testbed/sympy/polys/polytools.py(30): from sympy.polys.rationaltools import together
0.39 /testbed/sympy/polys/polytools.py(31): from sympy.polys.rootisolation import dup_isolate_real_roots_list
0.39 /testbed/sympy/polys/polytools.py(32): from sympy.polys.groebnertools import groebner as _groebner
0.40 /testbed/sympy/polys/polytools.py(33): from sympy.polys.fglmtools import matrix_fglm
0.40 /testbed/sympy/polys/polytools.py(34): from sympy.polys.monomials import Monomial
0.40 /testbed/sympy/polys/polytools.py(35): from sympy.polys.orderings import monomial_key
0.40 /testbed/sympy/polys/polytools.py(37): from sympy.polys.polyerrors import (
0.40 /testbed/sympy/polys/polytools.py(48): from sympy.utilities import group, sift, public, filldedent
0.40 /testbed/sympy/polys/polytools.py(50): import sympy.polys
0.40 /testbed/sympy/polys/polytools.py(51): import mpmath
0.40 /testbed/sympy/polys/polytools.py(52): from mpmath.libmp.libhyper import NoConvergence
0.40 /testbed/sympy/polys/polytools.py(54): from sympy.polys.domains import FF, QQ, ZZ
0.50 /testbed/sympy/polys/polytools.py(55): from sympy.polys.constructor import construct_domain
0.50 /testbed/sympy/polys/polytools.py(57): from sympy.polys import polyoptions as options
0.50 /testbed/sympy/polys/polytools.py(59): from sympy.core.compatibility import iterable, range, ordered
0.50 /testbed/sympy/polys/polytools.py(61): @public
0.50 /testbed/sympy/polys/polytools.py(62): class Poly(Expr):
0.50 /testbed/sympy/polys/polytools.py(61): @public
0.50 /testbed/sympy/polys/polytools.py(63):     """
0.50 /testbed/sympy/polys/polytools.py(105):     __slots__ = ['rep', 'gens']
0.50 /testbed/sympy/polys/polytools.py(107):     is_commutative = True
0.50 /testbed/sympy/polys/polytools.py(108):     is_Poly = True
0.50 /testbed/sympy/polys/polytools.py(109):     _op_priority = 10.001
0.50 /testbed/sympy/polys/polytools.py(111):     def __new__(cls, rep, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(131):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(132):     def new(cls, rep, *gens):
0.50 /testbed/sympy/polys/polytools.py(147):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(148):     def from_dict(cls, rep, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(153):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(154):     def from_list(cls, rep, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(159):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(160):     def from_poly(cls, rep, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(165):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(166):     def from_expr(cls, rep, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(171):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(172):     def _from_dict(cls, rep, opt):
0.50 /testbed/sympy/polys/polytools.py(191):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(192):     def _from_list(cls, rep, opt):
0.50 /testbed/sympy/polys/polytools.py(213):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(214):     def _from_poly(cls, rep, opt):
0.50 /testbed/sympy/polys/polytools.py(236):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(237):     def _from_expr(cls, rep, opt):
0.50 /testbed/sympy/polys/polytools.py(242):     def _hashable_content(self):
0.50 /testbed/sympy/polys/polytools.py(246):     def __hash__(self):
0.50 /testbed/sympy/polys/polytools.py(249):     @property
0.50 /testbed/sympy/polys/polytools.py(250):     def free_symbols(self):
0.50 /testbed/sympy/polys/polytools.py(280):     @property
0.50 /testbed/sympy/polys/polytools.py(281):     def free_symbols_in_domain(self):
0.50 /testbed/sympy/polys/polytools.py(310):     @property
0.50 /testbed/sympy/polys/polytools.py(311):     def args(self):
0.50 /testbed/sympy/polys/polytools.py(327):     @property
0.50 /testbed/sympy/polys/polytools.py(328):     def gen(self):
0.50 /testbed/sympy/polys/polytools.py(344):     @property
0.50 /testbed/sympy/polys/polytools.py(345):     def domain(self):
0.50 /testbed/sympy/polys/polytools.py(349):     @property
0.50 /testbed/sympy/polys/polytools.py(350):     def zero(self):
0.50 /testbed/sympy/polys/polytools.py(354):     @property
0.50 /testbed/sympy/polys/polytools.py(355):     def one(self):
0.50 /testbed/sympy/polys/polytools.py(359):     @property
0.50 /testbed/sympy/polys/polytools.py(360):     def unit(self):
0.50 /testbed/sympy/polys/polytools.py(364):     def unify(f, g):
0.50 /testbed/sympy/polys/polytools.py(392):     def _unify(f, g):
0.50 /testbed/sympy/polys/polytools.py(443):     def per(f, rep, gens=None, remove=None):
0.50 /testbed/sympy/polys/polytools.py(472):     def set_domain(f, domain):
0.50 /testbed/sympy/polys/polytools.py(477):     def get_domain(f):
0.50 /testbed/sympy/polys/polytools.py(481):     def set_modulus(f, modulus):
0.50 /testbed/sympy/polys/polytools.py(498):     def get_modulus(f):
0.50 /testbed/sympy/polys/polytools.py(519):     def _eval_subs(f, old, new):
0.50 /testbed/sympy/polys/polytools.py(532):     def exclude(f):
0.50 /testbed/sympy/polys/polytools.py(555):     def replace(f, x, y=None):
0.50 /testbed/sympy/polys/polytools.py(589):     def reorder(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(615):     def ltrim(f, gen):
0.50 /testbed/sympy/polys/polytools.py(651):     def has_only_gens(f, *gens):
0.50 /testbed/sympy/polys/polytools.py(685):     def to_ring(f):
0.50 /testbed/sympy/polys/polytools.py(706):     def to_field(f):
0.50 /testbed/sympy/polys/polytools.py(727):     def to_exact(f):
0.50 /testbed/sympy/polys/polytools.py(748):     def retract(f, field=None):
0.50 /testbed/sympy/polys/polytools.py(772):     def slice(f, x, m, n=None):
0.50 /testbed/sympy/polys/polytools.py(788):     def coeffs(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(810):     def monoms(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(830):     def terms(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(850):     def all_coeffs(f):
0.50 /testbed/sympy/polys/polytools.py(866):     def all_monoms(f):
0.50 /testbed/sympy/polys/polytools.py(886):     def all_terms(f):
0.50 /testbed/sympy/polys/polytools.py(902):     def termwise(f, func, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(939):     def length(f):
0.50 /testbed/sympy/polys/polytools.py(955):     def as_dict(f, native=False, zero=False):
0.50 /testbed/sympy/polys/polytools.py(974):     def as_list(f, native=False):
0.50 /testbed/sympy/polys/polytools.py(981):     def as_expr(f, *gens):
0.50 /testbed/sympy/polys/polytools.py(1018):     def lift(f):
0.50 /testbed/sympy/polys/polytools.py(1039):     def deflate(f):
0.50 /testbed/sympy/polys/polytools.py(1060):     def inject(f, front=False):
0.50 /testbed/sympy/polys/polytools.py(1097):     def eject(f, *gens):
0.50 /testbed/sympy/polys/polytools.py(1139):     def terms_gcd(f):
0.50 /testbed/sympy/polys/polytools.py(1160):     def add_ground(f, coeff):
0.50 /testbed/sympy/polys/polytools.py(1181):     def sub_ground(f, coeff):
0.50 /testbed/sympy/polys/polytools.py(1202):     def mul_ground(f, coeff):
0.50 /testbed/sympy/polys/polytools.py(1223):     def quo_ground(f, coeff):
0.50 /testbed/sympy/polys/polytools.py(1247):     def exquo_ground(f, coeff):
0.50 /testbed/sympy/polys/polytools.py(1273):     def abs(f):
0.50 /testbed/sympy/polys/polytools.py(1294):     def neg(f):
0.50 /testbed/sympy/polys/polytools.py(1318):     def add(f, g):
0.50 /testbed/sympy/polys/polytools.py(1349):     def sub(f, g):
0.50 /testbed/sympy/polys/polytools.py(1380):     def mul(f, g):
0.50 /testbed/sympy/polys/polytools.py(1411):     def sqr(f):
0.50 /testbed/sympy/polys/polytools.py(1435):     def pow(f, n):
0.50 /testbed/sympy/polys/polytools.py(1461):     def pdiv(f, g):
0.50 /testbed/sympy/polys/polytools.py(1484):     def prem(f, g):
0.50 /testbed/sympy/polys/polytools.py(1523):     def pquo(f, g):
0.50 /testbed/sympy/polys/polytools.py(1551):     def pexquo(f, g):
0.50 /testbed/sympy/polys/polytools.py(1582):     def div(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(1621):     def rem(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(1658):     def quo(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(1695):     def exquo(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(1737):     def _gen_to_level(f, gen):
0.50 /testbed/sympy/polys/polytools.py(1757):     def degree(f, gen=0):
0.50 /testbed/sympy/polys/polytools.py(1784):     def degree_list(f):
0.50 /testbed/sympy/polys/polytools.py(1803):     def total_degree(f):
0.50 /testbed/sympy/polys/polytools.py(1824):     def homogenize(f, s):
0.50 /testbed/sympy/polys/polytools.py(1858):     def homogeneous_order(f):
0.50 /testbed/sympy/polys/polytools.py(1883):     def LC(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(1907):     def TC(f):
0.50 /testbed/sympy/polys/polytools.py(1928):     def EC(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(1947):     def coeff_monomial(f, monom):
0.50 /testbed/sympy/polys/polytools.py(1984):     def nth(f, *N):
0.50 /testbed/sympy/polys/polytools.py(2018):     def coeff(f, x, n=1, right=False):
0.50 /testbed/sympy/polys/polytools.py(2030):     def LM(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(2050):     def EM(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(2066):     def LT(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(2087):     def ET(f, order=None):
0.50 /testbed/sympy/polys/polytools.py(2104):     def max_norm(f):
0.50 /testbed/sympy/polys/polytools.py(2125):     def l1_norm(f):
0.50 /testbed/sympy/polys/polytools.py(2146):     def clear_denoms(self, convert=False):
0.50 /testbed/sympy/polys/polytools.py(2185):     def rat_clear_denoms(self, g):
0.50 /testbed/sympy/polys/polytools.py(2224):     def integrate(self, *specs, **args):
0.50 /testbed/sympy/polys/polytools.py(2264):     def diff(f, *specs, **kwargs):
0.50 /testbed/sympy/polys/polytools.py(2302):     _eval_derivative = diff
0.50 /testbed/sympy/polys/polytools.py(2303):     _eval_diff = diff
0.50 /testbed/sympy/polys/polytools.py(2305):     def eval(self, x, a=None, auto=True):
0.50 /testbed/sympy/polys/polytools.py(2380):     def __call__(f, *values):
0.50 /testbed/sympy/polys/polytools.py(2402):     def half_gcdex(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(2433):     def gcdex(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(2466):     def invert(f, g, auto=True):
0.50 /testbed/sympy/polys/polytools.py(2497):     def revert(f, n):
0.50 /testbed/sympy/polys/polytools.py(2531):     def subresultants(f, g):
0.50 /testbed/sympy/polys/polytools.py(2556):     def resultant(f, g, includePRS=False):
0.50 /testbed/sympy/polys/polytools.py(2593):     def discriminant(f):
0.50 /testbed/sympy/polys/polytools.py(2614):     def dispersionset(f, g=None):
0.50 /testbed/sympy/polys/polytools.py(2689):     def dispersion(f, g=None):
0.50 /testbed/sympy/polys/polytools.py(2764):     def cofactors(f, g):
0.50 /testbed/sympy/polys/polytools.py(2793):     def gcd(f, g):
0.50 /testbed/sympy/polys/polytools.py(2816):     def lcm(f, g):
0.50 /testbed/sympy/polys/polytools.py(2839):     def trunc(f, p):
0.50 /testbed/sympy/polys/polytools.py(2862):     def monic(self, auto=True):
0.50 /testbed/sympy/polys/polytools.py(2891):     def content(f):
0.50 /testbed/sympy/polys/polytools.py(2912):     def primitive(f):
0.50 /testbed/sympy/polys/polytools.py(2933):     def compose(f, g):
0.50 /testbed/sympy/polys/polytools.py(2956):     def decompose(f):
0.50 /testbed/sympy/polys/polytools.py(2977):     def shift(f, a):
0.50 /testbed/sympy/polys/polytools.py(2998):     def transform(f, p, q):
0.50 /testbed/sympy/polys/polytools.py(3024):     def sturm(self, auto=True):
0.50 /testbed/sympy/polys/polytools.py(3053):     def gff_list(f):
0.50 /testbed/sympy/polys/polytools.py(3076):     def norm(f):
0.50 /testbed/sympy/polys/polytools.py(3111):     def sqf_norm(f):
0.50 /testbed/sympy/polys/polytools.py(3142):     def sqf_part(f):
0.50 /testbed/sympy/polys/polytools.py(3163):     def sqf_list(f, all=False):
0.50 /testbed/sympy/polys/polytools.py(3192):     def sqf_list_include(f, all=False):
0.50 /testbed/sympy/polys/polytools.py(3225):     def factor_list(f):
0.50 /testbed/sympy/polys/polytools.py(3252):     def factor_list_include(f):
0.50 /testbed/sympy/polys/polytools.py(3279):     def intervals(f, all=False, eps=None, inf=None, sup=None, fast=False, sqf=False):
0.50 /testbed/sympy/polys/polytools.py(3355):     def refine_root(f, s, t, eps=None, steps=None, fast=False, check_sqf=False):
0.50 /testbed/sympy/polys/polytools.py(3392):     def count_roots(f, inf=None, sup=None):
0.50 /testbed/sympy/polys/polytools.py(3455):     def root(f, index, radicals=True):
0.50 /testbed/sympy/polys/polytools.py(3484):     def real_roots(f, multiple=True, radicals=True):
0.50 /testbed/sympy/polys/polytools.py(3507):     def all_roots(f, multiple=True, radicals=True):
0.50 /testbed/sympy/polys/polytools.py(3532):     def nroots(f, n=15, maxsteps=50, cleanup=True):
0.50 /testbed/sympy/polys/polytools.py(3605):     def ground_roots(f):
0.50 /testbed/sympy/polys/polytools.py(3632):     def nth_power_roots_poly(f, n):
0.50 /testbed/sympy/polys/polytools.py(3672):     def cancel(f, g, include=False):
0.50 /testbed/sympy/polys/polytools.py(3709):     @property
0.50 /testbed/sympy/polys/polytools.py(3710):     def is_zero(f):
0.50 /testbed/sympy/polys/polytools.py(3728):     @property
0.50 /testbed/sympy/polys/polytools.py(3729):     def is_one(f):
0.50 /testbed/sympy/polys/polytools.py(3747):     @property
0.50 /testbed/sympy/polys/polytools.py(3748):     def is_sqf(f):
0.50 /testbed/sympy/polys/polytools.py(3766):     @property
0.50 /testbed/sympy/polys/polytools.py(3767):     def is_monic(f):
0.50 /testbed/sympy/polys/polytools.py(3785):     @property
0.50 /testbed/sympy/polys/polytools.py(3786):     def is_primitive(f):
0.50 /testbed/sympy/polys/polytools.py(3804):     @property
0.50 /testbed/sympy/polys/polytools.py(3805):     def is_ground(f):
0.50 /testbed/sympy/polys/polytools.py(3825):     @property
0.50 /testbed/sympy/polys/polytools.py(3826):     def is_linear(f):
0.50 /testbed/sympy/polys/polytools.py(3844):     @property
0.50 /testbed/sympy/polys/polytools.py(3845):     def is_quadratic(f):
0.50 /testbed/sympy/polys/polytools.py(3863):     @property
0.50 /testbed/sympy/polys/polytools.py(3864):     def is_monomial(f):
0.50 /testbed/sympy/polys/polytools.py(3882):     @property
0.50 /testbed/sympy/polys/polytools.py(3883):     def is_homogeneous(f):
0.50 /testbed/sympy/polys/polytools.py(3906):     @property
0.50 /testbed/sympy/polys/polytools.py(3907):     def is_irreducible(f):
0.50 /testbed/sympy/polys/polytools.py(3925):     @property
0.50 /testbed/sympy/polys/polytools.py(3926):     def is_univariate(f):
0.50 /testbed/sympy/polys/polytools.py(3948):     @property
0.50 /testbed/sympy/polys/polytools.py(3949):     def is_multivariate(f):
0.50 /testbed/sympy/polys/polytools.py(3971):     @property
0.50 /testbed/sympy/polys/polytools.py(3972):     def is_cyclotomic(f):
0.50 /testbed/sympy/polys/polytools.py(3995):     def __abs__(f):
0.50 /testbed/sympy/polys/polytools.py(3998):     def __neg__(f):
0.50 /testbed/sympy/polys/polytools.py(4001):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4002):     def __add__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4011):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4012):     def __radd__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4021):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4022):     def __sub__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4031):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4032):     def __rsub__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4041):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4042):     def __mul__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4051):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4052):     def __rmul__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4061):     @_sympifyit('n', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4062):     def __pow__(f, n):
0.50 /testbed/sympy/polys/polytools.py(4068):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4069):     def __divmod__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4075):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4076):     def __rdivmod__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4082):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4083):     def __mod__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4089):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4090):     def __rmod__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4096):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4097):     def __floordiv__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4103):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4104):     def __rfloordiv__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4110):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4111):     def __div__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4114):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4115):     def __rdiv__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4118):     __truediv__ = __div__
0.50 /testbed/sympy/polys/polytools.py(4119):     __rtruediv__ = __rdiv__
0.50 /testbed/sympy/polys/polytools.py(4121):     @_sympifyit('other', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4122):     def __eq__(self, other):
0.50 /testbed/sympy/polys/polytools.py(4145):     @_sympifyit('g', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4146):     def __ne__(f, g):
0.50 /testbed/sympy/polys/polytools.py(4149):     def __nonzero__(f):
0.50 /testbed/sympy/polys/polytools.py(4152):     __bool__ = __nonzero__
0.50 /testbed/sympy/polys/polytools.py(4154):     def eq(f, g, strict=False):
0.50 /testbed/sympy/polys/polytools.py(4160):     def ne(f, g, strict=False):
0.50 /testbed/sympy/polys/polytools.py(4163):     def _strict_eq(f, g):
0.50 /testbed/sympy/polys/polytools.py(4167): @public
0.50 /testbed/sympy/polys/polytools.py(4168): class PurePoly(Poly):
0.50 /testbed/sympy/polys/polytools.py(4167): @public
0.50 /testbed/sympy/polys/polytools.py(4169):     """Class for representing pure polynomials. """
0.50 /testbed/sympy/polys/polytools.py(4171):     def _hashable_content(self):
0.50 /testbed/sympy/polys/polytools.py(4175):     def __hash__(self):
0.50 /testbed/sympy/polys/polytools.py(4178):     @property
0.50 /testbed/sympy/polys/polytools.py(4179):     def free_symbols(self):
0.50 /testbed/sympy/polys/polytools.py(4199):     @_sympifyit('other', NotImplemented)
0.50 /testbed/sympy/polys/polytools.py(4200):     def __eq__(self, other):
0.50 /testbed/sympy/polys/polytools.py(4223):     def _strict_eq(f, g):
0.50 /testbed/sympy/polys/polytools.py(4226):     def _unify(f, g):
0.50 /testbed/sympy/polys/polytools.py(4261): @public
0.50 /testbed/sympy/polys/polytools.py(4262): def poly_from_expr(expr, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4268): def _poly_from_expr(expr, opt):
0.50 /testbed/sympy/polys/polytools.py(4308): @public
0.50 /testbed/sympy/polys/polytools.py(4309): def parallel_poly_from_expr(exprs, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4315): def _parallel_poly_from_expr(exprs, opt):
0.50 /testbed/sympy/polys/polytools.py(4410): def _update_args(args, key, value):
0.50 /testbed/sympy/polys/polytools.py(4420): @public
0.50 /testbed/sympy/polys/polytools.py(4421): def degree(f, gen=0):
0.50 /testbed/sympy/polys/polytools.py(4474): @public
0.50 /testbed/sympy/polys/polytools.py(4475): def total_degree(f, *gens):
0.50 /testbed/sympy/polys/polytools.py(4527): @public
0.50 /testbed/sympy/polys/polytools.py(4528): def degree_list(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4554): @public
0.50 /testbed/sympy/polys/polytools.py(4555): def LC(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4579): @public
0.50 /testbed/sympy/polys/polytools.py(4580): def LM(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4605): @public
0.50 /testbed/sympy/polys/polytools.py(4606): def LT(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4631): @public
0.50 /testbed/sympy/polys/polytools.py(4632): def pdiv(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4661): @public
0.50 /testbed/sympy/polys/polytools.py(4662): def prem(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4691): @public
0.50 /testbed/sympy/polys/polytools.py(4692): def pquo(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4726): @public
0.50 /testbed/sympy/polys/polytools.py(4727): def pexquo(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4761): @public
0.50 /testbed/sympy/polys/polytools.py(4762): def div(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4793): @public
0.50 /testbed/sympy/polys/polytools.py(4794): def rem(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4825): @public
0.50 /testbed/sympy/polys/polytools.py(4826): def quo(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4857): @public
0.50 /testbed/sympy/polys/polytools.py(4858): def exquo(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4892): @public
0.50 /testbed/sympy/polys/polytools.py(4893): def half_gcdex(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4931): @public
0.50 /testbed/sympy/polys/polytools.py(4932): def gcdex(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(4970): @public
0.50 /testbed/sympy/polys/polytools.py(4971): def invert(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5022): @public
0.50 /testbed/sympy/polys/polytools.py(5023): def subresultants(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5052): @public
0.50 /testbed/sympy/polys/polytools.py(5053): def resultant(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5090): @public
0.50 /testbed/sympy/polys/polytools.py(5091): def discriminant(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5120): @public
0.50 /testbed/sympy/polys/polytools.py(5121): def cofactors(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5161): @public
0.50 /testbed/sympy/polys/polytools.py(5162): def gcd_list(seq, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5234): @public
0.50 /testbed/sympy/polys/polytools.py(5235): def gcd(f, g=None, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5277): @public
0.50 /testbed/sympy/polys/polytools.py(5278): def lcm_list(seq, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5344): @public
0.50 /testbed/sympy/polys/polytools.py(5345): def lcm(f, g=None, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5387): @public
0.50 /testbed/sympy/polys/polytools.py(5388): def terms_gcd(f, *gens, **args):
0.50 /testbed/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/testbed/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping, defaultdict
/testbed/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  class OrderedSet(collections.MutableSet):
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/polys/polytools\\.py)']
0.21 /testbed/sympy/polys/polytools.py(1): """User-friendly public interface to polynomial functions. """
0.22 /testbed/sympy/polys/polytools.py(3): from __future__ import print_function, division
0.22 /testbed/sympy/polys/polytools.py(5): from sympy.core import (
0.22 /testbed/sympy/polys/polytools.py(9): from sympy.core.mul import _keep_coeff
0.22 /testbed/sympy/polys/polytools.py(10): from sympy.core.symbol import Symbol
0.22 /testbed/sympy/polys/polytools.py(11): from sympy.core.basic import preorder_traversal
0.22 /testbed/sympy/polys/polytools.py(12): from sympy.core.relational import Relational
0.22 /testbed/sympy/polys/polytools.py(13): from sympy.core.sympify import sympify
0.22 /testbed/sympy/polys/polytools.py(14): from sympy.core.decorators import _sympifyit
0.22 /testbed/sympy/polys/polytools.py(15): from sympy.core.function import Derivative
0.22 /testbed/sympy/polys/polytools.py(17): from sympy.logic.boolalg import BooleanAtom
0.22 /testbed/sympy/polys/polytools.py(19): from sympy.polys.polyclasses import DMP
0.23 /testbed/sympy/polys/polytools.py(21): from sympy.polys.polyutils import (
0.23 /testbed/sympy/polys/polytools.py(30): from sympy.polys.rationaltools import together
0.23 /testbed/sympy/polys/polytools.py(31): from sympy.polys.rootisolation import dup_isolate_real_roots_list
0.23 /testbed/sympy/polys/polytools.py(32): from sympy.polys.groebnertools import groebner as _groebner
0.23 /testbed/sympy/polys/polytools.py(33): from sympy.polys.fglmtools import matrix_fglm
0.23 /testbed/sympy/polys/polytools.py(34): from sympy.polys.monomials import Monomial
0.23 /testbed/sympy/polys/polytools.py(35): from sympy.polys.orderings import monomial_key
0.23 /testbed/sympy/polys/polytools.py(37): from sympy.polys.polyerrors import (
0.23 /testbed/sympy/polys/polytools.py(48): from sympy.utilities import group, sift, public, filldedent
0.23 /testbed/sympy/polys/polytools.py(50): import sympy.polys
0.23 /testbed/sympy/polys/polytools.py(51): import mpmath
0.23 /testbed/sympy/polys/polytools.py(52): from mpmath.libmp.libhyper import NoConvergence
0.23 /testbed/sympy/polys/polytools.py(54): from sympy.polys.domains import FF, QQ, ZZ
0.25 /testbed/sympy/polys/polytools.py(55): from sympy.polys.constructor import construct_domain
0.25 /testbed/sympy/polys/polytools.py(57): from sympy.polys import polyoptions as options
0.25 /testbed/sympy/polys/polytools.py(59): from sympy.core.compatibility import iterable, range, ordered
0.25 /testbed/sympy/polys/polytools.py(61): @public
0.25 /testbed/sympy/polys/polytools.py(62): class Poly(Expr):
0.25 /testbed/sympy/polys/polytools.py(61): @public
0.25 /testbed/sympy/polys/polytools.py(63):     """
0.25 /testbed/sympy/polys/polytools.py(105):     __slots__ = ['rep', 'gens']
0.25 /testbed/sympy/polys/polytools.py(107):     is_commutative = True
0.25 /testbed/sympy/polys/polytools.py(108):     is_Poly = True
0.25 /testbed/sympy/polys/polytools.py(109):     _op_priority = 10.001
0.25 /testbed/sympy/polys/polytools.py(111):     def __new__(cls, rep, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(131):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(132):     def new(cls, rep, *gens):
0.25 /testbed/sympy/polys/polytools.py(147):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(148):     def from_dict(cls, rep, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(153):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(154):     def from_list(cls, rep, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(159):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(160):     def from_poly(cls, rep, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(165):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(166):     def from_expr(cls, rep, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(171):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(172):     def _from_dict(cls, rep, opt):
0.25 /testbed/sympy/polys/polytools.py(191):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(192):     def _from_list(cls, rep, opt):
0.25 /testbed/sympy/polys/polytools.py(213):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(214):     def _from_poly(cls, rep, opt):
0.25 /testbed/sympy/polys/polytools.py(236):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(237):     def _from_expr(cls, rep, opt):
0.25 /testbed/sympy/polys/polytools.py(242):     def _hashable_content(self):
0.25 /testbed/sympy/polys/polytools.py(246):     def __hash__(self):
0.25 /testbed/sympy/polys/polytools.py(249):     @property
0.25 /testbed/sympy/polys/polytools.py(250):     def free_symbols(self):
0.25 /testbed/sympy/polys/polytools.py(280):     @property
0.25 /testbed/sympy/polys/polytools.py(281):     def free_symbols_in_domain(self):
0.25 /testbed/sympy/polys/polytools.py(310):     @property
0.25 /testbed/sympy/polys/polytools.py(311):     def args(self):
0.25 /testbed/sympy/polys/polytools.py(327):     @property
0.25 /testbed/sympy/polys/polytools.py(328):     def gen(self):
0.25 /testbed/sympy/polys/polytools.py(344):     @property
0.25 /testbed/sympy/polys/polytools.py(345):     def domain(self):
0.25 /testbed/sympy/polys/polytools.py(349):     @property
0.25 /testbed/sympy/polys/polytools.py(350):     def zero(self):
0.25 /testbed/sympy/polys/polytools.py(354):     @property
0.25 /testbed/sympy/polys/polytools.py(355):     def one(self):
0.25 /testbed/sympy/polys/polytools.py(359):     @property
0.25 /testbed/sympy/polys/polytools.py(360):     def unit(self):
0.25 /testbed/sympy/polys/polytools.py(364):     def unify(f, g):
0.25 /testbed/sympy/polys/polytools.py(392):     def _unify(f, g):
0.25 /testbed/sympy/polys/polytools.py(443):     def per(f, rep, gens=None, remove=None):
0.25 /testbed/sympy/polys/polytools.py(472):     def set_domain(f, domain):
0.25 /testbed/sympy/polys/polytools.py(477):     def get_domain(f):
0.25 /testbed/sympy/polys/polytools.py(481):     def set_modulus(f, modulus):
0.25 /testbed/sympy/polys/polytools.py(498):     def get_modulus(f):
0.25 /testbed/sympy/polys/polytools.py(519):     def _eval_subs(f, old, new):
0.25 /testbed/sympy/polys/polytools.py(532):     def exclude(f):
0.25 /testbed/sympy/polys/polytools.py(555):     def replace(f, x, y=None):
0.25 /testbed/sympy/polys/polytools.py(589):     def reorder(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(615):     def ltrim(f, gen):
0.25 /testbed/sympy/polys/polytools.py(651):     def has_only_gens(f, *gens):
0.25 /testbed/sympy/polys/polytools.py(685):     def to_ring(f):
0.25 /testbed/sympy/polys/polytools.py(706):     def to_field(f):
0.25 /testbed/sympy/polys/polytools.py(727):     def to_exact(f):
0.25 /testbed/sympy/polys/polytools.py(748):     def retract(f, field=None):
0.25 /testbed/sympy/polys/polytools.py(772):     def slice(f, x, m, n=None):
0.25 /testbed/sympy/polys/polytools.py(788):     def coeffs(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(810):     def monoms(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(830):     def terms(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(850):     def all_coeffs(f):
0.25 /testbed/sympy/polys/polytools.py(866):     def all_monoms(f):
0.25 /testbed/sympy/polys/polytools.py(886):     def all_terms(f):
0.25 /testbed/sympy/polys/polytools.py(902):     def termwise(f, func, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(939):     def length(f):
0.25 /testbed/sympy/polys/polytools.py(955):     def as_dict(f, native=False, zero=False):
0.25 /testbed/sympy/polys/polytools.py(974):     def as_list(f, native=False):
0.25 /testbed/sympy/polys/polytools.py(981):     def as_expr(f, *gens):
0.25 /testbed/sympy/polys/polytools.py(1018):     def lift(f):
0.25 /testbed/sympy/polys/polytools.py(1039):     def deflate(f):
0.25 /testbed/sympy/polys/polytools.py(1060):     def inject(f, front=False):
0.25 /testbed/sympy/polys/polytools.py(1097):     def eject(f, *gens):
0.25 /testbed/sympy/polys/polytools.py(1139):     def terms_gcd(f):
0.25 /testbed/sympy/polys/polytools.py(1160):     def add_ground(f, coeff):
0.25 /testbed/sympy/polys/polytools.py(1181):     def sub_ground(f, coeff):
0.25 /testbed/sympy/polys/polytools.py(1202):     def mul_ground(f, coeff):
0.25 /testbed/sympy/polys/polytools.py(1223):     def quo_ground(f, coeff):
0.25 /testbed/sympy/polys/polytools.py(1247):     def exquo_ground(f, coeff):
0.25 /testbed/sympy/polys/polytools.py(1273):     def abs(f):
0.25 /testbed/sympy/polys/polytools.py(1294):     def neg(f):
0.25 /testbed/sympy/polys/polytools.py(1318):     def add(f, g):
0.25 /testbed/sympy/polys/polytools.py(1349):     def sub(f, g):
0.25 /testbed/sympy/polys/polytools.py(1380):     def mul(f, g):
0.25 /testbed/sympy/polys/polytools.py(1411):     def sqr(f):
0.25 /testbed/sympy/polys/polytools.py(1435):     def pow(f, n):
0.25 /testbed/sympy/polys/polytools.py(1461):     def pdiv(f, g):
0.25 /testbed/sympy/polys/polytools.py(1484):     def prem(f, g):
0.25 /testbed/sympy/polys/polytools.py(1523):     def pquo(f, g):
0.25 /testbed/sympy/polys/polytools.py(1551):     def pexquo(f, g):
0.25 /testbed/sympy/polys/polytools.py(1582):     def div(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(1621):     def rem(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(1658):     def quo(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(1695):     def exquo(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(1737):     def _gen_to_level(f, gen):
0.25 /testbed/sympy/polys/polytools.py(1757):     def degree(f, gen=0):
0.25 /testbed/sympy/polys/polytools.py(1784):     def degree_list(f):
0.25 /testbed/sympy/polys/polytools.py(1803):     def total_degree(f):
0.25 /testbed/sympy/polys/polytools.py(1824):     def homogenize(f, s):
0.25 /testbed/sympy/polys/polytools.py(1858):     def homogeneous_order(f):
0.25 /testbed/sympy/polys/polytools.py(1883):     def LC(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(1907):     def TC(f):
0.25 /testbed/sympy/polys/polytools.py(1928):     def EC(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(1947):     def coeff_monomial(f, monom):
0.25 /testbed/sympy/polys/polytools.py(1984):     def nth(f, *N):
0.25 /testbed/sympy/polys/polytools.py(2018):     def coeff(f, x, n=1, right=False):
0.25 /testbed/sympy/polys/polytools.py(2030):     def LM(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(2050):     def EM(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(2066):     def LT(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(2087):     def ET(f, order=None):
0.25 /testbed/sympy/polys/polytools.py(2104):     def max_norm(f):
0.25 /testbed/sympy/polys/polytools.py(2125):     def l1_norm(f):
0.25 /testbed/sympy/polys/polytools.py(2146):     def clear_denoms(self, convert=False):
0.25 /testbed/sympy/polys/polytools.py(2185):     def rat_clear_denoms(self, g):
0.25 /testbed/sympy/polys/polytools.py(2224):     def integrate(self, *specs, **args):
0.25 /testbed/sympy/polys/polytools.py(2264):     def diff(f, *specs, **kwargs):
0.25 /testbed/sympy/polys/polytools.py(2302):     _eval_derivative = diff
0.25 /testbed/sympy/polys/polytools.py(2303):     _eval_diff = diff
0.25 /testbed/sympy/polys/polytools.py(2305):     def eval(self, x, a=None, auto=True):
0.25 /testbed/sympy/polys/polytools.py(2380):     def __call__(f, *values):
0.25 /testbed/sympy/polys/polytools.py(2402):     def half_gcdex(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(2433):     def gcdex(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(2466):     def invert(f, g, auto=True):
0.25 /testbed/sympy/polys/polytools.py(2497):     def revert(f, n):
0.25 /testbed/sympy/polys/polytools.py(2531):     def subresultants(f, g):
0.25 /testbed/sympy/polys/polytools.py(2556):     def resultant(f, g, includePRS=False):
0.25 /testbed/sympy/polys/polytools.py(2593):     def discriminant(f):
0.25 /testbed/sympy/polys/polytools.py(2614):     def dispersionset(f, g=None):
0.25 /testbed/sympy/polys/polytools.py(2689):     def dispersion(f, g=None):
0.25 /testbed/sympy/polys/polytools.py(2764):     def cofactors(f, g):
0.25 /testbed/sympy/polys/polytools.py(2793):     def gcd(f, g):
0.25 /testbed/sympy/polys/polytools.py(2816):     def lcm(f, g):
0.25 /testbed/sympy/polys/polytools.py(2839):     def trunc(f, p):
0.25 /testbed/sympy/polys/polytools.py(2862):     def monic(self, auto=True):
0.25 /testbed/sympy/polys/polytools.py(2891):     def content(f):
0.25 /testbed/sympy/polys/polytools.py(2912):     def primitive(f):
0.25 /testbed/sympy/polys/polytools.py(2933):     def compose(f, g):
0.25 /testbed/sympy/polys/polytools.py(2956):     def decompose(f):
0.25 /testbed/sympy/polys/polytools.py(2977):     def shift(f, a):
0.25 /testbed/sympy/polys/polytools.py(2998):     def transform(f, p, q):
0.25 /testbed/sympy/polys/polytools.py(3024):     def sturm(self, auto=True):
0.25 /testbed/sympy/polys/polytools.py(3053):     def gff_list(f):
0.25 /testbed/sympy/polys/polytools.py(3076):     def norm(f):
0.25 /testbed/sympy/polys/polytools.py(3111):     def sqf_norm(f):
0.25 /testbed/sympy/polys/polytools.py(3142):     def sqf_part(f):
0.25 /testbed/sympy/polys/polytools.py(3163):     def sqf_list(f, all=False):
0.25 /testbed/sympy/polys/polytools.py(3192):     def sqf_list_include(f, all=False):
0.25 /testbed/sympy/polys/polytools.py(3225):     def factor_list(f):
0.25 /testbed/sympy/polys/polytools.py(3252):     def factor_list_include(f):
0.25 /testbed/sympy/polys/polytools.py(3279):     def intervals(f, all=False, eps=None, inf=None, sup=None, fast=False, sqf=False):
0.25 /testbed/sympy/polys/polytools.py(3355):     def refine_root(f, s, t, eps=None, steps=None, fast=False, check_sqf=False):
0.25 /testbed/sympy/polys/polytools.py(3392):     def count_roots(f, inf=None, sup=None):
0.25 /testbed/sympy/polys/polytools.py(3455):     def root(f, index, radicals=True):
0.25 /testbed/sympy/polys/polytools.py(3484):     def real_roots(f, multiple=True, radicals=True):
0.25 /testbed/sympy/polys/polytools.py(3507):     def all_roots(f, multiple=True, radicals=True):
0.25 /testbed/sympy/polys/polytools.py(3532):     def nroots(f, n=15, maxsteps=50, cleanup=True):
0.25 /testbed/sympy/polys/polytools.py(3605):     def ground_roots(f):
0.25 /testbed/sympy/polys/polytools.py(3632):     def nth_power_roots_poly(f, n):
0.25 /testbed/sympy/polys/polytools.py(3672):     def cancel(f, g, include=False):
0.25 /testbed/sympy/polys/polytools.py(3709):     @property
0.25 /testbed/sympy/polys/polytools.py(3710):     def is_zero(f):
0.25 /testbed/sympy/polys/polytools.py(3728):     @property
0.25 /testbed/sympy/polys/polytools.py(3729):     def is_one(f):
0.25 /testbed/sympy/polys/polytools.py(3747):     @property
0.25 /testbed/sympy/polys/polytools.py(3748):     def is_sqf(f):
0.25 /testbed/sympy/polys/polytools.py(3766):     @property
0.25 /testbed/sympy/polys/polytools.py(3767):     def is_monic(f):
0.25 /testbed/sympy/polys/polytools.py(3785):     @property
0.25 /testbed/sympy/polys/polytools.py(3786):     def is_primitive(f):
0.25 /testbed/sympy/polys/polytools.py(3804):     @property
0.25 /testbed/sympy/polys/polytools.py(3805):     def is_ground(f):
0.25 /testbed/sympy/polys/polytools.py(3825):     @property
0.25 /testbed/sympy/polys/polytools.py(3826):     def is_linear(f):
0.25 /testbed/sympy/polys/polytools.py(3844):     @property
0.25 /testbed/sympy/polys/polytools.py(3845):     def is_quadratic(f):
0.25 /testbed/sympy/polys/polytools.py(3863):     @property
0.25 /testbed/sympy/polys/polytools.py(3864):     def is_monomial(f):
0.25 /testbed/sympy/polys/polytools.py(3882):     @property
0.25 /testbed/sympy/polys/polytools.py(3883):     def is_homogeneous(f):
0.25 /testbed/sympy/polys/polytools.py(3906):     @property
0.25 /testbed/sympy/polys/polytools.py(3907):     def is_irreducible(f):
0.25 /testbed/sympy/polys/polytools.py(3925):     @property
0.25 /testbed/sympy/polys/polytools.py(3926):     def is_univariate(f):
0.25 /testbed/sympy/polys/polytools.py(3948):     @property
0.25 /testbed/sympy/polys/polytools.py(3949):     def is_multivariate(f):
0.25 /testbed/sympy/polys/polytools.py(3971):     @property
0.25 /testbed/sympy/polys/polytools.py(3972):     def is_cyclotomic(f):
0.25 /testbed/sympy/polys/polytools.py(3995):     def __abs__(f):
0.25 /testbed/sympy/polys/polytools.py(3998):     def __neg__(f):
0.25 /testbed/sympy/polys/polytools.py(4001):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4002):     def __add__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4011):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4012):     def __radd__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4021):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4022):     def __sub__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4031):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4032):     def __rsub__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4041):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4042):     def __mul__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4051):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4052):     def __rmul__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4061):     @_sympifyit('n', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4062):     def __pow__(f, n):
0.25 /testbed/sympy/polys/polytools.py(4068):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4069):     def __divmod__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4075):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4076):     def __rdivmod__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4082):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4083):     def __mod__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4089):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4090):     def __rmod__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4096):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4097):     def __floordiv__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4103):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4104):     def __rfloordiv__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4110):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4111):     def __div__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4114):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4115):     def __rdiv__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4118):     __truediv__ = __div__
0.25 /testbed/sympy/polys/polytools.py(4119):     __rtruediv__ = __rdiv__
0.25 /testbed/sympy/polys/polytools.py(4121):     @_sympifyit('other', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4122):     def __eq__(self, other):
0.25 /testbed/sympy/polys/polytools.py(4145):     @_sympifyit('g', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4146):     def __ne__(f, g):
0.25 /testbed/sympy/polys/polytools.py(4149):     def __nonzero__(f):
0.25 /testbed/sympy/polys/polytools.py(4152):     __bool__ = __nonzero__
0.25 /testbed/sympy/polys/polytools.py(4154):     def eq(f, g, strict=False):
0.25 /testbed/sympy/polys/polytools.py(4160):     def ne(f, g, strict=False):
0.25 /testbed/sympy/polys/polytools.py(4163):     def _strict_eq(f, g):
0.25 /testbed/sympy/polys/polytools.py(4167): @public
0.25 /testbed/sympy/polys/polytools.py(4168): class PurePoly(Poly):
0.25 /testbed/sympy/polys/polytools.py(4167): @public
0.25 /testbed/sympy/polys/polytools.py(4169):     """Class for representing pure polynomials. """
0.25 /testbed/sympy/polys/polytools.py(4171):     def _hashable_content(self):
0.25 /testbed/sympy/polys/polytools.py(4175):     def __hash__(self):
0.25 /testbed/sympy/polys/polytools.py(4178):     @property
0.25 /testbed/sympy/polys/polytools.py(4179):     def free_symbols(self):
0.25 /testbed/sympy/polys/polytools.py(4199):     @_sympifyit('other', NotImplemented)
0.25 /testbed/sympy/polys/polytools.py(4200):     def __eq__(self, other):
0.25 /testbed/sympy/polys/polytools.py(4223):     def _strict_eq(f, g):
0.25 /testbed/sympy/polys/polytools.py(4226):     def _unify(f, g):
0.25 /testbed/sympy/polys/polytools.py(4261): @public
0.25 /testbed/sympy/polys/polytools.py(4262): def poly_from_expr(expr, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4268): def _poly_from_expr(expr, opt):
0.25 /testbed/sympy/polys/polytools.py(4308): @public
0.25 /testbed/sympy/polys/polytools.py(4309): def parallel_poly_from_expr(exprs, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4315): def _parallel_poly_from_expr(exprs, opt):
0.25 /testbed/sympy/polys/polytools.py(4410): def _update_args(args, key, value):
0.25 /testbed/sympy/polys/polytools.py(4420): @public
0.25 /testbed/sympy/polys/polytools.py(4421): def degree(f, gen=0):
0.25 /testbed/sympy/polys/polytools.py(4474): @public
0.25 /testbed/sympy/polys/polytools.py(4475): def total_degree(f, *gens):
0.25 /testbed/sympy/polys/polytools.py(4527): @public
0.25 /testbed/sympy/polys/polytools.py(4528): def degree_list(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4554): @public
0.25 /testbed/sympy/polys/polytools.py(4555): def LC(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4579): @public
0.25 /testbed/sympy/polys/polytools.py(4580): def LM(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4605): @public
0.25 /testbed/sympy/polys/polytools.py(4606): def LT(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4631): @public
0.25 /testbed/sympy/polys/polytools.py(4632): def pdiv(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4661): @public
0.25 /testbed/sympy/polys/polytools.py(4662): def prem(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4691): @public
0.25 /testbed/sympy/polys/polytools.py(4692): def pquo(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4726): @public
0.25 /testbed/sympy/polys/polytools.py(4727): def pexquo(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4761): @public
0.25 /testbed/sympy/polys/polytools.py(4762): def div(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4793): @public
0.25 /testbed/sympy/polys/polytools.py(4794): def rem(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4825): @public
0.25 /testbed/sympy/polys/polytools.py(4826): def quo(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4857): @public
0.25 /testbed/sympy/polys/polytools.py(4858): def exquo(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4892): @public
0.25 /testbed/sympy/polys/polytools.py(4893): def half_gcdex(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4931): @public
0.25 /testbed/sympy/polys/polytools.py(4932): def gcdex(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(4970): @public
0.25 /testbed/sympy/polys/polytools.py(4971): def invert(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5022): @public
0.25 /testbed/sympy/polys/polytools.py(5023): def subresultants(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5052): @public
0.25 /testbed/sympy/polys/polytools.py(5053): def resultant(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5090): @public
0.25 /testbed/sympy/polys/polytools.py(5091): def discriminant(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5120): @public
0.25 /testbed/sympy/polys/polytools.py(5121): def cofactors(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5161): @public
0.25 /testbed/sympy/polys/polytools.py(5162): def gcd_list(seq, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5234): @public
0.25 /testbed/sympy/polys/polytools.py(5235): def gcd(f, g=None, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5277): @public
0.25 /testbed/sympy/polys/polytools.py(5278): def lcm_list(seq, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5344): @public
0.25 /testbed/sympy/polys/polytools.py(5345): def lcm(f, g=None, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5387): @public
0.25 /testbed/sympy/polys/polytools.py(5388): def terms_gcd(f, *gens, **args):
0.25 /testbed/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/testbed/sympy/polys/polytools.py(5503): @public
0.25 /testbed/sympy/polys/polytools.py(5504): def trunc(f, p, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5533): @public
0.25 /testbed/sympy/polys/polytools.py(5534): def monic(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5563): @public
0.25 /testbed/sympy/polys/polytools.py(5564): def content(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5588): @public
0.25 /testbed/sympy/polys/polytools.py(5589): def primitive(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5634): @public
0.25 /testbed/sympy/polys/polytools.py(5635): def compose(f, g, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5664): @public
0.25 /testbed/sympy/polys/polytools.py(5665): def decompose(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5694): @public
0.25 /testbed/sympy/polys/polytools.py(5695): def sturm(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5724): @public
0.25 /testbed/sympy/polys/polytools.py(5725): def gff_list(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5771): @public
0.25 /testbed/sympy/polys/polytools.py(5772): def gff(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5777): @public
0.25 /testbed/sympy/polys/polytools.py(5778): def sqf_norm(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5811): @public
0.25 /testbed/sympy/polys/polytools.py(5812): def sqf_part(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(5841): def _sorted_factors(factors, method):
0.25 /testbed/sympy/polys/polytools.py(5857): def _factors_product(factors):
0.25 /testbed/sympy/polys/polytools.py(5862): def _symbolic_factor_list(expr, opt, method):
0.25 /testbed/sympy/polys/polytools.py(5920): def _symbolic_factor(expr, opt, method):
0.25 /testbed/sympy/polys/polytools.py(5935): def _generic_factor_list(expr, gens, args, method):
0.25 /testbed/sympy/polys/polytools.py(5976): def _generic_factor(expr, gens, args, method):
0.25 /testbed/sympy/polys/polytools.py(5983): def to_rational_coeffs(f):
0.25 /testbed/sympy/polys/polytools.py(6118): def _torational_factor_list(p, x):
0.25 /testbed/sympy/polys/polytools.py(6162): @public
0.25 /testbed/sympy/polys/polytools.py(6163): def sqf_list(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6180): @public
0.25 /testbed/sympy/polys/polytools.py(6181): def sqf(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6198): @public
0.25 /testbed/sympy/polys/polytools.py(6199): def factor_list(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6216): @public
0.25 /testbed/sympy/polys/polytools.py(6217): def factor(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6296): @public
0.25 /testbed/sympy/polys/polytools.py(6297): def intervals(F, all=False, eps=None, inf=None, sup=None, strict=False, fast=False, sqf=False):
0.25 /testbed/sympy/polys/polytools.py(6352): @public
0.25 /testbed/sympy/polys/polytools.py(6353): def refine_root(f, s, t, eps=None, steps=None, fast=False, check_sqf=False):
0.25 /testbed/sympy/polys/polytools.py(6376): @public
0.25 /testbed/sympy/polys/polytools.py(6377): def count_roots(f, inf=None, sup=None):
0.25 /testbed/sympy/polys/polytools.py(6404): @public
0.25 /testbed/sympy/polys/polytools.py(6405): def real_roots(f, multiple=True):
0.25 /testbed/sympy/polys/polytools.py(6428): @public
0.25 /testbed/sympy/polys/polytools.py(6429): def nroots(f, n=15, maxsteps=50, cleanup=True):
0.25 /testbed/sympy/polys/polytools.py(6454): @public
0.25 /testbed/sympy/polys/polytools.py(6455): def ground_roots(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6479): @public
0.25 /testbed/sympy/polys/polytools.py(6480): def nth_power_roots_poly(f, n, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6518): @public
0.25 /testbed/sympy/polys/polytools.py(6519): def cancel(f, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6597): @public
0.25 /testbed/sympy/polys/polytools.py(6598): def reduced(f, G, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6657): @public
0.25 /testbed/sympy/polys/polytools.py(6658): def groebner(F, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6711): @public
0.25 /testbed/sympy/polys/polytools.py(6712): def is_zero_dimensional(F, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6729): @public
0.25 /testbed/sympy/polys/polytools.py(6730): class GroebnerBasis(Basic):
0.25 /testbed/sympy/polys/polytools.py(6729): @public
0.25 /testbed/sympy/polys/polytools.py(6731):     """Represents a reduced Groebner basis. """
0.25 /testbed/sympy/polys/polytools.py(6733):     def __new__(cls, F, *gens, **args):
0.25 /testbed/sympy/polys/polytools.py(6752):     @classmethod
0.25 /testbed/sympy/polys/polytools.py(6753):     def _new(cls, basis, options):
0.25 /testbed/sympy/polys/polytools.py(6761):     @property
0.25 /testbed/sympy/polys/polytools.py(6762):     def args(self):
0.25 /testbed/sympy/polys/polytools.py(6765):     @property
0.25 /testbed/sympy/polys/polytools.py(6766):     def exprs(self):
0.25 /testbed/sympy/polys/polytools.py(6769):     @property
0.25 /testbed/sympy/polys/polytools.py(6770):     def polys(self):
0.25 /testbed/sympy/polys/polytools.py(6773):     @property
0.25 /testbed/sympy/polys/polytools.py(6774):     def gens(self):
0.25 /testbed/sympy/polys/polytools.py(6777):     @property
0.25 /testbed/sympy/polys/polytools.py(6778):     def domain(self):
0.25 /testbed/sympy/polys/polytools.py(6781):     @property
0.25 /testbed/sympy/polys/polytools.py(6782):     def order(self):
0.25 /testbed/sympy/polys/polytools.py(6785):     def __len__(self):
0.25 /testbed/sympy/polys/polytools.py(6788):     def __iter__(self):
0.25 /testbed/sympy/polys/polytools.py(6794):     def __getitem__(self, item):
0.25 /testbed/sympy/polys/polytools.py(6802):     def __hash__(self):
0.25 /testbed/sympy/polys/polytools.py(6805):     def __eq__(self, other):
0.25 /testbed/sympy/polys/polytools.py(6813):     def __ne__(self, other):
0.25 /testbed/sympy/polys/polytools.py(6816):     @property
0.25 /testbed/sympy/polys/polytools.py(6817):     def is_zero_dimensional(self):
0.25 /testbed/sympy/polys/polytools.py(6848):     def fglm(self, order):
0.25 /testbed/sympy/polys/polytools.py(6914):     def reduce(self, expr, auto=True):
0.25 /testbed/sympy/polys/polytools.py(6979):     def contains(self, poly):
0.25 /testbed/sympy/polys/polytools.py(7001): @public
0.25 /testbed/sympy/polys/polytools.py(7002): def poly(expr, *gens, **args):
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        12859825
hash randomization: on (PYTHONHASHSEED=1065604668)

sympy/polys/tests/test_coverup_sympy__sympy-13757.py[1] 
test_multiply_expression_by_poly 0.38 /testbed/sympy/polys/polytools.py(113):         opt = options.build_options(gens, args)
0.38 /testbed/sympy/polys/polytools.py(115):         if 'order' in opt:
0.38 /testbed/sympy/polys/polytools.py(118):         if iterable(rep, exclude=str):
0.38 /testbed/sympy/polys/polytools.py(124):             rep = sympify(rep)
0.38 /testbed/sympy/polys/polytools.py(126):             if rep.is_Poly:
0.38 /testbed/sympy/polys/polytools.py(129):                 return cls._from_expr(rep, opt)
0.38 /testbed/sympy/polys/polytools.py(239):         rep, opt = _dict_from_expr(rep, opt)
0.38 /testbed/sympy/polys/polytools.py(240):         return cls._from_dict(rep, opt)
0.38 /testbed/sympy/polys/polytools.py(174):         gens = opt.gens
0.38 /testbed/sympy/polys/polytools.py(176):         if not gens:
0.38 /testbed/sympy/polys/polytools.py(180):         level = len(gens) - 1
0.38 /testbed/sympy/polys/polytools.py(181):         domain = opt.domain
0.38 /testbed/sympy/polys/polytools.py(183):         if domain is None:
0.38 /testbed/sympy/polys/polytools.py(184):             domain, rep = construct_domain(rep, opt=opt)
0.38 /testbed/sympy/polys/polytools.py(189):         return cls.new(DMP.from_dict(rep, level, domain), *gens)
0.38 /testbed/sympy/polys/polytools.py(134):         if not isinstance(rep, DMP):
0.38 /testbed/sympy/polys/polytools.py(137):         elif rep.lev != len(gens) - 1:
0.38 /testbed/sympy/polys/polytools.py(140):         obj = Basic.__new__(cls)
0.38 /testbed/sympy/polys/polytools.py(142):         obj.rep = rep
0.38 /testbed/sympy/polys/polytools.py(143):         obj.gens = gens
0.38 /testbed/sympy/polys/polytools.py(145):         return obj
0.38 /testbed/sympy/polys/polytools.py(4053):         if not g.is_Poly:
0.38 /testbed/sympy/polys/polytools.py(4054):             try:
0.38 /testbed/sympy/polys/polytools.py(4055):                 g = f.__class__(g, *f.gens)
0.38 /testbed/sympy/polys/polytools.py(113):         opt = options.build_options(gens, args)
0.38 /testbed/sympy/polys/polytools.py(115):         if 'order' in opt:
0.38 /testbed/sympy/polys/polytools.py(118):         if iterable(rep, exclude=str):
0.38 /testbed/sympy/polys/polytools.py(124):             rep = sympify(rep)
0.38 /testbed/sympy/polys/polytools.py(126):             if rep.is_Poly:
0.38 /testbed/sympy/polys/polytools.py(129):                 return cls._from_expr(rep, opt)
0.38 /testbed/sympy/polys/polytools.py(239):         rep, opt = _dict_from_expr(rep, opt)
0.38 /testbed/sympy/polys/polytools.py(240):         return cls._from_dict(rep, opt)
0.38 /testbed/sympy/polys/polytools.py(174):         gens = opt.gens
0.38 /testbed/sympy/polys/polytools.py(176):         if not gens:
0.38 /testbed/sympy/polys/polytools.py(180):         level = len(gens) - 1
0.38 /testbed/sympy/polys/polytools.py(181):         domain = opt.domain
0.38 /testbed/sympy/polys/polytools.py(183):         if domain is None:
0.38 /testbed/sympy/polys/polytools.py(184):             domain, rep = construct_domain(rep, opt=opt)
0.38 /testbed/sympy/polys/polytools.py(189):         return cls.new(DMP.from_dict(rep, level, domain), *gens)
0.38 /testbed/sympy/polys/polytools.py(134):         if not isinstance(rep, DMP):
0.38 /testbed/sympy/polys/polytools.py(137):         elif rep.lev != len(gens) - 1:
0.38 /testbed/sympy/polys/polytools.py(140):         obj = Basic.__new__(cls)
0.38 /testbed/sympy/polys/polytools.py(142):         obj.rep = rep
0.38 /testbed/sympy/polys/polytools.py(143):         obj.gens = gens
0.38 /testbed/sympy/polys/polytools.py(145):         return obj
0.38 /testbed/sympy/polys/polytools.py(4059):         return g.mul(f)
0.38 /testbed/sympy/polys/polytools.py(1397):         g = sympify(g)
0.38 /testbed/sympy/polys/polytools.py(247):         return super(Poly, self).__hash__()
0.38 /testbed/sympy/polys/polytools.py(244):         return (self.rep, self.gens)
0.38 /testbed/sympy/polys/polytools.py(1399):         if not g.is_Poly:
0.38 /testbed/sympy/polys/polytools.py(1402):         _, per, F, G = f._unify(g)
0.38 /testbed/sympy/polys/polytools.py(393):         g = sympify(g)
0.38 /testbed/sympy/polys/polytools.py(247):         return super(Poly, self).__hash__()
0.38 /testbed/sympy/polys/polytools.py(395):         if not g.is_Poly:
0.38 /testbed/sympy/polys/polytools.py(401):         if isinstance(f.rep, DMP) and isinstance(g.rep, DMP):
0.38 /testbed/sympy/polys/polytools.py(402):             gens = _unify_gens(f.gens, g.gens)
0.38 /testbed/sympy/polys/polytools.py(404):             dom, lev = f.rep.dom.unify(g.rep.dom, gens), len(gens) - 1
0.38 /testbed/sympy/polys/polytools.py(406):             if f.gens != gens:
0.38 /testbed/sympy/polys/polytools.py(415):                 F = f.rep.convert(dom)
0.38 /testbed/sympy/polys/polytools.py(417):             if g.gens != gens:
0.38 /testbed/sympy/polys/polytools.py(426):                 G = g.rep.convert(dom)
0.38 /testbed/sympy/polys/polytools.py(430):         cls = f.__class__
0.38 /testbed/sympy/polys/polytools.py(432):         def per(rep, dom=dom, gens=gens, remove=None):
0.38 /testbed/sympy/polys/polytools.py(441):         return dom, per, F, G
0.38 /testbed/sympy/polys/polytools.py(1404):         if hasattr(f.rep, 'mul'):
0.38 /testbed/sympy/polys/polytools.py(1405):             result = F.mul(G)
0.38 /testbed/sympy/polys/polytools.py(1409):         return per(result)
0.38 /testbed/sympy/polys/polytools.py(433):             if remove is not None:
0.38 /testbed/sympy/polys/polytools.py(439):             return cls.new(rep, *gens)
0.38 /testbed/sympy/polys/polytools.py(134):         if not isinstance(rep, DMP):
0.38 /testbed/sympy/polys/polytools.py(137):         elif rep.lev != len(gens) - 1:
0.38 /testbed/sympy/polys/polytools.py(140):         obj = Basic.__new__(cls)
0.38 /testbed/sympy/polys/polytools.py(142):         obj.rep = rep
0.38 /testbed/sympy/polys/polytools.py(143):         obj.gens = gens
0.38 /testbed/sympy/polys/polytools.py(145):         return obj
0.38 /testbed/sympy/polys/polytools.py(848):         return [(m, f.rep.dom.to_sympy(c)) for m, c in f.rep.terms(order=order)]
0.38 /testbed/sympy/polys/polytools.py(848):         return [(m, f.rep.dom.to_sympy(c)) for m, c in f.rep.terms(order=order)]
0.38 /testbed/sympy/polys/polytools.py(848):         return [(m, f.rep.dom.to_sympy(c)) for m, c in f.rep.terms(order=order)]
0.38 /testbed/sympy/polys/polytools.py(512):         domain = f.get_domain()
0.38 /testbed/sympy/polys/polytools.py(479):         return f.rep.dom
0.38 /testbed/sympy/polys/polytools.py(514):         if domain.is_FiniteField:
0.38 /testbed/sympy/polys/polytools.py(517):             raise PolynomialError("not a polynomial over a Galois field")
0.38 /testbed/sympy/polys/polytools.py(479):         return f.rep.dom
ok                                         [OK]


================== tests finished: 1 passed, in 0.01 seconds ===================
/testbed/sympy/polys/polytools.py(5503): @public
0.50 /testbed/sympy/polys/polytools.py(5504): def trunc(f, p, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5533): @public
0.50 /testbed/sympy/polys/polytools.py(5534): def monic(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5563): @public
0.50 /testbed/sympy/polys/polytools.py(5564): def content(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5588): @public
0.50 /testbed/sympy/polys/polytools.py(5589): def primitive(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5634): @public
0.50 /testbed/sympy/polys/polytools.py(5635): def compose(f, g, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5664): @public
0.50 /testbed/sympy/polys/polytools.py(5665): def decompose(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5694): @public
0.50 /testbed/sympy/polys/polytools.py(5695): def sturm(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5724): @public
0.50 /testbed/sympy/polys/polytools.py(5725): def gff_list(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5771): @public
0.50 /testbed/sympy/polys/polytools.py(5772): def gff(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5777): @public
0.50 /testbed/sympy/polys/polytools.py(5778): def sqf_norm(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5811): @public
0.50 /testbed/sympy/polys/polytools.py(5812): def sqf_part(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(5841): def _sorted_factors(factors, method):
0.50 /testbed/sympy/polys/polytools.py(5857): def _factors_product(factors):
0.50 /testbed/sympy/polys/polytools.py(5862): def _symbolic_factor_list(expr, opt, method):
0.50 /testbed/sympy/polys/polytools.py(5920): def _symbolic_factor(expr, opt, method):
0.50 /testbed/sympy/polys/polytools.py(5935): def _generic_factor_list(expr, gens, args, method):
0.50 /testbed/sympy/polys/polytools.py(5976): def _generic_factor(expr, gens, args, method):
0.50 /testbed/sympy/polys/polytools.py(5983): def to_rational_coeffs(f):
0.50 /testbed/sympy/polys/polytools.py(6118): def _torational_factor_list(p, x):
0.50 /testbed/sympy/polys/polytools.py(6162): @public
0.50 /testbed/sympy/polys/polytools.py(6163): def sqf_list(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6180): @public
0.50 /testbed/sympy/polys/polytools.py(6181): def sqf(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6198): @public
0.50 /testbed/sympy/polys/polytools.py(6199): def factor_list(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6216): @public
0.50 /testbed/sympy/polys/polytools.py(6217): def factor(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6296): @public
0.50 /testbed/sympy/polys/polytools.py(6297): def intervals(F, all=False, eps=None, inf=None, sup=None, strict=False, fast=False, sqf=False):
0.50 /testbed/sympy/polys/polytools.py(6352): @public
0.50 /testbed/sympy/polys/polytools.py(6353): def refine_root(f, s, t, eps=None, steps=None, fast=False, check_sqf=False):
0.50 /testbed/sympy/polys/polytools.py(6376): @public
0.50 /testbed/sympy/polys/polytools.py(6377): def count_roots(f, inf=None, sup=None):
0.50 /testbed/sympy/polys/polytools.py(6404): @public
0.50 /testbed/sympy/polys/polytools.py(6405): def real_roots(f, multiple=True):
0.50 /testbed/sympy/polys/polytools.py(6428): @public
0.50 /testbed/sympy/polys/polytools.py(6429): def nroots(f, n=15, maxsteps=50, cleanup=True):
0.50 /testbed/sympy/polys/polytools.py(6454): @public
0.50 /testbed/sympy/polys/polytools.py(6455): def ground_roots(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6479): @public
0.50 /testbed/sympy/polys/polytools.py(6480): def nth_power_roots_poly(f, n, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6518): @public
0.50 /testbed/sympy/polys/polytools.py(6519): def cancel(f, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6597): @public
0.50 /testbed/sympy/polys/polytools.py(6598): def reduced(f, G, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6657): @public
0.50 /testbed/sympy/polys/polytools.py(6658): def groebner(F, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6711): @public
0.50 /testbed/sympy/polys/polytools.py(6712): def is_zero_dimensional(F, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6729): @public
0.50 /testbed/sympy/polys/polytools.py(6730): class GroebnerBasis(Basic):
0.50 /testbed/sympy/polys/polytools.py(6729): @public
0.50 /testbed/sympy/polys/polytools.py(6731):     """Represents a reduced Groebner basis. """
0.50 /testbed/sympy/polys/polytools.py(6733):     def __new__(cls, F, *gens, **args):
0.50 /testbed/sympy/polys/polytools.py(6752):     @classmethod
0.50 /testbed/sympy/polys/polytools.py(6753):     def _new(cls, basis, options):
0.50 /testbed/sympy/polys/polytools.py(6761):     @property
0.50 /testbed/sympy/polys/polytools.py(6762):     def args(self):
0.50 /testbed/sympy/polys/polytools.py(6765):     @property
0.50 /testbed/sympy/polys/polytools.py(6766):     def exprs(self):
0.50 /testbed/sympy/polys/polytools.py(6769):     @property
0.50 /testbed/sympy/polys/polytools.py(6770):     def polys(self):
0.50 /testbed/sympy/polys/polytools.py(6773):     @property
0.50 /testbed/sympy/polys/polytools.py(6774):     def gens(self):
0.50 /testbed/sympy/polys/polytools.py(6777):     @property
0.50 /testbed/sympy/polys/polytools.py(6778):     def domain(self):
0.50 /testbed/sympy/polys/polytools.py(6781):     @property
0.50 /testbed/sympy/polys/polytools.py(6782):     def order(self):
0.50 /testbed/sympy/polys/polytools.py(6785):     def __len__(self):
0.50 /testbed/sympy/polys/polytools.py(6788):     def __iter__(self):
0.50 /testbed/sympy/polys/polytools.py(6794):     def __getitem__(self, item):
0.50 /testbed/sympy/polys/polytools.py(6802):     def __hash__(self):
0.50 /testbed/sympy/polys/polytools.py(6805):     def __eq__(self, other):
0.50 /testbed/sympy/polys/polytools.py(6813):     def __ne__(self, other):
0.50 /testbed/sympy/polys/polytools.py(6816):     @property
0.50 /testbed/sympy/polys/polytools.py(6817):     def is_zero_dimensional(self):
0.50 /testbed/sympy/polys/polytools.py(6848):     def fglm(self, order):
0.50 /testbed/sympy/polys/polytools.py(6914):     def reduce(self, expr, auto=True):
0.50 /testbed/sympy/polys/polytools.py(6979):     def contains(self, poly):
0.50 /testbed/sympy/polys/polytools.py(7001): @public
0.50 /testbed/sympy/polys/polytools.py(7002): def poly(expr, *gens, **args):
+ cat coverage.cover
{"/testbed/sympy/polys/polytools.py": {"3": 1, "5": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "17": 1, "19": 1, "21": 1, "30": 1, "31": 1, "32": 1, "33": 1, "34": 1, "35": 1, "37": 1, "48": 1, "50": 1, "51": 1, "52": 1, "54": 1, "55": 1, "57": 1, "59": 1, "61": 2, "62": 1, "4167": 2, "4168": 1, "4261": 1, "4262": 1, "4268": 1, "4308": 1, "4309": 1, "4315": 1, "4410": 1, "4420": 1, "4421": 1, "4474": 1, "4475": 1, "4527": 1, "4528": 1, "4554": 1, "4555": 1, "4579": 1, "4580": 1, "4605": 1, "4606": 1, "4631": 1, "4632": 1, "4661": 1, "4662": 1, "4691": 1, "4692": 1, "4726": 1, "4727": 1, "4761": 1, "4762": 1, "4793": 1, "4794": 1, "4825": 1, "4826": 1, "4857": 1, "4858": 1, "4892": 1, "4893": 1, "4931": 1, "4932": 1, "4970": 1, "4971": 1, "5022": 1, "5023": 1, "5052": 1, "5053": 1, "5090": 1, "5091": 1, "5120": 1, "5121": 1, "5161": 1, "5162": 1, "5234": 1, "5235": 1, "5277": 1, "5278": 1, "5344": 1, "5345": 1, "5387": 1, "5388": 1, "5503": 1, "5504": 1, "5533": 1, "5534": 1, "5563": 1, "5564": 1, "5588": 1, "5589": 1, "5634": 1, "5635": 1, "5664": 1, "5665": 1, "5694": 1, "5695": 1, "5724": 1, "5725": 1, "5771": 1, "5772": 1, "5777": 1, "5778": 1, "5811": 1, "5812": 1, "5841": 1, "5857": 1, "5862": 1, "5920": 1, "5935": 1, "5976": 1, "5983": 1, "6118": 1, "6162": 1, "6163": 1, "6180": 1, "6181": 1, "6198": 1, "6199": 1, "6216": 1, "6217": 1, "6296": 1, "6297": 1, "6352": 1, "6353": 1, "6376": 1, "6377": 1, "6404": 1, "6405": 1, "6428": 1, "6429": 1, "6454": 1, "6455": 1, "6479": 1, "6480": 1, "6518": 1, "6519": 1, "6597": 1, "6598": 1, "6657": 1, "6658": 1, "6711": 1, "6712": 1, "6729": 2, "6730": 1, "7001": 1, "7002": 1, "105": 1, "107": 1, "108": 1, "109": 1, "111": 1, "131": 1, "132": 1, "147": 1, "148": 1, "153": 1, "154": 1, "159": 1, "160": 1, "165": 1, "166": 1, "171": 1, "172": 1, "191": 1, "192": 1, "213": 1, "214": 1, "236": 1, "237": 1, "242": 1, "246": 1, "249": 1, "250": 1, "280": 1, "281": 1, "310": 1, "311": 1, "327": 1, "328": 1, "344": 1, "345": 1, "349": 1, "350": 1, "354": 1, "355": 1, "359": 1, "360": 1, "364": 1, "392": 1, "443": 1, "472": 1, "477": 1, "481": 1, "498": 1, "519": 1, "532": 1, "555": 1, "589": 1, "615": 1, "651": 1, "685": 1, "706": 1, "727": 1, "748": 1, "772": 1, "788": 1, "810": 1, "830": 1, "850": 1, "866": 1, "886": 1, "902": 1, "939": 1, "955": 1, "974": 1, "981": 1, "1018": 1, "1039": 1, "1060": 1, "1097": 1, "1139": 1, "1160": 1, "1181": 1, "1202": 1, "1223": 1, "1247": 1, "1273": 1, "1294": 1, "1318": 1, "1349": 1, "1380": 1, "1411": 1, "1435": 1, "1461": 1, "1484": 1, "1523": 1, "1551": 1, "1582": 1, "1621": 1, "1658": 1, "1695": 1, "1737": 1, "1757": 1, "1784": 1, "1803": 1, "1824": 1, "1858": 1, "1883": 1, "1907": 1, "1928": 1, "1947": 1, "1984": 1, "2018": 1, "2030": 1, "2050": 1, "2066": 1, "2087": 1, "2104": 1, "2125": 1, "2146": 1, "2185": 1, "2224": 1, "2264": 1, "2302": 1, "2303": 1, "2305": 1, "2380": 1, "2402": 1, "2433": 1, "2466": 1, "2497": 1, "2531": 1, "2556": 1, "2593": 1, "2614": 1, "2689": 1, "2764": 1, "2793": 1, "2816": 1, "2839": 1, "2862": 1, "2891": 1, "2912": 1, "2933": 1, "2956": 1, "2977": 1, "2998": 1, "3024": 1, "3053": 1, "3076": 1, "3111": 1, "3142": 1, "3163": 1, "3192": 1, "3225": 1, "3252": 1, "3279": 1, "3355": 1, "3392": 1, "3455": 1, "3484": 1, "3507": 1, "3532": 1, "3605": 1, "3632": 1, "3672": 1, "3709": 1, "3710": 1, "3728": 1, "3729": 1, "3747": 1, "3748": 1, "3766": 1, "3767": 1, "3785": 1, "3786": 1, "3804": 1, "3805": 1, "3825": 1, "3826": 1, "3844": 1, "3845": 1, "3863": 1, "3864": 1, "3882": 1, "3883": 1, "3906": 1, "3907": 1, "3925": 1, "3926": 1, "3948": 1, "3949": 1, "3971": 1, "3972": 1, "3995": 1, "3998": 1, "4001": 1, "4002": 1, "4011": 1, "4012": 1, "4021": 1, "4022": 1, "4031": 1, "4032": 1, "4041": 1, "4042": 1, "4051": 1, "4052": 1, "4061": 1, "4062": 1, "4068": 1, "4069": 1, "4075": 1, "4076": 1, "4082": 1, "4083": 1, "4089": 1, "4090": 1, "4096": 1, "4097": 1, "4103": 1, "4104": 1, "4110": 1, "4111": 1, "4114": 1, "4115": 1, "4118": 1, "4119": 1, "4121": 1, "4122": 1, "4145": 1, "4146": 1, "4149": 1, "4152": 1, "4154": 1, "4160": 1, "4163": 1, "113": 2, "115": 2, "116": 0, "118": 2, "119": 0, "120": 0, "122": 0, "124": 2, "126": 2, "127": 0, "129": 2, "134": 3, "135": 0, "136": 0, "137": 3, "138": 0, "140": 3, "142": 3, "143": 3, "145": 3, "150": 0, "151": 0, "156": 0, "157": 0, "162": 0, "163": 0, "168": 0, "169": 0, "174": 2, "176": 2, "177": 0, "178": 0, "180": 2, "181": 2, "183": 2, "184": 2, "186": 0, "187": 0, "189": 2, "194": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "203": 0, "204": 0, "206": 0, "207": 0, "209": 0, "211": 0, "216": 0, "217": 0, "219": 0, "220": 0, "221": 0, "223": 0, "224": 0, "225": 0, "227": 0, "229": 0, "230": 0, "231": 0, "232": 0, "234": 0, "239": 2, "240": 2, "244": 1, "247": 2, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "278": 0, "299": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "308": 0, "325": 0, "342": 0, "347": 0, "352": 0, "357": 0, "362": 0, "389": 0, "390": 0, "393": 1, "395": 1, "396": 0, "397": 0, "398": 0, "399": 0, "401": 1, "402": 1, "404": 1, "406": 1, "407": 0, "408": 0, "410": 0, "411": 0, "413": 0, "415": 1, "417": 1, "418": 0, "419": 0, "421": 0, "422": 0, "424": 0, "426": 1, "428": 0, "430": 1, "432": 1, "441": 1, "433": 1, "434": 0, "436": 0, "437": 0, "439": 1, "461": 0, "462": 0, "464": 0, "465": 0, "467": 0, "468": 0, "470": 0, "474": 0, "475": 0, "479": 2, "495": 0, "496": 0, "512": 1, "514": 1, "515": 0, "517": 1, "521": 0, "522": 0, "523": 0, "525": 0, "526": 0, "527": 0, "528": 0, "530": 0, "546": 0, "547": 0, "549": 0, "550": 0, "551": 0, "553": 0, "569": 0, "570": 0, "571": 0, "573": 0, "574": 0, "576": 0, "577": 0, "579": 0, "580": 0, "582": 0, "583": 0, "584": 0, "585": 0, "587": 0, "603": 0, "605": 0, "606": 0, "607": 0, "608": 0, "609": 0, "611": 0, "613": 0, "634": 0, "635": 0, "637": 0, "639": 0, "641": 0, "643": 0, "645": 0, "647": 0, "649": 0, "667": 0, "669": 0, "670": 0, "671": 0, "672": 0, "673": 0, "674": 0, "676": 0, "678": 0, "679": 0, "680": 0, "681": 0, "683": 0, "699": 0, "700": 0, "702": 0, "704": 0, "720": 0, "721": 0, "723": 0, "725": 0, "741": 0, "742": 0, "744": 0, "746": 0, "768": 0, "769": 0, "770": 0, "774": 0, "775": 0, "777": 0, "779": 0, "781": 0, "782": 0, "784": 0, "786": 0, "808": 0, "828": 0, "848": 3, "864": 0, "884": 0, "900": 0, "920": 0, "922": 0, "923": 0, "925": 0, "926": 0, "928": 0, "930": 0, "931": 0, "932": 0, "934": 0, "935": 0, "937": 0, "953": 0, "969": 0, "970": 0, "972": 0, "976": 0, "977": 0, "979": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1005": 0, "1007": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1014": 0, "1016": 0, "1032": 0, "1033": 0, "1035": 0, "1037": 0, "1053": 0, "1054": 0, "1056": 0, "1058": 0, "1078": 0, "1080": 0, "1081": 0, "1082": 0, "1083": 0, "1085": 0, "1086": 0, "1088": 0, "1090": 0, "1091": 0, "1093": 0, "1095": 0, "1115": 0, "1117": 0, "1118": 0, "1120": 0, "1122": 0, "1123": 0, "1124": 0, "1125": 0, "1127": 0, "1128": 0, "1130": 0, "1132": 0, "1133": 0, "1135": 0, "1137": 0, "1153": 0, "1154": 0, "1156": 0, "1158": 0, "1174": 0, "1175": 0, "1177": 0, "1179": 0, "1195": 0, "1196": 0, "1198": 0, "1200": 0, "1216": 0, "1217": 0, "1219": 0, "1221": 0, "1240": 0, "1241": 0, "1243": 0, "1245": 0, "1266": 0, "1267": 0, "1269": 0, "1271": 0, "1287": 0, "1288": 0, "1290": 0, "1292": 0, "1311": 0, "1312": 0, "1314": 0, "1316": 0, "1335": 0, "1337": 0, "1338": 0, "1340": 0, "1342": 0, "1343": 0, "1345": 0, "1347": 0, "1366": 0, "1368": 0, "1369": 0, "1371": 0, "1373": 0, "1374": 0, "1376": 0, "1378": 0, "1397": 1, "1399": 1, "1400": 0, "1402": 1, "1404": 1, "1405": 1, "1407": 0, "1409": 1, "1428": 0, "1429": 0, "1431": 0, "1433": 0, "1452": 0, "1454": 0, "1455": 0, "1457": 0, "1459": 0, "1475": 0, "1477": 0, "1478": 0, "1480": 0, "1482": 0, "1514": 0, "1516": 0, "1517": 0, "1519": 0, "1521": 0, "1542": 0, "1544": 0, "1545": 0, "1547": 0, "1549": 0, "1570": 0, "1572": 0, "1573": 0, "1574": 0, "1575": 0, "1576": 0, "1578": 0, "1580": 0, "1599": 0, "1600": 0, "1602": 0, "1603": 0, "1604": 0, "1606": 0, "1607": 0, "1609": 0, "1611": 0, "1612": 0, "1613": 0, "1614": 0, "1615": 0, "1617": 0, "1619": 0, "1638": 0, "1639": 0, "1641": 0, "1642": 0, "1643": 0, "1645": 0, "1646": 0, "1648": 0, "1650": 0, "1651": 0, "1652": 0, "1653": 0, "1654": 0, "1656": 0, "1675": 0, "1676": 0, "1678": 0, "1679": 0, "1680": 0, "1682": 0, "1683": 0, "1685": 0, "1687": 0, "1688": 0, "1689": 0, "1690": 0, "1691": 0, "1693": 0, "1714": 0, "1715": 0, "1717": 0, "1718": 0, "1719": 0, "1721": 0, "1722": 0, "1723": 0, "1724": 0, "1725": 0, "1727": 0, "1729": 0, "1730": 0, "1731": 0, "1732": 0, "1733": 0, "1735": 0, "1739": 0, "1740": 0, "1742": 0, "1743": 0, "1744": 0, "1746": 0, "1748": 0, "1749": 0, "1751": 0, "1752": 0, "1753": 0, "1754": 0, "1755": 0, "1777": 0, "1779": 0, "1780": 0, "1782": 0, "1798": 0, "1799": 0, "1801": 0, "1819": 0, "1820": 0, "1822": 0, "1846": 0, "1847": 0, "1848": 0, "1849": 0, "1850": 0, "1852": 0, "1853": 0, "1854": 0, "1855": 0, "1856": 0, "1878": 0, "1879": 0, "1881": 0, "1897": 0, "1898": 0, "1900": 0, "1901": 0, "1903": 0, "1905": 0, "1921": 0, "1922": 0, "1924": 0, "1926": 0, "1942": 0, "1943": 0, "1945": 0, "1982": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2014": 0, "2016": 0, "2025": 0, "2026": 0, "2048": 0, "2064": 0, "2084": 0, "2085": 0, "2101": 0, "2102": 0, "2118": 0, "2119": 0, "2121": 0, "2123": 0, "2139": 0, "2140": 0, "2142": 0, "2144": 0, "2164": 0, "2166": 0, "2167": 0, "2169": 0, "2170": 0, "2171": 0, "2173": 0, "2174": 0, "2176": 0, "2178": 0, "2180": 0, "2181": 0, "2183": 0, "2206": 0, "2208": 0, "2210": 0, "2211": 0, "2213": 0, "2214": 0, "2216": 0, "2217": 0, "2219": 0, "2220": 0, "2222": 0, "2241": 0, "2243": 0, "2244": 0, "2246": 0, "2247": 0, "2248": 0, "2250": 0, "2252": 0, "2253": 0, "2254": 0, "2256": 0, "2258": 0, "2260": 0, "2262": 0, "2281": 0, "2282": 0, "2284": 0, "2285": 0, "2286": 0, "2288": 0, "2290": 0, "2291": 0, "2292": 0, "2294": 0, "2296": 0, "2298": 0, "2300": 0, "2336": 0, "2338": 0, "2339": 0, "2340": 0, "2342": 0, "2343": 0, "2345": 0, "2346": 0, "2347": 0, "2349": 0, "2350": 0, "2352": 0, "2353": 0, "2355": 0, "2357": 0, "2359": 0, "2361": 0, "2362": 0, "2364": 0, "2365": 0, "2366": 0, "2367": 0, "2368": 0, "2370": 0, "2371": 0, "2373": 0, "2374": 0, "2376": 0, "2378": 0, "2400": 0, "2421": 0, "2423": 0, "2424": 0, "2426": 0, "2427": 0, "2429": 0, "2431": 0, "2454": 0, "2456": 0, "2457": 0, "2459": 0, "2460": 0, "2462": 0, "2464": 0, "2485": 0, "2487": 0, "2488": 0, "2490": 0, "2491": 0, "2493": 0, "2495": 0, "2524": 0, "2525": 0, "2527": 0, "2529": 0, "2547": 0, "2549": 0, "2550": 0, "2552": 0, "2554": 0, "2579": 0, "2581": 0, "2582": 0, "2583": 0, "2585": 0, "2587": 0, "2589": 0, "2590": 0, "2591": 0, "2607": 0, "2608": 0, "2610": 0, "2612": 0, "2686": 0, "2687": 0, "2761": 0, "2762": 0, "2784": 0, "2786": 0, "2787": 0, "2789": 0, "2791": 0, "2807": 0, "2809": 0, "2810": 0, "2812": 0, "2814": 0, "2830": 0, "2832": 0, "2833": 0, "2835": 0, "2837": 0, "2853": 0, "2855": 0, "2856": 0, "2858": 0, "2860": 0, "2879": 0, "2881": 0, "2882": 0, "2884": 0, "2885": 0, "2887": 0, "2889": 0, "2905": 0, "2906": 0, "2908": 0, "2910": 0, "2926": 0, "2927": 0, "2929": 0, "2931": 0, "2947": 0, "2949": 0, "2950": 0, "2952": 0, "2954": 0, "2970": 0, "2971": 0, "2973": 0, "2975": 0, "2991": 0, "2992": 0, "2994": 0, "2996": 0, "3013": 0, "3014": 0, "3015": 0, "3017": 0, "3018": 0, "3020": 0, "3022": 0, "3041": 0, "3043": 0, "3044": 0, "3046": 0, "3047": 0, "3049": 0, "3051": 0, "3069": 0, "3070": 0, "3072": 0, "3074": 0, "3104": 0, "3105": 0, "3107": 0, "3109": 0, "3135": 0, "3136": 0, "3138": 0, "3140": 0, "3156": 0, "3157": 0, "3159": 0, "3161": 0, "3185": 0, "3186": 0, "3188": 0, "3190": 0, "3218": 0, "3219": 0, "3221": 0, "3223": 0, "3242": 0, "3243": 0, "3244": 0, "3245": 0, "3246": 0, "3248": 0, "3250": 0, "3269": 0, "3270": 0, "3271": 0, "3272": 0, "3273": 0, "3275": 0, "3277": 0, "3305": 0, "3306": 0, "3308": 0, "3309": 0, "3311": 0, "3312": 0, "3313": 0, "3314": 0, "3316": 0, "3317": 0, "3318": 0, "3320": 0, "3322": 0, "3323": 0, "3327": 0, "3328": 0, "3330": 0, "3335": 0, "3337": 0, "3339": 0, "3343": 0, "3344": 0, "3346": 0, "3351": 0, "3353": 0, "3324": 0, "3325": 0, "3331": 0, "3332": 0, "3333": 0, "3340": 0, "3341": 0, "3347": 0, "3348": 0, "3349": 0, "3369": 0, "3370": 0, "3372": 0, "3374": 0, "3375": 0, "3377": 0, "3378": 0, "3380": 0, "3381": 0, "3382": 0, "3383": 0, "3385": 0, "3386": 0, "3388": 0, "3390": 0, "3408": 0, "3410": 0, "3411": 0, "3413": 0, "3414": 0, "3416": 0, "3418": 0, "3419": 0, "3421": 0, "3423": 0, "3424": 0, "3426": 0, "3427": 0, "3429": 0, "3431": 0, "3432": 0, "3434": 0, "3436": 0, "3437": 0, "3438": 0, "3440": 0, "3442": 0, "3443": 0, "3445": 0, "3446": 0, "3448": 0, "3449": 0, "3451": 0, "3453": 0, "3482": 0, "3500": 0, "3502": 0, "3503": 0, "3505": 0, "3525": 0, "3527": 0, "3528": 0, "3530": 0, "3557": 0, "3558": 0, "3559": 0, "3561": 0, "3562": 0, "3567": 0, "3568": 0, "3569": 0, "3570": 0, "3571": 0, "3572": 0, "3573": 0, "3575": 0, "3576": 0, "3577": 0, "3578": 0, "3579": 0, "3580": 0, "3581": 0, "3583": 0, "3584": 0, "3586": 0, "3589": 0, "3590": 0, "3594": 0, "3595": 0, "3596": 0, "3597": 0, "3598": 0, "3599": 0, "3601": 0, "3603": 0, "3619": 0, "3620": 0, "3621": 0, "3623": 0, "3625": 0, "3626": 0, "3627": 0, "3628": 0, "3630": 0, "3654": 0, "3655": 0, "3656": 0, "3658": 0, "3660": 0, "3661": 0, "3663": 0, "3665": 0, "3666": 0, "3668": 0, "3670": 0, "3689": 0, "3691": 0, "3692": 0, "3694": 0, "3696": 0, "3697": 0, "3698": 0, "3700": 0, "3702": 0, "3703": 0, "3705": 0, "3707": 0, "3726": 0, "3745": 0, "3764": 0, "3783": 0, "3802": 0, "3823": 0, "3842": 0, "3861": 0, "3880": 0, "3904": 0, "3923": 0, "3946": 0, "3969": 0, "3993": 0, "3996": 0, "3999": 0, "4003": 0, "4004": 0, "4005": 0, "4006": 0, "4007": 0, "4009": 0, "4013": 0, "4014": 0, "4015": 0, "4016": 0, "4017": 0, "4019": 0, "4023": 0, "4024": 0, "4025": 0, "4026": 0, "4027": 0, "4029": 0, "4033": 0, "4034": 0, "4035": 0, "4036": 0, "4037": 0, "4039": 0, "4043": 0, "4044": 0, "4045": 0, "4046": 0, "4047": 0, "4049": 0, "4053": 1, "4054": 1, "4055": 1, "4056": 0, "4057": 0, "4059": 1, "4063": 0, "4064": 0, "4066": 0, "4070": 0, "4071": 0, "4073": 0, "4077": 0, "4078": 0, "4080": 0, "4084": 0, "4085": 0, "4087": 0, "4091": 0, "4092": 0, "4094": 0, "4098": 0, "4099": 0, "4101": 0, "4105": 0, "4106": 0, "4108": 0, "4112": 0, "4116": 0, "4123": 0, "4125": 0, "4126": 0, "4127": 0, "4128": 0, "4129": 0, "4131": 0, "4132": 0, "4134": 0, "4135": 0, "4136": 0, "4137": 0, "4138": 0, "4140": 0, "4141": 0, "4143": 0, "4147": 0, "4150": 0, "4155": 0, "4156": 0, "4158": 0, "4161": 0, "4164": 0, "4171": 1, "4175": 1, "4178": 1, "4179": 1, "4199": 1, "4200": 1, "4223": 1, "4226": 1, "4173": 0, "4176": 0, "4197": 0, "4201": 0, "4203": 0, "4204": 0, "4205": 0, "4206": 0, "4207": 0, "4209": 0, "4210": 0, "4212": 0, "4213": 0, "4214": 0, "4215": 0, "4216": 0, "4218": 0, "4219": 0, "4221": 0, "4224": 0, "4227": 0, "4229": 0, "4230": 0, "4231": 0, "4232": 0, "4233": 0, "4235": 0, "4236": 0, "4238": 0, "4239": 0, "4241": 0, "4242": 0, "4244": 0, "4246": 0, "4247": 0, "4249": 0, "4258": 0, "4250": 0, "4251": 0, "4253": 0, "4254": 0, "4256": 0, "4264": 0, "4265": 0, "4270": 0, "4272": 0, "4273": 0, "4274": 0, "4275": 0, "4277": 0, "4278": 0, "4280": 0, "4281": 0, "4283": 0, "4284": 0, "4285": 0, "4287": 0, "4288": 0, "4289": 0, "4291": 0, "4292": 0, "4294": 0, "4295": 0, "4297": 0, "4299": 0, "4300": 0, "4302": 0, "4303": 0, "4305": 0, "4311": 0, "4312": 0, "4317": 0, "4319": 0, "4320": 0, "4322": 0, "4323": 0, "4324": 0, "4326": 0, "4328": 0, "4329": 0, "4331": 0, "4332": 0, "4334": 0, "4336": 0, "4337": 0, "4339": 0, "4341": 0, "4342": 0, "4344": 0, "4345": 0, "4346": 0, "4348": 0, "4350": 0, "4351": 0, "4353": 0, "4355": 0, "4357": 0, "4358": 0, "4360": 0, "4362": 0, "4363": 0, "4365": 0, "4366": 0, "4367": 0, "4369": 0, "4370": 0, "4371": 0, "4373": 0, "4375": 0, "4376": 0, "4378": 0, "4379": 0, "4381": 0, "4382": 0, "4384": 0, "4386": 0, "4388": 0, "4389": 0, "4391": 0, "4393": 0, "4394": 0, "4395": 0, "4397": 0, "4399": 0, "4400": 0, "4401": 0, "4402": 0, "4404": 0, "4405": 0, "4407": 0, "4412": 0, "4414": 0, "4415": 0, "4417": 0, "4446": 0, "4447": 0, "4448": 0, "4449": 0, "4451": 0, "4452": 0, "4453": 0, "4455": 0, "4456": 0, "4458": 0, "4459": 0, "4461": 0, "4462": 0, "4463": 0, "4464": 0, "4465": 0, "4469": 0, "4471": 0, "4514": 0, "4515": 0, "4516": 0, "4517": 0, "4518": 0, "4520": 0, "4521": 0, "4522": 0, "4524": 0, "4542": 0, "4544": 0, "4545": 0, "4546": 0, "4547": 0, "4549": 0, "4551": 0, "4569": 0, "4571": 0, "4572": 0, "4573": 0, "4574": 0, "4576": 0, "4594": 0, "4596": 0, "4597": 0, "4598": 0, "4599": 0, "4601": 0, "4602": 0, "4620": 0, "4622": 0, "4623": 0, "4624": 0, "4625": 0, "4627": 0, "4628": 0, "4646": 0, "4648": 0, "4649": 0, "4650": 0, "4651": 0, "4653": 0, "4655": 0, "4656": 0, "4658": 0, "4676": 0, "4678": 0, "4679": 0, "4680": 0, "4681": 0, "4683": 0, "4685": 0, "4686": 0, "4688": 0, "4708": 0, "4710": 0, "4711": 0, "4712": 0, "4713": 0, "4715": 0, "4716": 0, "4717": 0, "4718": 0, "4720": 0, "4721": 0, "4723": 0, "4746": 0, "4748": 0, "4749": 0, "4750": 0, "4751": 0, "4753": 0, "4755": 0, "4756": 0, "4758": 0, "4778": 0, "4780": 0, "4781": 0, "4782": 0, "4783": 0, "4785": 0, "4787": 0, "4788": 0, "4790": 0, "4810": 0, "4812": 0, "4813": 0, "4814": 0, "4815": 0, "4817": 0, "4819": 0, "4820": 0, "4822": 0, "4842": 0, "4844": 0, "4845": 0, "4846": 0, "4847": 0, "4849": 0, "4851": 0, "4852": 0, "4854": 0, "4877": 0, "4879": 0, "4880": 0, "4881": 0, "4882": 0, "4884": 0, "4886": 0, "4887": 0, "4889": 0, "4909": 0, "4911": 0, "4912": 0, "4913": 0, "4914": 0, "4916": 0, "4917": 0, "4918": 0, "4919": 0, "4921": 0, "4923": 0, "4925": 0, "4926": 0, "4928": 0, "4948": 0, "4950": 0, "4951": 0, "4952": 0, "4953": 0, "4955": 0, "4956": 0, "4957": 0, "4958": 0, "4960": 0, "4962": 0, "4964": 0, "4965": 0, "4967": 0, "5002": 0, "5004": 0, "5005": 0, "5006": 0, "5007": 0, "5009": 0, "5010": 0, "5011": 0, "5012": 0, "5014": 0, "5016": 0, "5017": 0, "5019": 0, "5037": 0, "5039": 0, "5040": 0, "5041": 0, "5042": 0, "5044": 0, "5046": 0, "5047": 0, "5049": 0, "5067": 0, "5068": 0, "5070": 0, "5071": 0, "5072": 0, "5073": 0, "5075": 0, "5076": 0, "5078": 0, "5080": 0, "5081": 0, "5082": 0, "5083": 0, "5085": 0, "5086": 0, "5087": 0, "5105": 0, "5107": 0, "5108": 0, "5109": 0, "5110": 0, "5112": 0, "5114": 0, "5115": 0, "5117": 0, "5139": 0, "5141": 0, "5142": 0, "5143": 0, "5144": 0, "5146": 0, "5147": 0, "5148": 0, "5149": 0, "5151": 0, "5153": 0, "5155": 0, "5156": 0, "5158": 0, "5176": 0, "5178": 0, "5197": 0, "5199": 0, "5200": 0, "5202": 0, "5204": 0, "5205": 0, "5206": 0, "5207": 0, "5209": 0, "5210": 0, "5212": 0, "5214": 0, "5215": 0, "5216": 0, "5218": 0, "5220": 0, "5222": 0, "5223": 0, "5225": 0, "5226": 0, "5228": 0, "5229": 0, "5231": 0, "5179": 0, "5180": 0, "5182": 0, "5183": 0, "5184": 0, "5185": 0, "5187": 0, "5188": 0, "5190": 0, "5191": 0, "5193": 0, "5195": 0, "5249": 0, "5250": 0, "5251": 0, "5253": 0, "5254": 0, "5255": 0, "5257": 0, "5259": 0, "5260": 0, "5261": 0, "5262": 0, "5264": 0, "5265": 0, "5266": 0, "5267": 0, "5269": 0, "5271": 0, "5272": 0, "5274": 0, "5292": 0, "5294": 0, "5310": 0, "5312": 0, "5313": 0, "5315": 0, "5317": 0, "5318": 0, "5319": 0, "5320": 0, "5322": 0, "5323": 0, "5325": 0, "5327": 0, "5328": 0, "5329": 0, "5331": 0, "5333": 0, "5335": 0, "5336": 0, "5338": 0, "5339": 0, "5341": 0, "5295": 0, "5296": 0, "5298": 0, "5299": 0, "5300": 0, "5301": 0, "5303": 0, "5304": 0, "5306": 0, "5308": 0, "5359": 0, "5360": 0, "5361": 0, "5363": 0, "5364": 0, "5365": 0, "5367": 0, "5369": 0, "5370": 0, "5371": 0, "5372": 0, "5374": 0, "5375": 0, "5376": 0, "5377": 0, "5379": 0, "5381": 0, "5382": 0, "5384": 0, "5453": 0, "5455": 0, "5456": 0, "5457": 0, "5459": 0, "5460": 0, "5461": 0, "5462": 0, "5463": 0, "5465": 0, "5466": 0, "5468": 0, "5469": 0, "5471": 0, "5472": 0, "5473": 0, "5474": 0, "5476": 0, "5478": 0, "5479": 0, "5480": 0, "5482": 0, "5484": 0, "5485": 0, "5487": 0, "5489": 0, "5490": 0, "5491": 0, "5492": 0, "5493": 0, "5495": 0, "5496": 0, "5499": 0, "5500": 0, "5518": 0, "5520": 0, "5521": 0, "5522": 0, "5523": 0, "5525": 0, "5527": 0, "5528": 0, "5530": 0, "5548": 0, "5550": 0, "5551": 0, "5552": 0, "5553": 0, "5555": 0, "5557": 0, "5558": 0, "5560": 0, "5578": 0, "5580": 0, "5581": 0, "5582": 0, "5583": 0, "5585": 0, "5620": 0, "5622": 0, "5623": 0, "5624": 0, "5625": 0, "5627": 0, "5628": 0, "5629": 0, "5631": 0, "5649": 0, "5651": 0, "5652": 0, "5653": 0, "5654": 0, "5656": 0, "5658": 0, "5659": 0, "5661": 0, "5679": 0, "5681": 0, "5682": 0, "5683": 0, "5684": 0, "5686": 0, "5688": 0, "5689": 0, "5691": 0, "5709": 0, "5711": 0, "5712": 0, "5713": 0, "5714": 0, "5716": 0, "5718": 0, "5719": 0, "5721": 0, "5756": 0, "5758": 0, "5759": 0, "5760": 0, "5761": 0, "5763": 0, "5765": 0, "5766": 0, "5768": 0, "5774": 0, "5796": 0, "5798": 0, "5799": 0, "5800": 0, "5801": 0, "5803": 0, "5805": 0, "5806": 0, "5808": 0, "5826": 0, "5828": 0, "5829": 0, "5830": 0, "5831": 0, "5833": 0, "5835": 0, "5836": 0, "5838": 0, "5843": 0, "5844": 0, "5849": 0, "5854": 0, "5845": 0, "5846": 0, "5847": 0, "5850": 0, "5851": 0, "5852": 0, "5859": 0, "5864": 0, "5866": 0, "5867": 0, "5868": 0, "5869": 0, "5870": 0, "5871": 0, "5872": 0, "5873": 0, "5874": 0, "5875": 0, "5876": 0, "5877": 0, "5878": 0, "5879": 0, "5880": 0, "5881": 0, "5882": 0, "5884": 0, "5886": 0, "5887": 0, "5888": 0, "5889": 0, "5891": 0, "5893": 0, "5894": 0, "5895": 0, "5896": 0, "5897": 0, "5898": 0, "5900": 0, "5902": 0, "5903": 0, "5904": 0, "5905": 0, "5907": 0, "5909": 0, "5910": 0, "5911": 0, "5913": 0, "5915": 0, "5917": 0, "5922": 0, "5923": 0, "5924": 0, "5925": 0, "5926": 0, "5927": 0, "5928": 0, "5929": 0, "5930": 0, "5932": 0, "5937": 0, "5938": 0, "5940": 0, "5942": 0, "5943": 0, "5945": 0, "5946": 0, "5948": 0, "5949": 0, "5951": 0, "5953": 0, "5954": 0, "5955": 0, "5956": 0, "5957": 0, "5959": 0, "5960": 0, "5962": 0, "5963": 0, "5964": 0, "5966": 0, "5968": 0, "5969": 0, "5971": 0, "5973": 0, "5978": 0, "5979": 0, "5980": 0, "6021": 0, "6023": 0, "6058": 0, "6086": 0, "6106": 0, "6107": 0, "6108": 0, "6109": 0, "6110": 0, "6112": 0, "6113": 0, "6114": 0, "6115": 0, "6031": 0, "6032": 0, "6033": 0, "6034": 0, "6035": 0, "6036": 0, "6037": 0, "6038": 0, "6039": 0, "6040": 0, "6041": 0, "6042": 0, "6043": 0, "6044": 0, "6045": 0, "6046": 0, "6048": 0, "6049": 0, "6050": 0, "6051": 0, "6052": 0, "6053": 0, "6054": 0, "6055": 0, "6056": 0, "6066": 0, "6067": 0, "6068": 0, "6069": 0, "6070": 0, "6071": 0, "6072": 0, "6073": 0, "6074": 0, "6075": 0, "6076": 0, "6077": 0, "6079": 0, "6080": 0, "6081": 0, "6082": 0, "6083": 0, "6084": 0, "6090": 0, "6091": 0, "6092": 0, "6093": 0, "6094": 0, "6095": 0, "6096": 0, "6098": 0, "6099": 0, "6100": 0, "6101": 0, "6102": 0, "6103": 0, "6104": 0, "6097": 0, "6140": 0, "6141": 0, "6142": 0, "6143": 0, "6144": 0, "6145": 0, "6146": 0, "6147": 0, "6148": 0, "6149": 0, "6150": 0, "6151": 0, "6152": 0, "6153": 0, "6155": 0, "6156": 0, "6157": 0, "6158": 0, "6159": 0, "6177": 0, "6195": 0, "6213": 0, "6276": 0, "6277": 0, "6278": 0, "6279": 0, "6280": 0, "6281": 0, "6282": 0, "6283": 0, "6284": 0, "6286": 0, "6287": 0, "6288": 0, "6289": 0, "6290": 0, "6291": 0, "6293": 0, "6313": 0, "6314": 0, "6315": 0, "6316": 0, "6317": 0, "6319": 0, "6321": 0, "6323": 0, "6324": 0, "6326": 0, "6327": 0, "6329": 0, "6330": 0, "6332": 0, "6333": 0, "6335": 0, "6336": 0, "6337": 0, "6338": 0, "6340": 0, "6341": 0, "6343": 0, "6345": 0, "6346": 0, "6347": 0, "6349": 0, "6367": 0, "6368": 0, "6369": 0, "6370": 0, "6371": 0, "6373": 0, "6396": 0, "6397": 0, "6398": 0, "6399": 0, "6401": 0, "6419": 0, "6420": 0, "6421": 0, "6422": 0, "6423": 0, "6425": 0, "6445": 0, "6446": 0, "6447": 0, "6448": 0, "6449": 0, "6451": 0, "6469": 0, "6471": 0, "6472": 0, "6473": 0, "6474": 0, "6476": 0, "6503": 0, "6505": 0, "6506": 0, "6507": 0, "6508": 0, "6510": 0, "6512": 0, "6513": 0, "6515": 0, "6535": 0, "6536": 0, "6537": 0, "6539": 0, "6541": 0, "6542": 0, "6543": 0, "6544": 0, "6545": 0, "6547": 0, "6548": 0, "6549": 0, "6550": 0, "6552": 0, "6554": 0, "6555": 0, "6556": 0, "6557": 0, "6558": 0, "6560": 0, "6561": 0, "6562": 0, "6563": 0, "6565": 0, "6566": 0, "6568": 0, "6569": 0, "6570": 0, "6572": 0, "6573": 0, "6574": 0, "6575": 0, "6577": 0, "6578": 0, "6579": 0, "6580": 0, "6581": 0, "6582": 0, "6583": 0, "6584": 0, "6586": 0, "6588": 0, "6589": 0, "6591": 0, "6592": 0, "6594": 0, "6567": 0, "6617": 0, "6619": 0, "6620": 0, "6621": 0, "6622": 0, "6624": 0, "6625": 0, "6627": 0, "6628": 0, "6629": 0, "6631": 0, "6632": 0, "6634": 0, "6635": 0, "6636": 0, "6638": 0, "6640": 0, "6641": 0, "6643": 0, "6644": 0, "6645": 0, "6646": 0, "6647": 0, "6649": 0, "6651": 0, "6652": 0, "6654": 0, "6708": 0, "6726": 0, "6733": 1, "6752": 1, "6753": 1, "6761": 1, "6762": 1, "6765": 1, "6766": 1, "6769": 1, "6770": 1, "6773": 1, "6774": 1, "6777": 1, "6778": 1, "6781": 1, "6782": 1, "6785": 1, "6788": 1, "6794": 1, "6802": 1, "6805": 1, "6813": 1, "6816": 1, "6817": 1, "6848": 1, "6914": 1, "6979": 1, "6735": 0, "6737": 0, "6738": 0, "6739": 0, "6740": 0, "6742": 0, "6743": 0, "6745": 0, "6747": 0, "6748": 0, "6750": 0, "6754": 0, "6756": 0, "6757": 0, "6759": 0, "6763": 0, "6767": 0, "6771": 0, "6775": 0, "6779": 0, "6783": 0, "6786": 0, "6789": 0, "6790": 0, "6792": 0, "6795": 0, "6796": 0, "6798": 0, "6800": 0, "6803": 0, "6806": 0, "6807": 0, "6808": 0, "6809": 0, "6811": 0, "6814": 0, "6831": 0, "6834": 0, "6835": 0, "6837": 0, "6838": 0, "6840": 0, "6841": 0, "6846": 0, "6832": 0, "6879": 0, "6881": 0, "6882": 0, "6884": 0, "6885": 0, "6887": 0, "6888": 0, "6890": 0, "6891": 0, "6893": 0, "6894": 0, "6895": 0, "6898": 0, "6899": 0, "6901": 0, "6902": 0, "6903": 0, "6905": 0, "6906": 0, "6908": 0, "6909": 0, "6910": 0, "6912": 0, "6942": 0, "6943": 0, "6945": 0, "6946": 0, "6948": 0, "6950": 0, "6951": 0, "6952": 0, "6954": 0, "6955": 0, "6957": 0, "6958": 0, "6959": 0, "6961": 0, "6963": 0, "6964": 0, "6966": 0, "6967": 0, "6968": 0, "6969": 0, "6970": 0, "6972": 0, "6974": 0, "6975": 0, "6977": 0, "6998": 0, "7016": 0, "7018": 0, "7070": 0, "7072": 0, "7073": 0, "7075": 0, "7076": 0, "7078": 0, "7080": 0, "7019": 0, "7021": 0, "7022": 0, "7024": 0, "7025": 0, "7026": 0, "7027": 0, "7028": 0, "7029": 0, "7030": 0, "7032": 0, "7034": 0, "7035": 0, "7037": 0, "7039": 0, "7040": 0, "7042": 0, "7043": 0, "7045": 0, "7046": 0, "7048": 0, "7050": 0, "7052": 0, "7053": 0, "7055": 0, "7057": 0, "7058": 0, "7060": 0, "7061": 0, "7063": 0, "7064": 0, "7066": 0, "7068": 0}}
{"/testbed/sympy/polys/polytools.py": {"3": 1, "5": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "17": 1, "19": 1, "21": 1, "30": 1, "31": 1, "32": 1, "33": 1, "34": 1, "35": 1, "37": 1, "48": 1, "50": 1, "51": 1, "52": 1, "54": 1, "55": 1, "57": 1, "59": 1, "61": 2, "62": 1, "4167": 2, "4168": 1, "4261": 1, "4262": 1, "4268": 1, "4308": 1, "4309": 1, "4315": 1, "4410": 1, "4420": 1, "4421": 1, "4474": 1, "4475": 1, "4527": 1, "4528": 1, "4554": 1, "4555": 1, "4579": 1, "4580": 1, "4605": 1, "4606": 1, "4631": 1, "4632": 1, "4661": 1, "4662": 1, "4691": 1, "4692": 1, "4726": 1, "4727": 1, "4761": 1, "4762": 1, "4793": 1, "4794": 1, "4825": 1, "4826": 1, "4857": 1, "4858": 1, "4892": 1, "4893": 1, "4931": 1, "4932": 1, "4970": 1, "4971": 1, "5022": 1, "5023": 1, "5052": 1, "5053": 1, "5090": 1, "5091": 1, "5120": 1, "5121": 1, "5161": 1, "5162": 1, "5234": 1, "5235": 1, "5277": 1, "5278": 1, "5344": 1, "5345": 1, "5387": 1, "5388": 1, "5503": 1, "5504": 1, "5533": 1, "5534": 1, "5563": 1, "5564": 1, "5588": 1, "5589": 1, "5634": 1, "5635": 1, "5664": 1, "5665": 1, "5694": 1, "5695": 1, "5724": 1, "5725": 1, "5771": 1, "5772": 1, "5777": 1, "5778": 1, "5811": 1, "5812": 1, "5841": 1, "5857": 1, "5862": 1, "5920": 1, "5935": 1, "5976": 1, "5983": 1, "6118": 1, "6162": 1, "6163": 1, "6180": 1, "6181": 1, "6198": 1, "6199": 1, "6216": 1, "6217": 1, "6296": 1, "6297": 1, "6352": 1, "6353": 1, "6376": 1, "6377": 1, "6404": 1, "6405": 1, "6428": 1, "6429": 1, "6454": 1, "6455": 1, "6479": 1, "6480": 1, "6518": 1, "6519": 1, "6597": 1, "6598": 1, "6657": 1, "6658": 1, "6711": 1, "6712": 1, "6729": 2, "6730": 1, "7001": 1, "7002": 1, "105": 1, "107": 1, "108": 1, "109": 1, "111": 1, "131": 1, "132": 1, "147": 1, "148": 1, "153": 1, "154": 1, "159": 1, "160": 1, "165": 1, "166": 1, "171": 1, "172": 1, "191": 1, "192": 1, "213": 1, "214": 1, "236": 1, "237": 1, "242": 1, "246": 1, "249": 1, "250": 1, "280": 1, "281": 1, "310": 1, "311": 1, "327": 1, "328": 1, "344": 1, "345": 1, "349": 1, "350": 1, "354": 1, "355": 1, "359": 1, "360": 1, "364": 1, "392": 1, "443": 1, "472": 1, "477": 1, "481": 1, "498": 1, "519": 1, "532": 1, "555": 1, "589": 1, "615": 1, "651": 1, "685": 1, "706": 1, "727": 1, "748": 1, "772": 1, "788": 1, "810": 1, "830": 1, "850": 1, "866": 1, "886": 1, "902": 1, "939": 1, "955": 1, "974": 1, "981": 1, "1018": 1, "1039": 1, "1060": 1, "1097": 1, "1139": 1, "1160": 1, "1181": 1, "1202": 1, "1223": 1, "1247": 1, "1273": 1, "1294": 1, "1318": 1, "1349": 1, "1380": 1, "1411": 1, "1435": 1, "1461": 1, "1484": 1, "1523": 1, "1551": 1, "1582": 1, "1621": 1, "1658": 1, "1695": 1, "1737": 1, "1757": 1, "1784": 1, "1803": 1, "1824": 1, "1858": 1, "1883": 1, "1907": 1, "1928": 1, "1947": 1, "1984": 1, "2018": 1, "2030": 1, "2050": 1, "2066": 1, "2087": 1, "2104": 1, "2125": 1, "2146": 1, "2185": 1, "2224": 1, "2264": 1, "2302": 1, "2303": 1, "2305": 1, "2380": 1, "2402": 1, "2433": 1, "2466": 1, "2497": 1, "2531": 1, "2556": 1, "2593": 1, "2614": 1, "2689": 1, "2764": 1, "2793": 1, "2816": 1, "2839": 1, "2862": 1, "2891": 1, "2912": 1, "2933": 1, "2956": 1, "2977": 1, "2998": 1, "3024": 1, "3053": 1, "3076": 1, "3111": 1, "3142": 1, "3163": 1, "3192": 1, "3225": 1, "3252": 1, "3279": 1, "3355": 1, "3392": 1, "3455": 1, "3484": 1, "3507": 1, "3532": 1, "3605": 1, "3632": 1, "3672": 1, "3709": 1, "3710": 1, "3728": 1, "3729": 1, "3747": 1, "3748": 1, "3766": 1, "3767": 1, "3785": 1, "3786": 1, "3804": 1, "3805": 1, "3825": 1, "3826": 1, "3844": 1, "3845": 1, "3863": 1, "3864": 1, "3882": 1, "3883": 1, "3906": 1, "3907": 1, "3925": 1, "3926": 1, "3948": 1, "3949": 1, "3971": 1, "3972": 1, "3995": 1, "3998": 1, "4001": 1, "4002": 1, "4011": 1, "4012": 1, "4021": 1, "4022": 1, "4031": 1, "4032": 1, "4041": 1, "4042": 1, "4051": 1, "4052": 1, "4061": 1, "4062": 1, "4068": 1, "4069": 1, "4075": 1, "4076": 1, "4082": 1, "4083": 1, "4089": 1, "4090": 1, "4096": 1, "4097": 1, "4103": 1, "4104": 1, "4110": 1, "4111": 1, "4114": 1, "4115": 1, "4118": 1, "4119": 1, "4121": 1, "4122": 1, "4145": 1, "4146": 1, "4149": 1, "4152": 1, "4154": 1, "4160": 1, "4163": 1, "113": 0, "115": 0, "116": 0, "118": 0, "119": 0, "120": 0, "122": 0, "124": 0, "126": 0, "127": 0, "129": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "140": 0, "142": 0, "143": 0, "145": 0, "150": 0, "151": 0, "156": 0, "157": 0, "162": 0, "163": 0, "168": 0, "169": 0, "174": 0, "176": 0, "177": 0, "178": 0, "180": 0, "181": 0, "183": 0, "184": 0, "186": 0, "187": 0, "189": 0, "194": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "203": 0, "204": 0, "206": 0, "207": 0, "209": 0, "211": 0, "216": 0, "217": 0, "219": 0, "220": 0, "221": 0, "223": 0, "224": 0, "225": 0, "227": 0, "229": 0, "230": 0, "231": 0, "232": 0, "234": 0, "239": 0, "240": 0, "244": 0, "247": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "278": 0, "299": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "308": 0, "325": 0, "342": 0, "347": 0, "352": 0, "357": 0, "362": 0, "389": 0, "390": 0, "393": 0, "395": 0, "396": 0, "397": 0, "398": 0, "399": 0, "401": 0, "402": 0, "404": 0, "406": 0, "407": 0, "408": 0, "410": 0, "411": 0, "413": 0, "415": 0, "417": 0, "418": 0, "419": 0, "421": 0, "422": 0, "424": 0, "426": 0, "428": 0, "430": 0, "432": 0, "441": 0, "433": 0, "434": 0, "436": 0, "437": 0, "439": 0, "461": 0, "462": 0, "464": 0, "465": 0, "467": 0, "468": 0, "470": 0, "474": 0, "475": 0, "479": 0, "495": 0, "496": 0, "512": 0, "514": 0, "515": 0, "517": 0, "521": 0, "522": 0, "523": 0, "525": 0, "526": 0, "527": 0, "528": 0, "530": 0, "546": 0, "547": 0, "549": 0, "550": 0, "551": 0, "553": 0, "569": 0, "570": 0, "571": 0, "573": 0, "574": 0, "576": 0, "577": 0, "579": 0, "580": 0, "582": 0, "583": 0, "584": 0, "585": 0, "587": 0, "603": 0, "605": 0, "606": 0, "607": 0, "608": 0, "609": 0, "611": 0, "613": 0, "634": 0, "635": 0, "637": 0, "639": 0, "641": 0, "643": 0, "645": 0, "647": 0, "649": 0, "667": 0, "669": 0, "670": 0, "671": 0, "672": 0, "673": 0, "674": 0, "676": 0, "678": 0, "679": 0, "680": 0, "681": 0, "683": 0, "699": 0, "700": 0, "702": 0, "704": 0, "720": 0, "721": 0, "723": 0, "725": 0, "741": 0, "742": 0, "744": 0, "746": 0, "768": 0, "769": 0, "770": 0, "774": 0, "775": 0, "777": 0, "779": 0, "781": 0, "782": 0, "784": 0, "786": 0, "808": 0, "828": 0, "848": 0, "864": 0, "884": 0, "900": 0, "920": 0, "922": 0, "923": 0, "925": 0, "926": 0, "928": 0, "930": 0, "931": 0, "932": 0, "934": 0, "935": 0, "937": 0, "953": 0, "969": 0, "970": 0, "972": 0, "976": 0, "977": 0, "979": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1005": 0, "1007": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1014": 0, "1016": 0, "1032": 0, "1033": 0, "1035": 0, "1037": 0, "1053": 0, "1054": 0, "1056": 0, "1058": 0, "1078": 0, "1080": 0, "1081": 0, "1082": 0, "1083": 0, "1085": 0, "1086": 0, "1088": 0, "1090": 0, "1091": 0, "1093": 0, "1095": 0, "1115": 0, "1117": 0, "1118": 0, "1120": 0, "1122": 0, "1123": 0, "1124": 0, "1125": 0, "1127": 0, "1128": 0, "1130": 0, "1132": 0, "1133": 0, "1135": 0, "1137": 0, "1153": 0, "1154": 0, "1156": 0, "1158": 0, "1174": 0, "1175": 0, "1177": 0, "1179": 0, "1195": 0, "1196": 0, "1198": 0, "1200": 0, "1216": 0, "1217": 0, "1219": 0, "1221": 0, "1240": 0, "1241": 0, "1243": 0, "1245": 0, "1266": 0, "1267": 0, "1269": 0, "1271": 0, "1287": 0, "1288": 0, "1290": 0, "1292": 0, "1311": 0, "1312": 0, "1314": 0, "1316": 0, "1335": 0, "1337": 0, "1338": 0, "1340": 0, "1342": 0, "1343": 0, "1345": 0, "1347": 0, "1366": 0, "1368": 0, "1369": 0, "1371": 0, "1373": 0, "1374": 0, "1376": 0, "1378": 0, "1397": 0, "1399": 0, "1400": 0, "1402": 0, "1404": 0, "1405": 0, "1407": 0, "1409": 0, "1428": 0, "1429": 0, "1431": 0, "1433": 0, "1452": 0, "1454": 0, "1455": 0, "1457": 0, "1459": 0, "1475": 0, "1477": 0, "1478": 0, "1480": 0, "1482": 0, "1514": 0, "1516": 0, "1517": 0, "1519": 0, "1521": 0, "1542": 0, "1544": 0, "1545": 0, "1547": 0, "1549": 0, "1570": 0, "1572": 0, "1573": 0, "1574": 0, "1575": 0, "1576": 0, "1578": 0, "1580": 0, "1599": 0, "1600": 0, "1602": 0, "1603": 0, "1604": 0, "1606": 0, "1607": 0, "1609": 0, "1611": 0, "1612": 0, "1613": 0, "1614": 0, "1615": 0, "1617": 0, "1619": 0, "1638": 0, "1639": 0, "1641": 0, "1642": 0, "1643": 0, "1645": 0, "1646": 0, "1648": 0, "1650": 0, "1651": 0, "1652": 0, "1653": 0, "1654": 0, "1656": 0, "1675": 0, "1676": 0, "1678": 0, "1679": 0, "1680": 0, "1682": 0, "1683": 0, "1685": 0, "1687": 0, "1688": 0, "1689": 0, "1690": 0, "1691": 0, "1693": 0, "1714": 0, "1715": 0, "1717": 0, "1718": 0, "1719": 0, "1721": 0, "1722": 0, "1723": 0, "1724": 0, "1725": 0, "1727": 0, "1729": 0, "1730": 0, "1731": 0, "1732": 0, "1733": 0, "1735": 0, "1739": 0, "1740": 0, "1742": 0, "1743": 0, "1744": 0, "1746": 0, "1748": 0, "1749": 0, "1751": 0, "1752": 0, "1753": 0, "1754": 0, "1755": 0, "1777": 0, "1779": 0, "1780": 0, "1782": 0, "1798": 0, "1799": 0, "1801": 0, "1819": 0, "1820": 0, "1822": 0, "1846": 0, "1847": 0, "1848": 0, "1849": 0, "1850": 0, "1852": 0, "1853": 0, "1854": 0, "1855": 0, "1856": 0, "1878": 0, "1879": 0, "1881": 0, "1897": 0, "1898": 0, "1900": 0, "1901": 0, "1903": 0, "1905": 0, "1921": 0, "1922": 0, "1924": 0, "1926": 0, "1942": 0, "1943": 0, "1945": 0, "1982": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2014": 0, "2016": 0, "2025": 0, "2026": 0, "2048": 0, "2064": 0, "2084": 0, "2085": 0, "2101": 0, "2102": 0, "2118": 0, "2119": 0, "2121": 0, "2123": 0, "2139": 0, "2140": 0, "2142": 0, "2144": 0, "2164": 0, "2166": 0, "2167": 0, "2169": 0, "2170": 0, "2171": 0, "2173": 0, "2174": 0, "2176": 0, "2178": 0, "2180": 0, "2181": 0, "2183": 0, "2206": 0, "2208": 0, "2210": 0, "2211": 0, "2213": 0, "2214": 0, "2216": 0, "2217": 0, "2219": 0, "2220": 0, "2222": 0, "2241": 0, "2243": 0, "2244": 0, "2246": 0, "2247": 0, "2248": 0, "2250": 0, "2252": 0, "2253": 0, "2254": 0, "2256": 0, "2258": 0, "2260": 0, "2262": 0, "2281": 0, "2282": 0, "2284": 0, "2285": 0, "2286": 0, "2288": 0, "2290": 0, "2291": 0, "2292": 0, "2294": 0, "2296": 0, "2298": 0, "2300": 0, "2336": 0, "2338": 0, "2339": 0, "2340": 0, "2342": 0, "2343": 0, "2345": 0, "2346": 0, "2347": 0, "2349": 0, "2350": 0, "2352": 0, "2353": 0, "2355": 0, "2357": 0, "2359": 0, "2361": 0, "2362": 0, "2364": 0, "2365": 0, "2366": 0, "2367": 0, "2368": 0, "2370": 0, "2371": 0, "2373": 0, "2374": 0, "2376": 0, "2378": 0, "2400": 0, "2421": 0, "2423": 0, "2424": 0, "2426": 0, "2427": 0, "2429": 0, "2431": 0, "2454": 0, "2456": 0, "2457": 0, "2459": 0, "2460": 0, "2462": 0, "2464": 0, "2485": 0, "2487": 0, "2488": 0, "2490": 0, "2491": 0, "2493": 0, "2495": 0, "2524": 0, "2525": 0, "2527": 0, "2529": 0, "2547": 0, "2549": 0, "2550": 0, "2552": 0, "2554": 0, "2579": 0, "2581": 0, "2582": 0, "2583": 0, "2585": 0, "2587": 0, "2589": 0, "2590": 0, "2591": 0, "2607": 0, "2608": 0, "2610": 0, "2612": 0, "2686": 0, "2687": 0, "2761": 0, "2762": 0, "2784": 0, "2786": 0, "2787": 0, "2789": 0, "2791": 0, "2807": 0, "2809": 0, "2810": 0, "2812": 0, "2814": 0, "2830": 0, "2832": 0, "2833": 0, "2835": 0, "2837": 0, "2853": 0, "2855": 0, "2856": 0, "2858": 0, "2860": 0, "2879": 0, "2881": 0, "2882": 0, "2884": 0, "2885": 0, "2887": 0, "2889": 0, "2905": 0, "2906": 0, "2908": 0, "2910": 0, "2926": 0, "2927": 0, "2929": 0, "2931": 0, "2947": 0, "2949": 0, "2950": 0, "2952": 0, "2954": 0, "2970": 0, "2971": 0, "2973": 0, "2975": 0, "2991": 0, "2992": 0, "2994": 0, "2996": 0, "3013": 0, "3014": 0, "3015": 0, "3017": 0, "3018": 0, "3020": 0, "3022": 0, "3041": 0, "3043": 0, "3044": 0, "3046": 0, "3047": 0, "3049": 0, "3051": 0, "3069": 0, "3070": 0, "3072": 0, "3074": 0, "3104": 0, "3105": 0, "3107": 0, "3109": 0, "3135": 0, "3136": 0, "3138": 0, "3140": 0, "3156": 0, "3157": 0, "3159": 0, "3161": 0, "3185": 0, "3186": 0, "3188": 0, "3190": 0, "3218": 0, "3219": 0, "3221": 0, "3223": 0, "3242": 0, "3243": 0, "3244": 0, "3245": 0, "3246": 0, "3248": 0, "3250": 0, "3269": 0, "3270": 0, "3271": 0, "3272": 0, "3273": 0, "3275": 0, "3277": 0, "3305": 0, "3306": 0, "3308": 0, "3309": 0, "3311": 0, "3312": 0, "3313": 0, "3314": 0, "3316": 0, "3317": 0, "3318": 0, "3320": 0, "3322": 0, "3323": 0, "3327": 0, "3328": 0, "3330": 0, "3335": 0, "3337": 0, "3339": 0, "3343": 0, "3344": 0, "3346": 0, "3351": 0, "3353": 0, "3324": 0, "3325": 0, "3331": 0, "3332": 0, "3333": 0, "3340": 0, "3341": 0, "3347": 0, "3348": 0, "3349": 0, "3369": 0, "3370": 0, "3372": 0, "3374": 0, "3375": 0, "3377": 0, "3378": 0, "3380": 0, "3381": 0, "3382": 0, "3383": 0, "3385": 0, "3386": 0, "3388": 0, "3390": 0, "3408": 0, "3410": 0, "3411": 0, "3413": 0, "3414": 0, "3416": 0, "3418": 0, "3419": 0, "3421": 0, "3423": 0, "3424": 0, "3426": 0, "3427": 0, "3429": 0, "3431": 0, "3432": 0, "3434": 0, "3436": 0, "3437": 0, "3438": 0, "3440": 0, "3442": 0, "3443": 0, "3445": 0, "3446": 0, "3448": 0, "3449": 0, "3451": 0, "3453": 0, "3482": 0, "3500": 0, "3502": 0, "3503": 0, "3505": 0, "3525": 0, "3527": 0, "3528": 0, "3530": 0, "3557": 0, "3558": 0, "3559": 0, "3561": 0, "3562": 0, "3567": 0, "3568": 0, "3569": 0, "3570": 0, "3571": 0, "3572": 0, "3573": 0, "3575": 0, "3576": 0, "3577": 0, "3578": 0, "3579": 0, "3580": 0, "3581": 0, "3583": 0, "3584": 0, "3586": 0, "3589": 0, "3590": 0, "3594": 0, "3595": 0, "3596": 0, "3597": 0, "3598": 0, "3599": 0, "3601": 0, "3603": 0, "3619": 0, "3620": 0, "3621": 0, "3623": 0, "3625": 0, "3626": 0, "3627": 0, "3628": 0, "3630": 0, "3654": 0, "3655": 0, "3656": 0, "3658": 0, "3660": 0, "3661": 0, "3663": 0, "3665": 0, "3666": 0, "3668": 0, "3670": 0, "3689": 0, "3691": 0, "3692": 0, "3694": 0, "3696": 0, "3697": 0, "3698": 0, "3700": 0, "3702": 0, "3703": 0, "3705": 0, "3707": 0, "3726": 0, "3745": 0, "3764": 0, "3783": 0, "3802": 0, "3823": 0, "3842": 0, "3861": 0, "3880": 0, "3904": 0, "3923": 0, "3946": 0, "3969": 0, "3993": 0, "3996": 0, "3999": 0, "4003": 0, "4004": 0, "4005": 0, "4006": 0, "4007": 0, "4009": 0, "4013": 0, "4014": 0, "4015": 0, "4016": 0, "4017": 0, "4019": 0, "4023": 0, "4024": 0, "4025": 0, "4026": 0, "4027": 0, "4029": 0, "4033": 0, "4034": 0, "4035": 0, "4036": 0, "4037": 0, "4039": 0, "4043": 0, "4044": 0, "4045": 0, "4046": 0, "4047": 0, "4049": 0, "4053": 0, "4054": 0, "4055": 0, "4056": 0, "4057": 0, "4059": 0, "4063": 0, "4064": 0, "4066": 0, "4070": 0, "4071": 0, "4073": 0, "4077": 0, "4078": 0, "4080": 0, "4084": 0, "4085": 0, "4087": 0, "4091": 0, "4092": 0, "4094": 0, "4098": 0, "4099": 0, "4101": 0, "4105": 0, "4106": 0, "4108": 0, "4112": 0, "4116": 0, "4123": 0, "4125": 0, "4126": 0, "4127": 0, "4128": 0, "4129": 0, "4131": 0, "4132": 0, "4134": 0, "4135": 0, "4136": 0, "4137": 0, "4138": 0, "4140": 0, "4141": 0, "4143": 0, "4147": 0, "4150": 0, "4155": 0, "4156": 0, "4158": 0, "4161": 0, "4164": 0, "4171": 1, "4175": 1, "4178": 1, "4179": 1, "4199": 1, "4200": 1, "4223": 1, "4226": 1, "4173": 0, "4176": 0, "4197": 0, "4201": 0, "4203": 0, "4204": 0, "4205": 0, "4206": 0, "4207": 0, "4209": 0, "4210": 0, "4212": 0, "4213": 0, "4214": 0, "4215": 0, "4216": 0, "4218": 0, "4219": 0, "4221": 0, "4224": 0, "4227": 0, "4229": 0, "4230": 0, "4231": 0, "4232": 0, "4233": 0, "4235": 0, "4236": 0, "4238": 0, "4239": 0, "4241": 0, "4242": 0, "4244": 0, "4246": 0, "4247": 0, "4249": 0, "4258": 0, "4250": 0, "4251": 0, "4253": 0, "4254": 0, "4256": 0, "4264": 0, "4265": 0, "4270": 0, "4272": 0, "4273": 0, "4274": 0, "4275": 0, "4277": 0, "4278": 0, "4280": 0, "4281": 0, "4283": 0, "4284": 0, "4285": 0, "4287": 0, "4288": 0, "4289": 0, "4291": 0, "4292": 0, "4294": 0, "4295": 0, "4297": 0, "4299": 0, "4300": 0, "4302": 0, "4303": 0, "4305": 0, "4311": 0, "4312": 0, "4317": 0, "4319": 0, "4320": 0, "4322": 0, "4323": 0, "4324": 0, "4326": 0, "4328": 0, "4329": 0, "4331": 0, "4332": 0, "4334": 0, "4336": 0, "4337": 0, "4339": 0, "4341": 0, "4342": 0, "4344": 0, "4345": 0, "4346": 0, "4348": 0, "4350": 0, "4351": 0, "4353": 0, "4355": 0, "4357": 0, "4358": 0, "4360": 0, "4362": 0, "4363": 0, "4365": 0, "4366": 0, "4367": 0, "4369": 0, "4370": 0, "4371": 0, "4373": 0, "4375": 0, "4376": 0, "4378": 0, "4379": 0, "4381": 0, "4382": 0, "4384": 0, "4386": 0, "4388": 0, "4389": 0, "4391": 0, "4393": 0, "4394": 0, "4395": 0, "4397": 0, "4399": 0, "4400": 0, "4401": 0, "4402": 0, "4404": 0, "4405": 0, "4407": 0, "4412": 0, "4414": 0, "4415": 0, "4417": 0, "4446": 0, "4447": 0, "4448": 0, "4449": 0, "4451": 0, "4452": 0, "4453": 0, "4455": 0, "4456": 0, "4458": 0, "4459": 0, "4461": 0, "4462": 0, "4463": 0, "4464": 0, "4465": 0, "4469": 0, "4471": 0, "4514": 0, "4515": 0, "4516": 0, "4517": 0, "4518": 0, "4520": 0, "4521": 0, "4522": 0, "4524": 0, "4542": 0, "4544": 0, "4545": 0, "4546": 0, "4547": 0, "4549": 0, "4551": 0, "4569": 0, "4571": 0, "4572": 0, "4573": 0, "4574": 0, "4576": 0, "4594": 0, "4596": 0, "4597": 0, "4598": 0, "4599": 0, "4601": 0, "4602": 0, "4620": 0, "4622": 0, "4623": 0, "4624": 0, "4625": 0, "4627": 0, "4628": 0, "4646": 0, "4648": 0, "4649": 0, "4650": 0, "4651": 0, "4653": 0, "4655": 0, "4656": 0, "4658": 0, "4676": 0, "4678": 0, "4679": 0, "4680": 0, "4681": 0, "4683": 0, "4685": 0, "4686": 0, "4688": 0, "4708": 0, "4710": 0, "4711": 0, "4712": 0, "4713": 0, "4715": 0, "4716": 0, "4717": 0, "4718": 0, "4720": 0, "4721": 0, "4723": 0, "4746": 0, "4748": 0, "4749": 0, "4750": 0, "4751": 0, "4753": 0, "4755": 0, "4756": 0, "4758": 0, "4778": 0, "4780": 0, "4781": 0, "4782": 0, "4783": 0, "4785": 0, "4787": 0, "4788": 0, "4790": 0, "4810": 0, "4812": 0, "4813": 0, "4814": 0, "4815": 0, "4817": 0, "4819": 0, "4820": 0, "4822": 0, "4842": 0, "4844": 0, "4845": 0, "4846": 0, "4847": 0, "4849": 0, "4851": 0, "4852": 0, "4854": 0, "4877": 0, "4879": 0, "4880": 0, "4881": 0, "4882": 0, "4884": 0, "4886": 0, "4887": 0, "4889": 0, "4909": 0, "4911": 0, "4912": 0, "4913": 0, "4914": 0, "4916": 0, "4917": 0, "4918": 0, "4919": 0, "4921": 0, "4923": 0, "4925": 0, "4926": 0, "4928": 0, "4948": 0, "4950": 0, "4951": 0, "4952": 0, "4953": 0, "4955": 0, "4956": 0, "4957": 0, "4958": 0, "4960": 0, "4962": 0, "4964": 0, "4965": 0, "4967": 0, "5002": 0, "5004": 0, "5005": 0, "5006": 0, "5007": 0, "5009": 0, "5010": 0, "5011": 0, "5012": 0, "5014": 0, "5016": 0, "5017": 0, "5019": 0, "5037": 0, "5039": 0, "5040": 0, "5041": 0, "5042": 0, "5044": 0, "5046": 0, "5047": 0, "5049": 0, "5067": 0, "5068": 0, "5070": 0, "5071": 0, "5072": 0, "5073": 0, "5075": 0, "5076": 0, "5078": 0, "5080": 0, "5081": 0, "5082": 0, "5083": 0, "5085": 0, "5086": 0, "5087": 0, "5105": 0, "5107": 0, "5108": 0, "5109": 0, "5110": 0, "5112": 0, "5114": 0, "5115": 0, "5117": 0, "5139": 0, "5141": 0, "5142": 0, "5143": 0, "5144": 0, "5146": 0, "5147": 0, "5148": 0, "5149": 0, "5151": 0, "5153": 0, "5155": 0, "5156": 0, "5158": 0, "5176": 0, "5178": 0, "5197": 0, "5199": 0, "5200": 0, "5202": 0, "5204": 0, "5205": 0, "5206": 0, "5207": 0, "5209": 0, "5210": 0, "5212": 0, "5214": 0, "5215": 0, "5216": 0, "5218": 0, "5220": 0, "5222": 0, "5223": 0, "5225": 0, "5226": 0, "5228": 0, "5229": 0, "5231": 0, "5179": 0, "5180": 0, "5182": 0, "5183": 0, "5184": 0, "5185": 0, "5187": 0, "5188": 0, "5190": 0, "5191": 0, "5193": 0, "5195": 0, "5249": 0, "5250": 0, "5251": 0, "5253": 0, "5254": 0, "5255": 0, "5257": 0, "5259": 0, "5260": 0, "5261": 0, "5262": 0, "5264": 0, "5265": 0, "5266": 0, "5267": 0, "5269": 0, "5271": 0, "5272": 0, "5274": 0, "5292": 0, "5294": 0, "5310": 0, "5312": 0, "5313": 0, "5315": 0, "5317": 0, "5318": 0, "5319": 0, "5320": 0, "5322": 0, "5323": 0, "5325": 0, "5327": 0, "5328": 0, "5329": 0, "5331": 0, "5333": 0, "5335": 0, "5336": 0, "5338": 0, "5339": 0, "5341": 0, "5295": 0, "5296": 0, "5298": 0, "5299": 0, "5300": 0, "5301": 0, "5303": 0, "5304": 0, "5306": 0, "5308": 0, "5359": 0, "5360": 0, "5361": 0, "5363": 0, "5364": 0, "5365": 0, "5367": 0, "5369": 0, "5370": 0, "5371": 0, "5372": 0, "5374": 0, "5375": 0, "5376": 0, "5377": 0, "5379": 0, "5381": 0, "5382": 0, "5384": 0, "5453": 0, "5455": 0, "5456": 0, "5457": 0, "5459": 0, "5460": 0, "5461": 0, "5462": 0, "5463": 0, "5465": 0, "5466": 0, "5468": 0, "5469": 0, "5471": 0, "5472": 0, "5473": 0, "5474": 0, "5476": 0, "5478": 0, "5479": 0, "5480": 0, "5482": 0, "5484": 0, "5485": 0, "5487": 0, "5489": 0, "5490": 0, "5491": 0, "5492": 0, "5493": 0, "5495": 0, "5496": 0, "5499": 0, "5500": 0, "5518": 0, "5520": 0, "5521": 0, "5522": 0, "5523": 0, "5525": 0, "5527": 0, "5528": 0, "5530": 0, "5548": 0, "5550": 0, "5551": 0, "5552": 0, "5553": 0, "5555": 0, "5557": 0, "5558": 0, "5560": 0, "5578": 0, "5580": 0, "5581": 0, "5582": 0, "5583": 0, "5585": 0, "5620": 0, "5622": 0, "5623": 0, "5624": 0, "5625": 0, "5627": 0, "5628": 0, "5629": 0, "5631": 0, "5649": 0, "5651": 0, "5652": 0, "5653": 0, "5654": 0, "5656": 0, "5658": 0, "5659": 0, "5661": 0, "5679": 0, "5681": 0, "5682": 0, "5683": 0, "5684": 0, "5686": 0, "5688": 0, "5689": 0, "5691": 0, "5709": 0, "5711": 0, "5712": 0, "5713": 0, "5714": 0, "5716": 0, "5718": 0, "5719": 0, "5721": 0, "5756": 0, "5758": 0, "5759": 0, "5760": 0, "5761": 0, "5763": 0, "5765": 0, "5766": 0, "5768": 0, "5774": 0, "5796": 0, "5798": 0, "5799": 0, "5800": 0, "5801": 0, "5803": 0, "5805": 0, "5806": 0, "5808": 0, "5826": 0, "5828": 0, "5829": 0, "5830": 0, "5831": 0, "5833": 0, "5835": 0, "5836": 0, "5838": 0, "5843": 0, "5844": 0, "5849": 0, "5854": 0, "5845": 0, "5846": 0, "5847": 0, "5850": 0, "5851": 0, "5852": 0, "5859": 0, "5864": 0, "5866": 0, "5867": 0, "5868": 0, "5869": 0, "5870": 0, "5871": 0, "5872": 0, "5873": 0, "5874": 0, "5875": 0, "5876": 0, "5877": 0, "5878": 0, "5879": 0, "5880": 0, "5881": 0, "5882": 0, "5884": 0, "5886": 0, "5887": 0, "5888": 0, "5889": 0, "5891": 0, "5893": 0, "5894": 0, "5895": 0, "5896": 0, "5897": 0, "5898": 0, "5900": 0, "5902": 0, "5903": 0, "5904": 0, "5905": 0, "5907": 0, "5909": 0, "5910": 0, "5911": 0, "5913": 0, "5915": 0, "5917": 0, "5922": 0, "5923": 0, "5924": 0, "5925": 0, "5926": 0, "5927": 0, "5928": 0, "5929": 0, "5930": 0, "5932": 0, "5937": 0, "5938": 0, "5940": 0, "5942": 0, "5943": 0, "5945": 0, "5946": 0, "5948": 0, "5949": 0, "5951": 0, "5953": 0, "5954": 0, "5955": 0, "5956": 0, "5957": 0, "5959": 0, "5960": 0, "5962": 0, "5963": 0, "5964": 0, "5966": 0, "5968": 0, "5969": 0, "5971": 0, "5973": 0, "5978": 0, "5979": 0, "5980": 0, "6021": 0, "6023": 0, "6058": 0, "6086": 0, "6106": 0, "6107": 0, "6108": 0, "6109": 0, "6110": 0, "6112": 0, "6113": 0, "6114": 0, "6115": 0, "6031": 0, "6032": 0, "6033": 0, "6034": 0, "6035": 0, "6036": 0, "6037": 0, "6038": 0, "6039": 0, "6040": 0, "6041": 0, "6042": 0, "6043": 0, "6044": 0, "6045": 0, "6046": 0, "6048": 0, "6049": 0, "6050": 0, "6051": 0, "6052": 0, "6053": 0, "6054": 0, "6055": 0, "6056": 0, "6066": 0, "6067": 0, "6068": 0, "6069": 0, "6070": 0, "6071": 0, "6072": 0, "6073": 0, "6074": 0, "6075": 0, "6076": 0, "6077": 0, "6079": 0, "6080": 0, "6081": 0, "6082": 0, "6083": 0, "6084": 0, "6090": 0, "6091": 0, "6092": 0, "6093": 0, "6094": 0, "6095": 0, "6096": 0, "6098": 0, "6099": 0, "6100": 0, "6101": 0, "6102": 0, "6103": 0, "6104": 0, "6097": 0, "6140": 0, "6141": 0, "6142": 0, "6143": 0, "6144": 0, "6145": 0, "6146": 0, "6147": 0, "6148": 0, "6149": 0, "6150": 0, "6151": 0, "6152": 0, "6153": 0, "6155": 0, "6156": 0, "6157": 0, "6158": 0, "6159": 0, "6177": 0, "6195": 0, "6213": 0, "6276": 0, "6277": 0, "6278": 0, "6279": 0, "6280": 0, "6281": 0, "6282": 0, "6283": 0, "6284": 0, "6286": 0, "6287": 0, "6288": 0, "6289": 0, "6290": 0, "6291": 0, "6293": 0, "6313": 0, "6314": 0, "6315": 0, "6316": 0, "6317": 0, "6319": 0, "6321": 0, "6323": 0, "6324": 0, "6326": 0, "6327": 0, "6329": 0, "6330": 0, "6332": 0, "6333": 0, "6335": 0, "6336": 0, "6337": 0, "6338": 0, "6340": 0, "6341": 0, "6343": 0, "6345": 0, "6346": 0, "6347": 0, "6349": 0, "6367": 0, "6368": 0, "6369": 0, "6370": 0, "6371": 0, "6373": 0, "6396": 0, "6397": 0, "6398": 0, "6399": 0, "6401": 0, "6419": 0, "6420": 0, "6421": 0, "6422": 0, "6423": 0, "6425": 0, "6445": 0, "6446": 0, "6447": 0, "6448": 0, "6449": 0, "6451": 0, "6469": 0, "6471": 0, "6472": 0, "6473": 0, "6474": 0, "6476": 0, "6503": 0, "6505": 0, "6506": 0, "6507": 0, "6508": 0, "6510": 0, "6512": 0, "6513": 0, "6515": 0, "6535": 0, "6536": 0, "6537": 0, "6539": 0, "6541": 0, "6542": 0, "6543": 0, "6544": 0, "6545": 0, "6547": 0, "6548": 0, "6549": 0, "6550": 0, "6552": 0, "6554": 0, "6555": 0, "6556": 0, "6557": 0, "6558": 0, "6560": 0, "6561": 0, "6562": 0, "6563": 0, "6565": 0, "6566": 0, "6568": 0, "6569": 0, "6570": 0, "6572": 0, "6573": 0, "6574": 0, "6575": 0, "6577": 0, "6578": 0, "6579": 0, "6580": 0, "6581": 0, "6582": 0, "6583": 0, "6584": 0, "6586": 0, "6588": 0, "6589": 0, "6591": 0, "6592": 0, "6594": 0, "6567": 0, "6617": 0, "6619": 0, "6620": 0, "6621": 0, "6622": 0, "6624": 0, "6625": 0, "6627": 0, "6628": 0, "6629": 0, "6631": 0, "6632": 0, "6634": 0, "6635": 0, "6636": 0, "6638": 0, "6640": 0, "6641": 0, "6643": 0, "6644": 0, "6645": 0, "6646": 0, "6647": 0, "6649": 0, "6651": 0, "6652": 0, "6654": 0, "6708": 0, "6726": 0, "6733": 1, "6752": 1, "6753": 1, "6761": 1, "6762": 1, "6765": 1, "6766": 1, "6769": 1, "6770": 1, "6773": 1, "6774": 1, "6777": 1, "6778": 1, "6781": 1, "6782": 1, "6785": 1, "6788": 1, "6794": 1, "6802": 1, "6805": 1, "6813": 1, "6816": 1, "6817": 1, "6848": 1, "6914": 1, "6979": 1, "6735": 0, "6737": 0, "6738": 0, "6739": 0, "6740": 0, "6742": 0, "6743": 0, "6745": 0, "6747": 0, "6748": 0, "6750": 0, "6754": 0, "6756": 0, "6757": 0, "6759": 0, "6763": 0, "6767": 0, "6771": 0, "6775": 0, "6779": 0, "6783": 0, "6786": 0, "6789": 0, "6790": 0, "6792": 0, "6795": 0, "6796": 0, "6798": 0, "6800": 0, "6803": 0, "6806": 0, "6807": 0, "6808": 0, "6809": 0, "6811": 0, "6814": 0, "6831": 0, "6834": 0, "6835": 0, "6837": 0, "6838": 0, "6840": 0, "6841": 0, "6846": 0, "6832": 0, "6879": 0, "6881": 0, "6882": 0, "6884": 0, "6885": 0, "6887": 0, "6888": 0, "6890": 0, "6891": 0, "6893": 0, "6894": 0, "6895": 0, "6898": 0, "6899": 0, "6901": 0, "6902": 0, "6903": 0, "6905": 0, "6906": 0, "6908": 0, "6909": 0, "6910": 0, "6912": 0, "6942": 0, "6943": 0, "6945": 0, "6946": 0, "6948": 0, "6950": 0, "6951": 0, "6952": 0, "6954": 0, "6955": 0, "6957": 0, "6958": 0, "6959": 0, "6961": 0, "6963": 0, "6964": 0, "6966": 0, "6967": 0, "6968": 0, "6969": 0, "6970": 0, "6972": 0, "6974": 0, "6975": 0, "6977": 0, "6998": 0, "7016": 0, "7018": 0, "7070": 0, "7072": 0, "7073": 0, "7075": 0, "7076": 0, "7078": 0, "7080": 0, "7019": 0, "7021": 0, "7022": 0, "7024": 0, "7025": 0, "7026": 0, "7027": 0, "7028": 0, "7029": 0, "7030": 0, "7032": 0, "7034": 0, "7035": 0, "7037": 0, "7039": 0, "7040": 0, "7042": 0, "7043": 0, "7045": 0, "7046": 0, "7048": 0, "7050": 0, "7052": 0, "7053": 0, "7055": 0, "7057": 0, "7058": 0, "7060": 0, "7061": 0, "7063": 0, "7064": 0, "7066": 0, "7068": 0}}
+ git checkout a5e6a101869e027e7930e694f8b1cfb082603453
Note: switching to 'a5e6a101869e027e7930e694f8b1cfb082603453'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at a5e6a10186 Merge pull request #13678 from symbolique/master
M	sympy/polys/polytools.py
+ git apply /root/pre_state.patch
error: unrecognized input
