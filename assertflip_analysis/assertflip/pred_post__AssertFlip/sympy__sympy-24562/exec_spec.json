{"instance_id": "sympy__sympy-24562", "repo": "sympy/sympy", "version": "1.12", "environment_setup_commit": "c6cb7c5602fa48034ab1bd43c2347a7e8488f12e", "patch_list": ["diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -1624,10 +1624,11 @@ def __new__(cls, p, q=None, gcd=None):\n \n             q = 1\n             gcd = 1\n+        Q = 1\n \n         if not isinstance(p, SYMPY_INTS):\n             p = Rational(p)\n-            q *= p.q\n+            Q *= p.q\n             p = p.p\n         else:\n             p = int(p)\n@@ -1635,9 +1636,10 @@ def __new__(cls, p, q=None, gcd=None):\n         if not isinstance(q, SYMPY_INTS):\n             q = Rational(q)\n             p *= q.q\n-            q = q.p\n+            Q *= q.p\n         else:\n-            q = int(q)\n+            Q *= int(q)\n+        q = Q\n \n         # p and q are now ints\n         if q == 0:\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-24562.py\nnew file mode 100644\nindex e69de29..559ae36 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-24562.py\n@@ -0,0 +1,16 @@\n+from sympy import Rational\n+\n+def test_rational_string_input_bug():\n+    # Test with string inputs\n+    r1 = Rational('0.5', '100')\n+    # Test with float inputs\n+    r2 = Rational(0.5, 100)\n+    \n+    # Assert that the correct behavior should occur\n+    assert str(Rational('0.5', '100')) == '1/200'\n+    \n+    # Assert that the correct behavior occurs with float inputs\n+    assert str(Rational(0.5, 100)) == '1/200'\n+    \n+    # Assert that the two results are equal, which should be the correct behavior\n+    assert str(Rational('0.5', '100')) == str(Rational(0.5, 100))\n"], "arch": "x86_64", "base_commit": "b1cb676cf92dd1a48365b731979833375b188bf2", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-24562.py"], "coverage_files": ["sympy/core/numbers.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/core/numbers\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-24562.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}