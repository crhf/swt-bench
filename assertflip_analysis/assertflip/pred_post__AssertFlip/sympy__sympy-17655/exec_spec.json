{"instance_id": "sympy__sympy-17655", "repo": "sympy/sympy", "version": "1.5", "environment_setup_commit": "70381f282f2d9d039da860e391fe51649df2779d", "patch_list": ["diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -278,6 +278,10 @@ def __mul__(self, factor):\n         coords = [simplify(x*factor) for x in self.args]\n         return Point(coords, evaluate=False)\n \n+    def __rmul__(self, factor):\n+        \"\"\"Multiply a factor by point's coordinates.\"\"\"\n+        return self.__mul__(factor)\n+\n     def __neg__(self):\n         \"\"\"Negate the point.\"\"\"\n         coords = [-x for x in self.args]\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-17655.py\nnew file mode 100644\nindex e69de29..31b5323 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-17655.py\n@@ -0,0 +1,17 @@\n+from sympy import geometry as ge, sympify\n+\n+def test_point_multiplication_order():\n+    # Create two Point objects\n+    point1 = ge.Point(0, 0)\n+    point2 = ge.Point(1, 1)\n+    \n+    # Convert a number to a SymPy object\n+    factor = sympify(2.0)\n+    \n+    # Perform the addition in both orders\n+    result1 = point1 + point2 * factor\n+    assert result1 == ge.Point(2, 2)  # This should work without issues\n+    \n+    # Check that the second order works correctly\n+    result2 = point1 + factor * point2\n+    assert result2 == ge.Point(2, 2)  # This should also work without issues\n"], "arch": "x86_64", "base_commit": "f5e965947af2410ded92cfad987aaf45262ea434", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-17655.py"], "coverage_files": ["sympy/geometry/point.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/geometry/point\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-17655.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}