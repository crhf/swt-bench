{"instance_id": "scikit-learn__scikit-learn-14053", "repo": "scikit-learn/scikit-learn", "version": "0.22", "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d", "patch_list": ["diff --git a/sklearn/tree/export.py b/sklearn/tree/export.py\n--- a/sklearn/tree/export.py\n+++ b/sklearn/tree/export.py\n@@ -890,7 +890,8 @@ def export_text(decision_tree, feature_names=None, max_depth=10,\n         value_fmt = \"{}{} value: {}\\n\"\n \n     if feature_names:\n-        feature_names_ = [feature_names[i] for i in tree_.feature]\n+        feature_names_ = [feature_names[i] if i != _tree.TREE_UNDEFINED\n+                          else None for i in tree_.feature]\n     else:\n         feature_names_ = [\"feature_{}\".format(i) for i in tree_.feature]\n \n", "diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14053.py\nnew file mode 100644\nindex e69de29..c870b1f 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14053.py\n@@ -0,0 +1,24 @@\n+import pytest\n+from sklearn.tree import DecisionTreeClassifier\n+from sklearn.tree.export import export_text\n+from sklearn.datasets import load_iris\n+\n+def test_export_text_single_feature_no_index_error():\n+    # Load the iris dataset\n+    X, y = load_iris(return_X_y=True)\n+    # Select only one feature\n+    X = X[:, 0].reshape(-1, 1)\n+    \n+    # Train a decision tree classifier on the single feature\n+    tree = DecisionTreeClassifier()\n+    tree.fit(X, y)\n+    \n+    # Check that no IndexError is raised when calling export_text\n+    try:\n+        # This should not raise an IndexError when the bug is fixed\n+        tree_text = export_text(tree, feature_names=['sepal_length'])\n+        assert isinstance(tree_text, str)  # Ensure the output is a string\n+    except IndexError:\n+        pytest.fail(\"IndexError was raised unexpectedly\")\n+\n+# Note: This test will fail if the IndexError is raised, indicating the bug is present.\n"], "arch": "x86_64", "base_commit": "6ab8c86c383dd847a1be7103ad115f174fe23ffd", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-14053.py"], "coverage_files": ["sklearn/tree/export.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/tree/export\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-14053.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}