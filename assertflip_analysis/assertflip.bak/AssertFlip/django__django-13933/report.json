{
    "django__django-13933": {
        "patch_is_None": false,
        "patch_exists": true,
        "patch_successfully_applied": true,
        "resolved": false,
        "coverage_pred": 0.8,
        "coverage_gold": 1.0,
        "coverage_base": 0.0,
        "coverage_delta_pred": 0.8,
        "coverage_delta_gold": 1.0,
        "added_f2p": 0,
        "tests_base": {
            "FAIL_TO_PASS": [],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [
                "test_coverup_django__django-13933 (unittest.loader._FailedTest)"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_pred": {
            "FAIL_TO_PASS": [],
            "PASS_TO_PASS": [],
            "FAIL_TO_FAIL": [
                "test_invalid_choice_includes_value_in_error_message (test_coverup_django__django-13933.ModelChoiceFieldTest)"
            ],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        },
        "tests_gold": {
            "FAIL_TO_PASS": [
                "test_booleanfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_modelchoicefield_value_placeholder (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase)"
            ],
            "PASS_TO_PASS": [
                "test_generic_ipaddressfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_modelchoicefield (forms_tests.tests.test_error_messages.ModelChoiceFieldErrorMessagesTestCase)",
                "test_multiplechoicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_charfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_timefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_subclassing_errorlist (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_filefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_regexfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_datetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_choicefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_error_messages_escaping (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_floatfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_urlfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_splitdatetimefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_integerfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_decimalfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_emailfield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)",
                "test_datefield (forms_tests.tests.test_error_messages.FormsErrorMessagesTestCase)"
            ],
            "FAIL_TO_FAIL": [],
            "PASS_TO_FAIL": [],
            "UNMATCHED": []
        }
    }
}