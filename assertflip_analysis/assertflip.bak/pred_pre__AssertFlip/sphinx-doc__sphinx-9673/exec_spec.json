{"instance_id": "sphinx-doc__sphinx-9673", "repo": "sphinx-doc/sphinx", "version": "4.3", "environment_setup_commit": "6c6cc8a6f50b18331cb818160d168d7bb9c03e55", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-9673.py\nnew file mode 100644\nindex e69de29..400d132 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-9673.py\n@@ -0,0 +1,87 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+@pytest.fixture\n+def sphinx_app(tmpdir):\n+    srcdir = tmpdir.mkdir(\"src\")\n+    confdir = tmpdir.mkdir(\"conf\")\n+    outdir = tmpdir.mkdir(\"out\")\n+    doctreedir = tmpdir.mkdir(\"doctree\")\n+\n+    # Create a minimal Sphinx configuration\n+    conf_file = confdir.join(\"conf.py\")\n+    conf_file.write(\"\"\"\n+project = 'Example Project'\n+extensions = ['sphinx.ext.autodoc', 'sphinx.ext.napoleon']\n+autodoc_typehints = \"description\"\n+autodoc_typehints_description_target = \"documented\"\n+napoleon_numpy_docstring = False\n+master_doc = 'index'\n+import sys\n+sys.path.insert(0, '.')\n+\"\"\")\n+\n+    # Create an index.rst file to serve as the root document\n+    index_file = srcdir.join(\"index.rst\")\n+    index_file.write(\"\"\"\n+.. toctree::\n+   example\n+\"\"\")\n+\n+    # Create a Python module with a function that has a Google-style docstring\n+    py_module_file = srcdir.join(\"example.py\")\n+    py_module_file.write(\"\"\"\n+def example_function(param1: int, param2: int) -> int:\n+    \\\"\\\"\\\"\n+    Description.\n+\n+    Parameters:\n+        param1: First parameter.\n+        param2: Second parameter.\n+\n+    Returns:\n+        int: The returned value.\n+    \\\"\\\"\\\"\n+    return param1 + param2\n+\"\"\")\n+\n+    # Create a reStructuredText file to document the module\n+    example_rst_file = srcdir.join(\"example.rst\")\n+    example_rst_file.write(\"\"\"\n+Example Module\n+==============\n+\n+.. automodule:: example\n+    :members:\n+\"\"\")\n+\n+    # Ensure the module path is correctly set for Sphinx to import\n+    import sys\n+    sys.path.insert(0, str(srcdir))\n+\n+    app = Sphinx(\n+        srcdir=str(srcdir),\n+        confdir=str(confdir),\n+        outdir=str(outdir),\n+        doctreedir=str(doctreedir),\n+        buildername='html',\n+    )\n+    return app\n+\n+def test_missing_return_type_in_documentation(sphinx_app):\n+    sphinx_app.build()\n+\n+    # Read the generated HTML file\n+    example_html_path = os.path.join(sphinx_app.outdir, 'example.html')\n+    with open(example_html_path, 'r') as f:\n+        content = f.read()\n+\n+    # Verify that the generated documentation includes the `Returns` section\n+    assert \"Returns\" in content or \":returns:\" in content\n+\n+    # Check that the return type is present in the Returns section\n+    assert \":rtype: int\" in content\n+\n+    # Ensure the module was correctly imported by checking for a known string in the HTML\n+    assert \"Example Module\" in content\n"], "arch": "x86_64", "base_commit": "5fb51fb1467dc5eea7505402c3c5d9b378d3b441", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-9673.py"], "coverage_files": ["sphinx/ext/autodoc/typehints.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp>=2.0.0/sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml>=1.1.5/sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/ext/autodoc/typehints\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-9673.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}