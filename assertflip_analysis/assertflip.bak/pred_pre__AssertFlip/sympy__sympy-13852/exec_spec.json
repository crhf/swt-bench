{"instance_id": "sympy__sympy-13852", "repo": "sympy/sympy", "version": "1.1", "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3", "patch_list": ["diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-13852.py\nnew file mode 100644\nindex e69de29..f1e9029 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-13852.py\n@@ -0,0 +1,16 @@\n+from sympy import symbols, polylog, expand_func, log\n+\n+def test_expand_func_polylog_bug():\n+    # Setup symbolic variable\n+    z = symbols('z')\n+\n+    # Expand polylog(1, z) and check for the presence of exp_polar(-I*pi)\n+    expanded_expr = expand_func(polylog(1, z))\n+    \n+    # Assert that the expanded expression is equal to the expected correct form\n+    # The expected correct form should be -log(1 - z) without exp_polar\n+    expected_expr = -log(1 - z)\n+    \n+    # Check if the expanded expression is equal to the expected correct form\n+    assert expanded_expr == expected_expr  # The test should fail if the bug is present\n+\n"], "arch": "x86_64", "base_commit": "c935e1d106743efd5bf0705fbeedbd18fadff4dc", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-13852.py"], "coverage_files": ["sympy/functions/special/zeta_functions.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/functions/special/zeta_functions\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-13852.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}