{"instance_id": "sphinx-doc__sphinx-8621", "repo": "sphinx-doc/sphinx", "version": "3.5", "environment_setup_commit": "4f8cb861e3b29186b38248fe81e4944fd987fcce", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-8621.py\nnew file mode 100644\nindex e69de29..b24168b 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-8621.py\n@@ -0,0 +1,41 @@\n+import pytest\n+from docutils import nodes\n+from docutils.parsers.rst import Parser\n+from docutils.utils import new_document\n+from docutils.frontend import OptionParser\n+from docutils.parsers.rst import roles\n+from sphinx.roles import generic_docroles\n+\n+def test_kbd_role_with_separators():\n+    # Setup a minimal document\n+    settings = OptionParser(components=(Parser,)).get_default_values()\n+    document = new_document('test', settings)\n+\n+    # Register the kbd role using the generic_docroles from sphinx\n+    roles.register_generic_role('kbd', generic_docroles['kbd'])\n+\n+    # Define test cases for standalone and compound keystrokes\n+    test_cases = [\n+        (':kbd:`-`', '<kbd class=\"kbd docutils literal notranslate\">-</kbd>'),\n+        (':kbd:`+`', '<kbd class=\"kbd docutils literal notranslate\">+</kbd>'),\n+        (':kbd:`Shift-+`', '<kbd class=\"kbd docutils literal notranslate\">Shift-+</kbd>')\n+    ]\n+\n+    for input_text, expected_html in test_cases:\n+        # Parse the input text\n+        document = new_document('test', settings)\n+        parser = Parser()\n+        parser.parse(input_text, document)\n+\n+        # Get the first node which should be a literal node\n+        node = document[0][0]\n+\n+        # Check if the node is a literal node\n+        assert isinstance(node, nodes.literal)\n+\n+        # Get the children of the node which contains the HTML\n+        result_html = ''.join(child.astext() for child in node.children)\n+\n+        # Assert that the generated HTML matches the expected correct output\n+        assert result_html == expected_html, f\"Expected HTML structure {expected_html}, got {result_html}\"\n+\n"], "arch": "x86_64", "base_commit": "21698c14461d27933864d73e6fba568a154e83b3", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-8621.py"], "coverage_files": ["sphinx/builders/html/transforms.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp/sphinxcontrib-htmlhelp<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml/sphinxcontrib-serializinghtml<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/builders/html/transforms\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-8621.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}