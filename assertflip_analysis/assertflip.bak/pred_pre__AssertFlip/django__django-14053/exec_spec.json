{"instance_id": "django__django-14053", "repo": "django/django", "version": "4.0", "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-14053.py\nnew file mode 100644\nindex e69de29..eeac25e 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-14053.py\n@@ -0,0 +1,36 @@\n+from django.test import SimpleTestCase\n+from django.contrib.staticfiles.storage import HashedFilesMixin\n+from unittest.mock import Mock\n+\n+class HashedFilesMixinTest(SimpleTestCase):\n+    def setUp(self):\n+        self.storage = HashedFilesMixin()\n+        self.storage.max_post_process_passes = 2\n+        self.storage._patterns = []\n+        self.storage.hashed_files = {}\n+        self.storage._post_process = Mock(return_value=[\n+            ('admin/css/base.css', 'admin/css/base.31652d31b392.css', True, True),\n+            ('admin/css/base.css', 'admin/css/base.6b517d0d5813.css', True, True),\n+            ('admin/css/dashboard.css', 'admin/css/dashboard.7ac78187c567.css', True, True),\n+            ('admin/css/dashboard.css', 'admin/css/dashboard.7ac78187c567.css', True, False),\n+        ])\n+\n+    def test_post_process_yields_multiple_times(self):\n+        paths = {\n+            'admin/css/base.css': (self.storage, 'admin/css/base.css'),\n+            'admin/css/dashboard.css': (self.storage, 'admin/css/dashboard.css'),\n+        }\n+        processor = self.storage.post_process(paths, dry_run=False)\n+        processed_files = list(processor)\n+\n+        # Count occurrences of each file in the processed results\n+        file_counts = {}\n+        for original_path, processed_path, processed in processed_files:\n+            if original_path in file_counts:\n+                file_counts[original_path] += 1\n+            else:\n+                file_counts[original_path] = 1\n+\n+        # Corrected assertions to ensure the test fails with the bug\n+        self.assertEqual(file_counts.get('admin/css/base.css', 0), 1)  # Expecting 1\n+        self.assertEqual(file_counts.get('admin/css/dashboard.css', 0), 1)  # Expecting 1\n"], "arch": "x86_64", "base_commit": "179ee13eb37348cd87169a198aec18fedccc8668", "test_directives": ["test_coverup_django__django-14053"], "coverage_files": ["django/contrib/staticfiles/storage.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.8", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/staticfiles/storage\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14053", "req_install_commands": ["conda create -n testbed python=3.8 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}