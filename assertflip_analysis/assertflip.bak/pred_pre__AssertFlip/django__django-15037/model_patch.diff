diff --git a/dev/null b/tests/test_coverup_django__django-15037.py
new file mode 100644
index e69de29..7d11ca0 100644
--- /dev/null
+++ b/tests/test_coverup_django__django-15037.py
@@ -0,0 +1,34 @@
+from django.test import TestCase
+from django.db import connection
+from django.core.management import call_command
+from io import StringIO
+
+class InspectDBForeignKeyTest(TestCase):
+    def setUp(self):
+        with connection.cursor() as cursor:
+            cursor.execute("""
+                CREATE TABLE foo (
+                    id serial PRIMARY KEY,
+                    other_id int UNIQUE
+                );
+            """)
+            cursor.execute("""
+                CREATE TABLE bar (
+                    id serial PRIMARY KEY,
+                    other_id int,
+                    CONSTRAINT myconst FOREIGN KEY(other_id) REFERENCES foo(other_id)
+                );
+            """)
+
+    def tearDown(self):
+        with connection.cursor() as cursor:
+            cursor.execute("DROP TABLE bar;")
+            cursor.execute("DROP TABLE foo;")
+
+    def test_inspectdb_foreign_key_to_specific_field(self):
+        out = StringIO()
+        call_command('inspectdb', stdout=out)
+        output = out.getvalue()
+
+        # Check that the generated model for 'bar' has 'other_id' as a ForeignKey to 'foo(other_id)'
+        self.assertIn("other_id = models.ForeignKey(foo, to_field='other_id', on_delete=models.DO_NOTHING)", output)
