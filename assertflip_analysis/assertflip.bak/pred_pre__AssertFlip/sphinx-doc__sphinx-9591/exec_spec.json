{"instance_id": "sphinx-doc__sphinx-9591", "repo": "sphinx-doc/sphinx", "version": "4.2", "environment_setup_commit": "336605b8e4b14c5da9f4d872fb730dc6894edb77", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-9591.py\nnew file mode 100644\nindex e69de29..c12fda6 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-9591.py\n@@ -0,0 +1,99 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+def test_property_type_annotation_cross_reference(tmpdir):\n+    # Setup: Create a temporary Sphinx project with the necessary configuration\n+    docs_dir = tmpdir.mkdir(\"docs\")\n+    conf_py_content = \"\"\"\n+project = 'sphinx-issue-9585'\n+extensions = ['sphinx.ext.autodoc']\n+autodoc_typehints = 'description'\n+autodoc_type_aliases = {}\n+\"\"\"\n+    docs_dir.join(\"conf.py\").write(conf_py_content)\n+\n+    # Create a Python module with the classes and properties\n+    module_content = \"\"\"\n+from typing import Optional\n+\n+class Point:\n+    \\\"\\\"\\\"\n+    A class representing a point.\n+\n+    Attributes:\n+        x: Position X.\n+        y: Position Y.\n+    \\\"\\\"\\\"\n+    x: int\n+    y: int\n+\n+class Square:\n+    \\\"\\\"\\\"A class representing a square figure.\\\"\\\"\\\"\n+    #: Square's start position (top-left corner).\n+    start: Point\n+    #: Square width.\n+    width: int\n+    #: Square height.\n+    height: int\n+\n+    @property\n+    def end(self) -> Point:\n+        \\\"\\\"\\\"Square's end position (bottom-right corner).\\\"\\\"\\\"\n+        return Point(self.start.x + self.width, self.start.y + self.height)\n+\n+class Rectangle:\n+    \\\"\\\"\\\"\n+    A class representing a square figure.\n+\n+    Attributes:\n+        start: Rectangle's start position (top-left corner).\n+        width: Rectangle width.\n+        height: Rectangle width.\n+    \\\"\\\"\\\"\n+    start: Point\n+    width: int\n+    height: int\n+\n+    @property\n+    def end(self) -> Point:\n+        \\\"\\\"\\\"Rectangle's end position (bottom-right corner).\\\"\\\"\\\"\n+        return Point(self.start.x + self.width, self.start.y + self.height)\n+\"\"\"\n+    module_path = docs_dir.join(\"mymodule.py\")\n+    module_path.write(module_content)\n+\n+    # Create index.rst file\n+    index_rst_content = \"\"\"\n+.. automodule:: mymodule\n+   :members:\n+   :undoc-members:\n+   :show-inheritance:\n+\"\"\"\n+    docs_dir.join(\"index.rst\").write(index_rst_content)\n+\n+    # Add the module directory to sys.path to ensure it is importable\n+    import sys\n+    sys.path.insert(0, str(docs_dir))\n+\n+    # Create a Sphinx application\n+    app = Sphinx(\n+        srcdir=str(docs_dir),\n+        confdir=str(docs_dir),\n+        outdir=str(docs_dir.join(\"_build/html\")),\n+        doctreedir=str(tmpdir.join(\"_build/doctrees\")),\n+        buildername=\"html\"\n+    )\n+\n+    # Build the HTML documentation\n+    app.build()\n+\n+    # Parse the generated HTML\n+    index_html = docs_dir.join(\"_build/html/index.html\").read()\n+\n+    # Check for the presence of cross-references in the property's type annotations\n+    # The type annotation for the 'end' property should be cross-referenced\n+    assert \"class:`Point`\" in index_html, \"The type annotation for the 'end' property should be cross-referenced.\"\n+\n+    # Cleanup: Remove the module directory from sys.path\n+    sys.path.pop(0)\n"], "arch": "x86_64", "base_commit": "9ed054279aeffd5b1d0642e2d24a8800389de29f", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-9591.py"], "coverage_files": ["sphinx/domains/python.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini", "sed -i 's/Jinja2>=2.3/Jinja2<3.0/' setup.py", "sed -i 's/sphinxcontrib-applehelp/sphinxcontrib-applehelp<=1.0.7/' setup.py", "sed -i 's/sphinxcontrib-devhelp/sphinxcontrib-devhelp<=1.0.5/' setup.py", "sed -i 's/sphinxcontrib-qthelp/sphinxcontrib-qthelp<=1.0.6/' setup.py", "sed -i 's/alabaster>=0.7,<0.8/alabaster>=0.7,<0.7.12/' setup.py", "sed -i \"s/'packaging',/'packaging', 'markupsafe<=2.0.1',/\" setup.py", "sed -i 's/sphinxcontrib-htmlhelp>=2.0.0/sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4/' setup.py", "sed -i 's/sphinxcontrib-serializinghtml>=1.1.5/sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9/' setup.py"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/domains/python\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-9591.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}