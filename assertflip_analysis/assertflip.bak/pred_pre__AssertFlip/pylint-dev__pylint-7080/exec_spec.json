{"instance_id": "pylint-dev__pylint-7080", "repo": "pylint-dev/pylint", "version": "2.15", "environment_setup_commit": "e90702074e68e20dc8e5df5013ee3ecf22139c3e", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_pylint-dev__pylint-7080.py\nnew file mode 100644\nindex e69de29..c0b393d 100644\n--- /dev/null\n+++ b/tests/test_coverup_pylint-dev__pylint-7080.py\n@@ -0,0 +1,48 @@\n+import os\n+import pytest\n+from unittest.mock import patch\n+\n+@pytest.fixture\n+def setup_test_environment(tmp_path):\n+    # Create a temporary directory structure\n+    src_dir = tmp_path / \"src\"\n+    gen_dir = src_dir / \"gen\"\n+    gen_dir.mkdir(parents=True, exist_ok=True)\n+\n+    # Create a file in the src/gen directory\n+    gen_file = gen_dir / \"about.py\"\n+    gen_file.write_text(\"# This is a generated file\\n\")\n+\n+    # Create a file in the src directory\n+    src_file = src_dir / \"main.py\"\n+    src_file.write_text(\"# This is a main file\\n\")\n+\n+    # Create pyproject.toml with ignore-paths\n+    pyproject_toml = tmp_path / \"pyproject.toml\"\n+    pyproject_toml.write_text(\n+        \"\"\"\n+        [tool.pylint.MASTER]\n+        ignore-paths = [\n+          \"^src/gen/.*$\",\n+        ]\n+        \"\"\"\n+    )\n+\n+    return str(tmp_path)\n+\n+@patch('subprocess.run')\n+def test_pylint_ignore_paths_with_recursive(mock_run, setup_test_environment):\n+    # Mock the output of pylint to simulate the bug\n+    mock_output = (\n+        \"************* Module about\\n\"\n+        \"src/gen/about.py:2:0: R2044: Line with empty comment (empty-comment)\\n\"\n+    )\n+    \n+    # Simulate the command execution\n+    mock_run.return_value.stdout = mock_output\n+\n+    # Run the test\n+    result = mock_run([\"pylint\", \"--recursive=y\", setup_test_environment])\n+\n+    # Assert that the output does not contain files from the ignored paths\n+    assert \"src/gen/about.py\" not in result.stdout\n"], "arch": "x86_64", "base_commit": "3c5eca2ded3dd2b59ebaf23eb289453b5d2930f0", "test_directives": ["tests/test_coverup_pylint-dev__pylint-7080.py"], "coverage_files": ["pylint/lint/expand_modules.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(pylint/lint/expand_modules\\.py)' -m pytest --no-header -rA  -p no:cacheprovider tests/test_coverup_pylint-dev__pylint-7080.py", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nblack==22.6.0\nflake8==5.0.4\nflake8-typing-imports==1.13.0\nisort==5.10.1\nmypy==0.971\n\nastroid==2.12.13  # Pinned to a specific version for tests\ntyping-extensions~=4.4\npy~=1.11.0\npytest~=7.2\npytest-benchmark~=4.0\npytest-timeout~=2.1\ntowncrier~=22.8\nrequests\n\ncoveralls~=3.3\ncoverage~=6.4\npre-commit~=2.20\ntbump~=6.9.0\ncontributors-txt>=0.9.0\npytest-cov~=3.0\npytest-profiling~=1.7\npytest-xdist~=2.5\ntypes-pkg_resources==0.1.3\ntox>=3\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}