{"instance_id": "django__django-15916", "repo": "django/django", "version": "4.2", "environment_setup_commit": "0fbdb9784da915fce5dcc1fe82bac9b4785749e5", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-15916.py\nnew file mode 100644\nindex e69de29..1823049 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15916.py\n@@ -0,0 +1,36 @@\n+from django.test import SimpleTestCase\n+from django import forms\n+from django.db import models\n+from django.forms import modelform_factory\n+\n+class TestModel(models.Model):\n+    active = models.BooleanField()\n+    name = models.CharField(max_length=64, blank=True, null=True)\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+def all_required(field, **kwargs):\n+    formfield = field.formfield(**kwargs)\n+    formfield.required = True\n+    return formfield\n+\n+class MyForm(forms.ModelForm):\n+    class Meta:\n+        model = TestModel\n+        formfield_callback = all_required\n+        fields = ['active', 'name']\n+\n+class ModelFormFactoryTest(SimpleTestCase):\n+    def test_modelform_factory_uses_meta_formfield_callback(self):\n+        \"\"\"\n+        Test that modelform_factory uses the formfield_callback specified\n+        in the Meta class of the provided form class. The fields should be\n+        required, which is the correct behavior once the bug is fixed.\n+        \"\"\"\n+        FactoryForm = modelform_factory(TestModel, form=MyForm)\n+        form = FactoryForm()\n+\n+        # Check if the fields are required, which is the correct behavior\n+        self.assertTrue(form.fields['active'].required)\n+        self.assertTrue(form.fields['name'].required)\n"], "arch": "x86_64", "base_commit": "88e67a54b7ed0210c11523a337b498aadb2f5187", "test_directives": ["test_coverup_django__django-15916"], "coverage_files": ["django/forms/models.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/models\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15916", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.6.0\nargon2-cffi >= 19.2.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2; python_version < '3.12'\njinja2 >= 2.11.0\nnumpy; python_version < '3.12'\nPillow >= 6.2.1; sys.platform != 'win32' or python_version < '3.12'\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.4.0\nselenium\nsqlparse >= 0.3.1\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}