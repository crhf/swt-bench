{"instance_id": "scikit-learn__scikit-learn-11310", "repo": "scikit-learn/scikit-learn", "version": "0.20", "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1", "patch_list": ["diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-11310.py\nnew file mode 100644\nindex e69de29..3db244d 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-11310.py\n@@ -0,0 +1,22 @@\n+import pytest\n+from sklearn.datasets import load_iris\n+from sklearn.model_selection import GridSearchCV\n+from sklearn.ensemble import RandomForestClassifier\n+\n+def test_missing_refit_time_attribute():\n+    # Load a simple dataset\n+    X, y = load_iris(return_X_y=True)\n+    \n+    # Set up the estimator and parameter grid\n+    estimator = RandomForestClassifier()\n+    param_grid = {'n_estimators': [2, 3]}\n+    \n+    # Initialize GridSearchCV\n+    grid_search = GridSearchCV(estimator=estimator, param_grid=param_grid, refit=True)\n+    \n+    # Fit the model\n+    grid_search.fit(X, y)\n+    \n+    # Check if the refit_time_ attribute exists and is a float\n+    assert hasattr(grid_search, 'refit_time_'), \"refit_time_ attribute is missing\"\n+    assert isinstance(grid_search.refit_time_, float), \"refit_time_ should be a float\"\n"], "arch": "x86_64", "base_commit": "553b5fb8f84ba05c8397f26dd079deece2b05029", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-11310.py"], "coverage_files": ["sklearn/model_selection/_search.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/model_selection/_search\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-11310.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}