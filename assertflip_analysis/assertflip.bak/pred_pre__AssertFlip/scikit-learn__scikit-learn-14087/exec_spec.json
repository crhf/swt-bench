{"instance_id": "scikit-learn__scikit-learn-14087", "repo": "scikit-learn/scikit-learn", "version": "0.22", "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d", "patch_list": ["diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14087.py\nnew file mode 100644\nindex e69de29..b73dd86 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-14087.py\n@@ -0,0 +1,22 @@\n+import pytest\n+import numpy as np\n+from sklearn.linear_model import LogisticRegressionCV\n+\n+def test_logistic_regression_cv_refit_false_index_error():\n+    # Set random seed for reproducibility\n+    np.random.seed(29)\n+    \n+    # Generate random data\n+    X = np.random.normal(size=(1000, 3))\n+    beta = np.random.normal(size=3)\n+    intercept = np.random.normal(size=None)\n+    y = np.sign(intercept + X @ beta)\n+    \n+    # Initialize LogisticRegressionCV with refit=False\n+    model = LogisticRegressionCV(cv=5, solver='saga', tol=1e-2, refit=False)\n+    \n+    # Expect no error to be raised when the bug is fixed\n+    try:\n+        model.fit(X, y)\n+    except IndexError:\n+        pytest.fail(\"IndexError was raised with refit=False, indicating a bug.\")\n"], "arch": "x86_64", "base_commit": "a5743ed36fbd3fbc8e351bdab16561fbfca7dfa1", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-14087.py"], "coverage_files": ["sklearn/linear_model/logistic.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/linear_model/logistic\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-14087.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}