{"instance_id": "psf__requests-2931", "repo": "psf/requests", "version": "2.9", "environment_setup_commit": "bbeb0001cdc657ac8c7fef98e154229bc392db0e", "patch_list": ["diff --git a/dev/null b/test_coverup_psf__requests-2931.py\nnew file mode 100644\nindex e69de29..3241c60 100644\n--- /dev/null\n+++ b/test_coverup_psf__requests-2931.py\n@@ -0,0 +1,14 @@\n+import pytest\n+import requests\n+\n+def test_put_request_with_binary_payload():\n+    # Setup: Define the URL and the binary payload\n+    url = \"http://httpbin.org/put\"\n+    binary_payload = u\"\u00f6\u00f6\u00f6\".encode(\"utf-8\")\n+\n+    # Action: Send a PUT request with the binary payload\n+    # We expect this to succeed without raising an exception\n+    response = requests.put(url, data=binary_payload)\n+\n+    # Assert: Check that the request was successful\n+    assert response.status_code == 200\n"], "arch": "x86_64", "base_commit": "5f7a3a74aab1625c2bb65f643197ee885e3da576", "test_directives": ["test_coverup_psf__requests-2931.py"], "coverage_files": ["requests/models.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "pytest", "install": "python -m pip install ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(requests/models\\.py)' -m pytest --no-header -rA  -p no:cacheprovider test_coverup_psf__requests-2931.py", "req_install_commands": ["conda create -n testbed python=3.9 pytest -y"]}