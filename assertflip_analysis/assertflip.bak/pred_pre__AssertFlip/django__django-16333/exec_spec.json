{"instance_id": "django__django-16333", "repo": "django/django", "version": "4.2", "environment_setup_commit": "0fbdb9784da915fce5dcc1fe82bac9b4785749e5", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-16333.py\nnew file mode 100644\nindex e69de29..e3a16fa 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-16333.py\n@@ -0,0 +1,28 @@\n+from django.test import TestCase\n+from django.contrib.auth.models import User, Group\n+from django.contrib.auth.forms import UserCreationForm\n+\n+class UserCreationFormTest(TestCase):\n+    def setUp(self):\n+        # Create some group instances to use in the test\n+        self.group1 = Group.objects.create(name=\"Group 1\")\n+        self.group2 = Group.objects.create(name=\"Group 2\")\n+\n+    def test_user_creation_form_m2m_not_saved(self):\n+        # Data for the form, including ManyToManyField data\n+        form_data = {\n+            'username': 'testuser',\n+            'password1': 'complexpassword123',\n+            'password2': 'complexpassword123',\n+            'groups': [self.group1.id, self.group2.id]\n+        }\n+        form = UserCreationForm(data=form_data)\n+\n+        # Check if the form is valid\n+        self.assertTrue(form.is_valid())\n+\n+        # Save the form\n+        user = form.save()\n+\n+        # Check that the ManyToManyField data is saved\n+        self.assertEqual(user.groups.count(), 2)  # Correct behavior: should be 2 when the bug is fixed\n"], "arch": "x86_64", "base_commit": "60a7bd89860e504c0c33b02c78edcac87f6d1b5a", "test_directives": ["test_coverup_django__django-16333"], "coverage_files": ["django/contrib/auth/forms.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/auth/forms\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16333", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.6.0\nargon2-cffi >= 19.2.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2; python_version < '3.12'\njinja2 >= 2.11.0\nnumpy; python_version < '3.12'\nPillow >= 6.2.1; sys.platform != 'win32' or python_version < '3.12'\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.4.0\nselenium\nsqlparse >= 0.3.1\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}