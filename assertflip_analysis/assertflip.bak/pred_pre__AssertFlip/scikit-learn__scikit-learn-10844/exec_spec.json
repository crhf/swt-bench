{"instance_id": "scikit-learn__scikit-learn-10844", "repo": "scikit-learn/scikit-learn", "version": "0.20", "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1", "patch_list": ["diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-10844.py\nnew file mode 100644\nindex e69de29..0597851 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-10844.py\n@@ -0,0 +1,19 @@\n+import pytest\n+import numpy as np\n+from sklearn.metrics.cluster import fowlkes_mallows_score\n+\n+def test_fowlkes_mallows_score_overflow():\n+    # Create large label arrays to trigger overflow\n+    # These arrays are designed to create large pk and qk values\n+    labels_true = np.array([0] * 100000 + [1] * 100000)\n+    labels_pred = np.array([0] * 50000 + [1] * 50000 + [2] * 50000 + [3] * 50000)\n+\n+    # Call the fowlkes_mallows_score function\n+    score = fowlkes_mallows_score(labels_true, labels_pred)\n+\n+    # Assert that the score is not nan, indicating the bug is fixed\n+    assert not np.isnan(score), \"BUG: Expected a valid score, but got nan due to overflow\"\n+\n+# Note: This test is expected to fail by confirming the presence of the bug.\n+# Once the bug is fixed, the test should pass, indicating the function now returns a valid float without warnings.\n+\n"], "arch": "x86_64", "base_commit": "97523985b39ecde369d83352d7c3baf403b60a22", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-10844.py"], "coverage_files": ["sklearn/metrics/cluster/supervised.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/metrics/cluster/supervised\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-10844.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}