+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
+++ '[' -n '5.1.16(1)-release' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo ']'
+++ source /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo
++++ function_exists _get_comp_words_by_ref
++++ declare -f -F _get_comp_words_by_ref
++++ return 1
++++ return 0
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 41fef6f1352be994cd90056d47440fe9aa4c068f
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 41fef6f1352be994cd90056d47440fe9aa4c068f
Author: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Date:   Mon Dec 19 18:58:21 2022 +0000

    [pre-commit.ci] pre-commit autoupdate (#7389)
    
    updates:
    - [github.com/PyCQA/isort: 5.10.1 â†’ v5.11.3](https://github.com/PyCQA/isort/compare/5.10.1...v5.11.3)
    
    Co-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>

diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index ee8c783d..cb589df5 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -21,7 +21,7 @@ repos:
       - id: autoflake # isort should run before black as black sometimes tweaks the isort output
         args: ["--in-place", "--ignore-init-module-imports"]
   - repo: https://github.com/PyCQA/isort
-    rev: 5.10.1
+    rev: v5.11.3
     hooks:
       - id: isort
   - repo: https://github.com/asottile/pyupgrade
+ git diff 41fef6f1352be994cd90056d47440fe9aa4c068f
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval '. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh
++++ unset UDUNITS2_XML_PATH
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh
++++ unset PROJ_DATA
++++ unset PROJ_NETWORK
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh
++++ test -n ''
++++ unset XML_CATALOG_FILES
++++ unset xml_catalog_files_libxml2
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh
++++ unset GEOTIFF_CSV
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh
++++ unset GDAL_DATA
++++ '[' -n '' ']'
++++ unset GDAL_DRIVER_PATH
++++ '[' -n '' ']'
++++ unset CPL_ZIP_ENCODING
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
++++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ unset _CONDA_SET_ESMFMKFILE
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n '' ']'
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
+++ '[' -n '5.1.16(1)-release' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo ']'
+++ source /opt/miniconda3/envs/testbed/share/bash-completion/completions/gdalinfo
++++ function_exists _get_comp_words_by_ref
++++ declare -f -F _get_comp_words_by_ref
++++ return 1
++++ return 0
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy>=1.20 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==2022.12.1.dev10+g41fef6f13) (1.23.0)
Requirement already satisfied: pandas>=1.3 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==2022.12.1.dev10+g41fef6f13) (1.5.3)
Requirement already satisfied: packaging>=21.3 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==2022.12.1.dev10+g41fef6f13) (23.1)
Requirement already satisfied: python-dateutil>=2.8.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.3->xarray==2022.12.1.dev10+g41fef6f13) (2.8.2)
Requirement already satisfied: pytz>=2020.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.3->xarray==2022.12.1.dev10+g41fef6f13) (2023.3)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from python-dateutil>=2.8.1->pandas>=1.3->xarray==2022.12.1.dev10+g41fef6f13) (1.16.0)
Building wheels for collected packages: xarray
  Building editable for xarray (pyproject.toml): started
  Building editable for xarray (pyproject.toml): finished with status 'done'
  Created wheel for xarray: filename=xarray-2022.12.1.dev10+g41fef6f13-0.editable-py3-none-any.whl size=9051 sha256=cb051b8e89d76903cec8456899aa595d0b76c25c0ac29b1037dc264bcfe5f56d
  Stored in directory: /tmp/pip-ephem-wheel-cache-enz7kx8u/wheels/0d/a6/cb/465a7b303d624cc531250fa27c75d038ddc29430bdb6ba7c9f
Successfully built xarray
Installing collected packages: xarray
  Attempting uninstall: xarray
    Found existing installation: xarray 2022.12.1.dev10+g41fef6f13
    Uninstalling xarray-2022.12.1.dev10+g41fef6f13:
      Successfully uninstalled xarray-2022.12.1.dev10+g41fef6f13
Successfully installed xarray-2022.12.1.dev10+g41fef6f13
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
<stdin>:14: trailing whitespace.
    
<stdin>:17: trailing whitespace.
    
<stdin>:20: trailing whitespace.
    
Checking patch xarray/tests/test_coverup_pydata__xarray-7393.py...
Applied patch xarray/tests/test_coverup_pydata__xarray-7393.py cleanly.
warning: 3 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(xarray/core/indexing\.py)' -m pytest --no-header -rA -p no:cacheprovider xarray/tests/test_coverup_pydata__xarray-7393.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(xarray/core/indexing\\.py)']
============================= test session starts ==============================
collected 1 item

xarray/tests/test_coverup_pydata__xarray-7393.py F                       [100%]

=================================== FAILURES ===================================
________________________ test_stack_int32_to_int64_bug _________________________

    def test_stack_int32_to_int64_bug():
        # Create a dataset with a coordinate of dtype int32
        ds = xr.Dataset(coords={'a': np.array([0], dtype='i4')})
    
        # Perform the stack operation to create a MultiIndex
        stacked_ds = ds.stack(b=('a',))
    
        # Assert that the dtype of the original coordinate is int32
        assert ds['a'].values.dtype == np.int32
    
        # Assert that the dtype of the coordinate after stacking remains int32
>       assert stacked_ds['a'].values.dtype == np.int32
E       AssertionError: assert dtype('int64') == <class 'numpy.int32'>
E        +  where dtype('int64') = array([0]).dtype
E        +    where array([0]) = <xarray.DataArray 'a' (b: 1)>\narray([0])\nCoordinates:\n  * b        (b) object MultiIndex\n  * a        (b) int32 0.values
E        +  and   <class 'numpy.int32'> = np.int32

/testbed/xarray/tests/test_coverup_pydata__xarray-7393.py:16: AssertionError
----------------------------- Captured stdout call -----------------------------
3.33 indexing.py(1423):         from xarray.core.indexes import safe_cast_to_index
3.33 indexing.py(1425):         self.array = safe_cast_to_index(array)
3.33 indexing.py(1427):         if dtype is None:
3.33 indexing.py(1428):             self._dtype = get_valid_numpy_dtype(array)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1437):         if dtype is None:
3.33 indexing.py(1438):             dtype = self.dtype
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1439):         array = self.array
3.33 indexing.py(1440):         if isinstance(array, pd.PeriodIndex):
3.33 indexing.py(1444):         return np.asarray(array.values, dtype=dtype)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1423):         from xarray.core.indexes import safe_cast_to_index
3.33 indexing.py(1425):         self.array = safe_cast_to_index(array)
3.33 indexing.py(1427):         if dtype is None:
3.33 indexing.py(1430):             self._dtype = np.dtype(dtype)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1509):         array = self.array.copy(deep=True) if deep else self.array
3.33 indexing.py(1510):         return type(self)(array, self._dtype)
3.33 indexing.py(1423):         from xarray.core.indexes import safe_cast_to_index
3.33 indexing.py(1425):         self.array = safe_cast_to_index(array)
3.33 indexing.py(1427):         if dtype is None:
3.33 indexing.py(1430):             self._dtype = np.dtype(dtype)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1509):         array = self.array.copy(deep=True) if deep else self.array
3.33 indexing.py(1510):         return type(self)(array, self._dtype)
3.33 indexing.py(1423):         from xarray.core.indexes import safe_cast_to_index
3.33 indexing.py(1425):         self.array = safe_cast_to_index(array)
3.33 indexing.py(1427):         if dtype is None:
3.33 indexing.py(1430):             self._dtype = np.dtype(dtype)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1437):         if dtype is None:
3.33 indexing.py(1438):             dtype = self.dtype
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1439):         array = self.array
3.33 indexing.py(1440):         if isinstance(array, pd.PeriodIndex):
3.33 indexing.py(1444):         return np.asarray(array.values, dtype=dtype)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1530):         super().__init__(array, dtype)
3.33 indexing.py(1423):         from xarray.core.indexes import safe_cast_to_index
3.33 indexing.py(1425):         self.array = safe_cast_to_index(array)
3.33 indexing.py(1427):         if dtype is None:
3.33 indexing.py(1428):             self._dtype = get_valid_numpy_dtype(array)
3.33 indexing.py(1531):         self.level = level
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1530):         super().__init__(array, dtype)
3.33 indexing.py(1423):         from xarray.core.indexes import safe_cast_to_index
3.33 indexing.py(1425):         self.array = safe_cast_to_index(array)
3.33 indexing.py(1427):         if dtype is None:
3.33 indexing.py(1430):             self._dtype = np.dtype(dtype)
3.33 indexing.py(1531):         self.level = level
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1437):         if dtype is None:
3.33 indexing.py(1438):             dtype = self.dtype
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1439):         array = self.array
3.33 indexing.py(1440):         if isinstance(array, pd.PeriodIndex):
3.33 indexing.py(1444):         return np.asarray(array.values, dtype=dtype)
3.33 indexing.py(1534):         if self.level is not None:
3.33 indexing.py(1535):             return self.array.get_level_values(self.level).values
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1534):         if self.level is not None:
3.33 indexing.py(1535):             return self.array.get_level_values(self.level).values
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1574):         from xarray.core.formatting import format_array_flat
3.33 indexing.py(1576):         if self.level is None:
3.33 indexing.py(1577):             return "MultiIndex"
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1434):         return self._dtype
3.33 indexing.py(1574):         from xarray.core.formatting import format_array_flat
3.33 indexing.py(1576):         if self.level is None:
3.33 indexing.py(1579):             return format_array_flat(self._get_array_subset(), max_width)
3.33 indexing.py(1563):         threshold = max(100, OPTIONS["display_values_threshold"] + 2)
3.33 indexing.py(1564):         if self.size > threshold:
3.33 indexing.py(1448):         return (len(self.array),)
3.33 indexing.py(1569):             subset = self
3.33 indexing.py(1571):         return np.asarray(subset)
3.33 indexing.py(1534):         if self.level is not None:
3.33 indexing.py(1535):             return self.array.get_level_values(self.level).values
=========================== short test summary info ============================
FAILED xarray/tests/test_coverup_pydata__xarray-7393.py::test_stack_int32_to_int64_bug
============================== 1 failed in 1.45s ===============================
+ cat coverage.cover
{"/testbed/xarray/core/indexing.py": {"1": 1, "3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "13": 1, "14": 1, "15": 1, "17": 1, "18": 1, "19": 1, "20": 1, "26": 1, "27": 1, "34": 1, "35": 0, "37": 0, "38": 0, "41": 2, "42": 1, "87": 1, "125": 1, "163": 1, "164": 1, "160": 1, "205": 1, "235": 1, "239": 1, "245": 1, "274": 1, "289": 2, "315": 1, "319": 1, "326": 2, "355": 2, "396": 2, "440": 2, "446": 2, "454": 2, "477": 2, "554": 1, "557": 2, "607": 1, "615": 2, "647": 2, "671": 1, "693": 1, "728": 1, "752": 1, "780": 2, "781": 1, "792": 1, "827": 1, "837": 1, "853": 1, "935": 1, "1063": 1, "1083": 1, "1095": 1, "1099": 1, "1122": 1, "1167": 1, "1193": 1, "1219": 1, "1232": 2, "1286": 2, "1298": 2, "1341": 2, "1417": 2, "1513": 2, "64": 1, "65": 1, "66": 1, "67": 1, "68": 1, "69": 1, "71": 1, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "77": 0, "88": 0, "89": 0, "91": 0, "94": 0, "96": 0, "98": 0, "99": 0, "101": 0, "102": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "120": 0, "121": 0, "95": 0, "131": 0, "132": 0, "134": 0, "135": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "154": 0, "155": 0, "157": 0, "171": 0, "174": 0, "175": 0, "177": 0, "179": 0, "180": 0, "182": 0, "183": 0, "184": 0, "186": 0, "188": 0, "190": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "202": 0, "213": 0, "215": 0, "216": 0, "219": 0, "220": 0, "221": 0, "222": 0, "223": 0, "224": 0, "226": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "236": 0, "242": 0, "250": 0, "252": 0, "253": 0, "255": 0, "257": 0, "259": 0, "260": 0, "263": 0, "265": 0, "266": 0, "267": 0, "269": 0, "271": 0, "275": 0, "276": 0, "278": 0, "279": 0, "280": 0, "281": 0, "286": 0, "283": 0, "285": 0, "300": 1, "302": 1, "307": 1, "308": 1, "311": 1, "303": 0, "304": 0, "305": 0, "309": 0, "312": 0, "316": 0, "320": 0, "321": 0, "322": 0, "323": 0, "334": 1, "336": 1, "337": 0, "338": 0, "340": 0, "341": 0, "342": 0, "343": 0, "344": 0, "345": 0, "347": 0, "348": 0, "350": 0, "352": 0, "364": 1, "366": 1, "367": 0, "368": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "381": 0, "382": 0, "383": 0, "384": 0, "386": 0, "388": 0, "389": 0, "391": 0, "393": 0, "406": 1, "408": 1, "409": 0, "410": 0, "412": 0, "413": 0, "414": 0, "415": 0, "416": 0, "417": 0, "418": 0, "419": 0, "420": 0, "422": 0, "423": 0, "424": 0, "425": 0, "426": 0, "427": 0, "428": 0, "430": 0, "432": 0, "433": 0, "435": 0, "437": 0, "443": 1, "447": 1, "449": 1, "450": 0, "451": 0, "457": 1, "459": 1, "463": 1, "466": 1, "460": 0, "461": 0, "464": 0, "467": 0, "468": 0, "469": 0, "470": 0, "474": 0, "480": 1, "482": 1, "503": 1, "517": 1, "518": 1, "527": 1, "531": 1, "534": 1, "540": 1, "549": 1, "492": 0, "494": 0, "495": 0, "497": 0, "498": 0, "500": 0, "501": 0, "504": 0, "505": 0, "506": 0, "507": 0, "508": 0, "510": 0, "511": 0, "513": 0, "514": 0, "515": 0, "519": 0, "520": 0, "521": 0, "522": 0, "523": 0, "524": 0, "525": 0, "528": 0, "529": 0, "532": 0, "535": 0, "536": 0, "537": 0, "538": 0, "541": 0, "542": 0, "543": 0, "546": 0, "547": 0, "550": 0, "560": 1, "562": 1, "576": 1, "577": 1, "580": 1, "583": 1, "586": 1, "593": 1, "597": 1, "603": 1, "570": 0, "571": 0, "573": 0, "574": 0, "578": 0, "581": 0, "584": 0, "588": 0, "589": 0, "590": 0, "591": 0, "594": 0, "595": 0, "598": 0, "599": 0, "604": 0, "609": 0, "610": 0, "612": 0, "616": 1, "618": 1, "622": 1, "627": 1, "630": 1, "633": 1, "636": 1, "640": 1, "619": 0, "620": 0, "623": 0, "624": 0, "625": 0, "628": 0, "631": 0, "634": 0, "637": 0, "638": 0, "644": 0, "648": 1, "650": 1, "653": 1, "657": 1, "661": 1, "664": 1, "667": 1, "651": 0, "654": 0, "655": 0, "658": 0, "659": 0, "662": 0, "665": 0, "668": 0, "677": 0, "678": 0, "679": 0, "680": 0, "681": 0, "682": 0, "683": 0, "684": 0, "685": 0, "686": 0, "687": 0, "688": 0, "690": 0, "710": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "717": 0, "719": 0, "720": 0, "721": 0, "722": 0, "723": 0, "724": 0, "725": 0, "743": 0, "747": 0, "749": 0, "764": 0, "765": 0, "766": 0, "767": 0, "769": 0, "770": 0, "771": 0, "773": 0, "775": 0, "776": 0, "783": 1, "785": 1, "787": 1, "789": 1, "819": 0, "820": 0, "821": 0, "823": 0, "824": 0, "830": 0, "831": 0, "832": 0, "833": 0, "834": 0, "841": 0, "842": 0, "844": 0, "848": 0, "849": 0, "850": 0, "892": 0, "894": 0, "895": 0, "897": 0, "898": 0, "900": 0, "902": 0, "905": 0, "906": 0, "910": 0, "911": 0, "912": 0, "916": 0, "917": 0, "918": 0, "920": 0, "921": 0, "923": 0, "924": 0, "928": 0, "929": 0, "931": 0, "932": 0, "901": 0, "976": 0, "977": 0, "978": 0, "980": 0, "981": 0, "983": 0, "984": 0, "985": 0, "986": 0, "987": 0, "988": 0, "990": 0, "991": 0, "993": 0, "996": 0, "1000": 0, "1002": 0, "1004": 0, "1005": 0, "1008": 0, "1009": 0, "1010": 0, "1012": 0, "1013": 0, "1014": 0, "1015": 0, "1016": 0, "1018": 0, "1019": 0, "1020": 0, "1022": 0, "1024": 0, "1025": 0, "1026": 0, "1028": 0, "1029": 0, "1030": 0, "1031": 0, "1032": 0, "1033": 0, "1034": 0, "1035": 0, "1038": 0, "1039": 0, "1040": 0, "1042": 0, "1045": 0, "1047": 0, "1048": 0, "1051": 0, "1052": 0, "1053": 0, "1054": 0, "1056": 0, "1057": 0, "1058": 0, "1060": 0, "998": 0, "997": 0, "999": 0, "1065": 0, "1066": 0, "1067": 0, "1069": 0, "1070": 0, "1071": 0, "1072": 0, "1073": 0, "1074": 0, "1075": 0, "1077": 0, "1078": 0, "1079": 0, "1080": 0, "1085": 0, "1087": 0, "1088": 0, "1089": 0, "1090": 0, "1091": 0, "1092": 0, "1096": 0, "1101": 0, "1102": 0, "1104": 0, "1105": 0, "1106": 0, "1107": 0, "1108": 0, "1109": 0, "1110": 0, "1112": 0, "1114": 0, "1116": 0, "1118": 0, "1119": 0, "1142": 0, "1143": 0, "1144": 0, "1145": 0, "1164": 0, "1147": 0, "1148": 0, "1149": 0, "1150": 0, "1152": 0, "1155": 0, "1156": 0, "1158": 0, "1159": 0, "1162": 0, "1153": 0, "1151": 0, "1181": 0, "1182": 0, "1183": 0, "1185": 0, "1186": 0, "1187": 0, "1188": 0, "1189": 0, "1190": 0, "1210": 0, "1214": 0, "1216": 0, "1212": 0, "1211": 0, "1213": 0, "1223": 0, "1224": 0, "1225": 0, "1226": 0, "1227": 0, "1228": 0, "1229": 0, "1235": 1, "1237": 1, "1246": 1, "1264": 1, "1267": 1, "1271": 1, "1239": 0, "1240": 0, "1241": 0, "1242": 0, "1244": 0, "1247": 0, "1248": 0, "1249": 0, "1262": 0, "1250": 0, "1251": 0, "1252": 0, "1253": 0, "1254": 0, "1258": 0, "1260": 0, "1265": 0, "1268": 0, "1269": 0, "1272": 0, "1273": 0, "1274": 0, "1275": 0, "1277": 0, "1278": 0, "1279": 0, "1283": 0, "1287": 1, "1289": 1, "1290": 0, "1291": 0, "1292": 0, "1295": 0, "1301": 1, "1303": 1, "1311": 1, "1327": 1, "1336": 1, "1304": 0, "1305": 0, "1306": 0, "1309": 0, "1312": 0, "1313": 0, "1314": 0, "1316": 0, "1317": 0, "1318": 0, "1319": 0, "1320": 0, "1322": 0, "1323": 0, "1325": 0, "1328": 0, "1329": 0, "1331": 0, "1332": 0, "1334": 0, "1337": 0, "1338": 0, "1344": 1, "1346": 1, "1352": 1, "1388": 1, "1413": 1, "1350": 0, "1354": 0, "1358": 0, "1359": 0, "1360": 0, "1361": 0, "1362": 0, "1364": 0, "1365": 0, "1367": 0, "1368": 0, "1369": 0, "1371": 0, "1372": 0, "1373": 0, "1374": 0, "1376": 0, "1377": 0, "1378": 0, "1379": 0, "1380": 0, "1383": 0, "1384": 0, "1385": 0, "1386": 0, "1389": 0, "1390": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1396": 0, "1398": 0, "1399": 0, "1400": 0, "1403": 0, "1405": 0, "1406": 0, "1414": 0, "1420": 1, "1422": 1, "1432": 1, "1433": 1, "1436": 1, "1446": 1, "1447": 1, "1450": 1, "1470": 1, "1495": 1, "1498": 1, "1501": 1, "1423": 6, "1425": 6, "1427": 6, "1428": 2, "1430": 4, "1434": 10, "1437": 3, "1438": 3, "1439": 3, "1440": 3, "1441": 0, "1443": 0, "1444": 3, "1448": 36, "1451": 0, "1456": 0, "1468": 0, "1457": 0, "1458": 0, "1459": 0, "1462": 0, "1463": 0, "1464": 0, "1479": 0, "1480": 0, "1483": 0, "1485": 0, "1486": 0, "1488": 0, "1490": 0, "1491": 0, "1493": 0, "1496": 0, "1499": 0, "1509": 2, "1510": 2, "1522": 1, "1527": 1, "1528": 1, "1524": 1, "1533": 1, "1539": 1, "1545": 1, "1552": 1, "1561": 1, "1573": 1, "1581": 1, "1587": 1, "1530": 2, "1531": 2, "1534": 3, "1535": 3, "1537": 0, "1540": 0, "1541": 0, "1542": 0, "1543": 0, "1546": 0, "1547": 0, "1548": 0, "1550": 0, "1553": 0, "1554": 0, "1557": 0, "1556": 0, "1559": 0, "1563": 1, "1564": 1, "1565": 0, "1566": 0, "1567": 0, "1569": 1, "1571": 1, "1574": 2, "1576": 2, "1577": 1, "1579": 1, "1582": 0, "1584": 0, "1585": 0, "1589": 0, "1590": 0}}
+ git checkout 41fef6f1352be994cd90056d47440fe9aa4c068f
Note: switching to '41fef6f1352be994cd90056d47440fe9aa4c068f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 41fef6f1 [pre-commit.ci] pre-commit autoupdate (#7389)
+ git apply /root/pre_state.patch
error: unrecognized input
