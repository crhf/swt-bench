+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 1d3327b8e90a186df6972991963a5ae87053259d
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit 1d3327b8e90a186df6972991963a5ae87053259d
Merge: 1e87356141 ab27ab6080
Author: Chris Smith <smichr@gmail.com>
Date:   Sun Jun 30 10:50:57 2019 -0500

    Merge pull request #17128 from gschintgen/fix9638-add-test
    
    Add test for simplify(asin(sin(x)))

+ git diff 1d3327b8e90a186df6972991963a5ae87053259d
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.5.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.5.dev0
    Uninstalling sympy-1.5.dev0:
      Successfully uninstalled sympy-1.5.dev0
  DEPRECATION: Legacy editable install of sympy==1.5.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-17139.py...
<stdin>:19: new blank line at EOF.
+
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-17139.py cleanly.
warning: 1 line adds whitespace errors.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/simplify/fu\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-17139.p
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/simplify/fu\\.py)']
0.34 fu.py(1): """
0.34 fu.py(189): from __future__ import print_function, division
0.34 fu.py(191): from collections import defaultdict
0.34 fu.py(193): from sympy.core.add import Add
0.34 fu.py(194): from sympy.core.basic import S
0.34 fu.py(195): from sympy.core.compatibility import ordered, range
0.34 fu.py(196): from sympy.core.expr import Expr
0.34 fu.py(197): from sympy.core.exprtools import Factors, gcd_terms, factor_terms
0.34 fu.py(198): from sympy.core.function import expand_mul
0.34 fu.py(199): from sympy.core.mul import Mul
0.34 fu.py(200): from sympy.core.numbers import pi, I
0.34 fu.py(201): from sympy.core.power import Pow
0.34 fu.py(202): from sympy.core.symbol import Dummy
0.34 fu.py(203): from sympy.core.sympify import sympify
0.34 fu.py(204): from sympy.functions.combinatorial.factorials import binomial
0.34 fu.py(205): from sympy.functions.elementary.hyperbolic import (
0.34 fu.py(207): from sympy.functions.elementary.trigonometric import (
0.34 fu.py(209): from sympy.ntheory.factor_ import perfect_power
0.34 fu.py(210): from sympy.polys.polytools import factor
0.34 fu.py(211): from sympy.simplify.simplify import bottom_up
0.34 fu.py(212): from sympy.strategies.tree import greedy
0.34 fu.py(213): from sympy.strategies.core import identity, debug
0.34 fu.py(215): from sympy import SYMPY_DEBUG
0.34 fu.py(221): def TR0(rv):
0.34 fu.py(230): def TR1(rv):
0.34 fu.py(254): def TR2(rv):
0.34 fu.py(284): def TR2i(rv, half=False):
0.34 fu.py(400): def TR3(rv):
0.34 fu.py(442): def TR4(rv):
0.34 fu.py(470): def _TR56(rv, f, g, h, max, pow):
0.34 fu.py(527): def TR5(rv, max=4, pow=False):
0.34 fu.py(548): def TR6(rv, max=4, pow=False):
0.34 fu.py(569): def TR7(rv):
0.34 fu.py(593): def TR8(rv, first=True):
0.34 fu.py(668): def TR9(rv):
0.34 fu.py(762): def TR10(rv, first=True):
0.34 fu.py(810): def TR10i(rv):
0.34 fu.py(942): def TR11(rv, base=None):
0.34 fu.py(1022): def TR12(rv, first=True):
0.34 fu.py(1058): def TR12i(rv):
0.34 fu.py(1183): def TR13(rv):
0.34 fu.py(1230): def TRmorrie(rv):
0.34 fu.py(1350): def TR14(rv, first=True):
0.34 fu.py(1471): def TR15(rv, max=4, pow=False):
0.34 fu.py(1500): def TR16(rv, max=4, pow=False):
0.34 fu.py(1529): def TR111(rv):
0.34 fu.py(1561): def TR22(rv, max=4, pow=False):
0.34 fu.py(1590): def TRpower(rv):
0.34 fu.py(1636): def L(rv):
0.34 fu.py(1653): if SYMPY_DEBUG:
0.34 fu.py(1664): CTR1 = [(TR5, TR0), (TR6, TR0), identity]
0.34 fu.py(1666): CTR2 = (TR11, [(TR5, TR0), (TR6, TR0), TR0])
0.34 fu.py(1668): CTR3 = [(TRmorrie, TR8, TR0), (TRmorrie, TR8, TR10i, TR0), identity]
0.34 fu.py(1670): CTR4 = [(TR4, TR10i), identity]
0.34 fu.py(1672): RL1 = (TR4, TR3, TR4, TR12, TR4, TR13, TR4, TR0)
0.34 fu.py(1681):     (TR4, TR3, TR10, TR4, TR3, TR11),
0.34 fu.py(1682):     (TR5, TR7, TR11, TR4),
0.34 fu.py(1683):     (CTR3, CTR1, TR9, CTR2, TR4, TR9, TR9, CTR4),
0.34 fu.py(1684):     identity,
0.34 fu.py(1680): RL2 = [
0.34 fu.py(1688): def fu(rv, measure=lambda x: (L(x), x.count_ops())):
0.34 fu.py(1779): def process_common_addends(rv, do, key2=None, key1=True):
0.34 fu.py(1821): fufuncs = '''
0.34 fu.py(1825): FU = dict(list(zip(fufuncs, list(map(locals().get, fufuncs)))))
0.34 fu.py(1828): def _roots():
0.34 fu.py(1832): _ROOT2 = None
0.34 fu.py(1835): def trig_split(a, b, two=False):
0.34 fu.py(2017): def as_f_sign_1(e):
0.34 fu.py(2074): def _osborne(e, d):
0.34 fu.py(2114): def _osbornei(e, d):
0.34 fu.py(2153): def hyper_as_trig(rv):
0.34 fu.py(2196): def sincos_to_sum(expr):
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        91513902
hash randomization: on (PYTHONHASHSEED=1719250767)

sympy/polys/tests/test_coverup_sympy__sympy-17139.py[1] 
test_simplify_cos_complex_exponent 0.75 fu.py(418):     from sympy.simplify.simplify import signsimp
0.75 fu.py(428):     def f(rv):
0.75 fu.py(439):     return bottom_up(rv, f)
0.75 fu.py(429):         if not isinstance(rv, TrigonometricFunction):
0.75 fu.py(431):         rv = rv.func(signsimp(rv.args[0]))
0.75 fu.py(432):         if not isinstance(rv, TrigonometricFunction):
0.75 fu.py(434):         if (rv.args[0] - S.Pi/4).is_positive is (S.Pi/2 - rv.args[0]).is_positive is True:
0.76 fu.py(437):         return rv
0.76 fu.py(242):     def f(rv):
0.76 fu.py(251):     return bottom_up(rv, f)
0.76 fu.py(243):         if isinstance(rv, sec):
0.76 fu.py(246):         elif isinstance(rv, csc):
0.76 fu.py(249):         return rv
0.76 fu.py(1036):     def f(rv):
0.76 fu.py(1055):     return bottom_up(rv, f)
0.76 fu.py(1037):         if not rv.func == tan:
0.76 fu.py(1038):             return rv
0.76 fu.py(272):     def f(rv):
0.76 fu.py(281):     return bottom_up(rv, f)
0.76 fu.py(273):         if isinstance(rv, tan):
0.76 fu.py(276):         elif isinstance(rv, cot):
0.76 fu.py(279):         return rv
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(312):     def f(rv):
0.76 fu.py(397):     return bottom_up(rv, f)
0.76 fu.py(313):         if not rv.is_Mul:
0.76 fu.py(314):             return rv
0.76 fu.py(1372):     def f(rv):
0.76 fu.py(1468):     return bottom_up(rv, f)
0.76 fu.py(1373):         if not rv.is_Mul:
0.76 fu.py(1374):             return rv
0.76 fu.py(545):     return _TR56(rv, sin, cos, lambda x: 1 - x, max=max, pow=pow)
0.76 fu.py(496):     def _f(rv):
0.76 fu.py(524):     return bottom_up(rv, _f)
0.76 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.76 fu.py(502):             return rv
0.76 fu.py(780):     def f(rv):
0.76 fu.py(807):     return bottom_up(rv, f)
0.76 fu.py(781):         if not rv.func in (cos, sin):
0.76 fu.py(784):         f = rv.func
0.76 fu.py(785):         arg = rv.args[0]
0.76 fu.py(786):         if arg.is_Add:
0.76 fu.py(805):         return rv
0.76 fu.py(984):     def f(rv):
0.76 fu.py(1019):     return bottom_up(rv, f)
0.76 fu.py(985):         if not rv.func in (cos, sin):
0.76 fu.py(988):         if base:
0.76 fu.py(1005):         elif not rv.args[0].is_Number:
0.76 fu.py(1008):             c, m = rv.args[0].as_coeff_Mul(rational=True)
0.76 fu.py(1009):             if c.p % 2 == 0:
0.76 fu.py(1017):         return rv
0.76 fu.py(566):     return _TR56(rv, cos, sin, lambda x: 1 - x, max=max, pow=pow)
0.76 fu.py(496):     def _f(rv):
0.76 fu.py(524):     return bottom_up(rv, _f)
0.76 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.76 fu.py(502):             return rv
0.76 fu.py(1372):     def f(rv):
0.76 fu.py(1468):     return bottom_up(rv, f)
0.76 fu.py(1373):         if not rv.is_Mul:
0.76 fu.py(1374):             return rv
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(829):     if _ROOT2 is None:
0.76 fu.py(830):         _roots()
0.76 fu.py(1830):     _ROOT2, _ROOT3 = sqrt(2), sqrt(3)
0.76 fu.py(1831):     _invROOT3 = 1/_ROOT3
0.76 fu.py(832):     def f(rv):
0.76 fu.py(939):     return bottom_up(rv, f)
0.76 fu.py(833):         if not rv.is_Add:
0.76 fu.py(834):             return rv
0.76 fu.py(1289):     def f(rv, first=True):
0.76 fu.py(1347):     return bottom_up(rv, f)
0.76 fu.py(1290):         if not rv.is_Mul:
0.76 fu.py(1291):             return rv
0.76 fu.py(610):     def f(rv):
0.76 fu.py(665):     return bottom_up(rv, f)
0.76 fu.py(612):             rv.is_Mul or
0.76 fu.py(611):         if not (
0.76 fu.py(613):             rv.is_Pow and
0.76 fu.py(611):         if not (
0.76 fu.py(616):             return rv
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(272):     def f(rv):
0.76 fu.py(281):     return bottom_up(rv, f)
0.76 fu.py(273):         if isinstance(rv, tan):
0.76 fu.py(276):         elif isinstance(rv, cot):
0.76 fu.py(279):         return rv
0.76 fu.py(312):     def f(rv):
0.76 fu.py(397):     return bottom_up(rv, f)
0.76 fu.py(313):         if not rv.is_Mul:
0.76 fu.py(314):             return rv
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(545):     return _TR56(rv, sin, cos, lambda x: 1 - x, max=max, pow=pow)
0.76 fu.py(496):     def _f(rv):
0.76 fu.py(524):     return bottom_up(rv, _f)
0.76 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.76 fu.py(502):             return rv
0.76 fu.py(1487):     def f(rv):
0.76 fu.py(1497):     return bottom_up(rv, f)
0.76 fu.py(1488):         if not (isinstance(rv, Pow) and isinstance(rv.base, sin)):
0.76 fu.py(1489):             return rv
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(566):     return _TR56(rv, cos, sin, lambda x: 1 - x, max=max, pow=pow)
0.76 fu.py(496):     def _f(rv):
0.76 fu.py(524):     return bottom_up(rv, _f)
0.76 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.76 fu.py(502):             return rv
0.76 fu.py(1516):     def f(rv):
0.76 fu.py(1526):     return bottom_up(rv, f)
0.76 fu.py(1517):         if not (isinstance(rv, Pow) and isinstance(rv.base, cos)):
0.76 fu.py(1518):             return rv
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.76 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1544):     def f(rv):
0.77 fu.py(1558):     return bottom_up(rv, f)
0.77 fu.py(1546):             isinstance(rv, Pow) and
0.77 fu.py(1545):         if not (
0.77 fu.py(1548):             return rv
0.77 fu.py(312):     def f(rv):
0.77 fu.py(397):     return bottom_up(rv, f)
0.77 fu.py(313):         if not rv.is_Mul:
0.77 fu.py(314):             return rv
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1579):     def f(rv):
0.77 fu.py(1587):     return bottom_up(rv, f)
0.77 fu.py(1580):         if not (isinstance(rv, Pow) and rv.base.func in (cot, tan)):
0.77 fu.py(1581):             return rv
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(242):     def f(rv):
0.77 fu.py(251):     return bottom_up(rv, f)
0.77 fu.py(243):         if isinstance(rv, sec):
0.77 fu.py(246):         elif isinstance(rv, csc):
0.77 fu.py(249):         return rv
0.77 fu.py(272):     def f(rv):
0.77 fu.py(281):     return bottom_up(rv, f)
0.77 fu.py(273):         if isinstance(rv, tan):
0.77 fu.py(276):         elif isinstance(rv, cot):
0.77 fu.py(279):         return rv
0.77 fu.py(312):     def f(rv):
0.77 fu.py(397):     return bottom_up(rv, f)
0.77 fu.py(313):         if not rv.is_Mul:
0.77 fu.py(314):             return rv
0.77 fu.py(1036):     def f(rv):
0.77 fu.py(1055):     return bottom_up(rv, f)
0.77 fu.py(1037):         if not rv.func == tan:
0.77 fu.py(1038):             return rv
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.77 fu.py(418):     from sympy.simplify.simplify import signsimp
0.77 fu.py(428):     def f(rv):
0.77 fu.py(439):     return bottom_up(rv, f)
0.77 fu.py(429):         if not isinstance(rv, TrigonometricFunction):
0.77 fu.py(431):         rv = rv.func(signsimp(rv.args[0]))
0.77 fu.py(432):         if not isinstance(rv, TrigonometricFunction):
0.77 fu.py(434):         if (rv.args[0] - S.Pi/4).is_positive is (S.Pi/2 - rv.args[0]).is_positive is True:
0.77 fu.py(437):         return rv
0.77 fu.py(429):         if not isinstance(rv, TrigonometricFunction):
0.77 fu.py(430):             return rv
0.77 fu.py(242):     def f(rv):
0.77 fu.py(251):     return bottom_up(rv, f)
0.77 fu.py(243):         if isinstance(rv, sec):
0.77 fu.py(246):         elif isinstance(rv, csc):
0.77 fu.py(249):         return rv
0.77 fu.py(243):         if isinstance(rv, sec):
0.77 fu.py(246):         elif isinstance(rv, csc):
0.77 fu.py(249):         return rv
0.77 fu.py(1036):     def f(rv):
0.77 fu.py(1055):     return bottom_up(rv, f)
0.77 fu.py(1037):         if not rv.func == tan:
0.77 fu.py(1038):             return rv
0.77 fu.py(1037):         if not rv.func == tan:
0.77 fu.py(1038):             return rv
0.78 fu.py(272):     def f(rv):
0.78 fu.py(281):     return bottom_up(rv, f)
0.78 fu.py(273):         if isinstance(rv, tan):
0.78 fu.py(276):         elif isinstance(rv, cot):
0.78 fu.py(279):         return rv
0.78 fu.py(273):         if isinstance(rv, tan):
0.78 fu.py(276):         elif isinstance(rv, cot):
0.78 fu.py(279):         return rv
0.78 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.78 fu.py(1648):     return S(rv.count(TrigonometricFunction))
0.78 fu.py(312):     def f(rv):
0.78 fu.py(397):     return bottom_up(rv, f)
0.78 fu.py(313):         if not rv.is_Mul:
0.78 fu.py(314):             return rv
0.78 fu.py(313):         if not rv.is_Mul:
0.78 fu.py(314):             return rv
0.78 fu.py(1372):     def f(rv):
0.78 fu.py(1468):     return bottom_up(rv, f)
0.78 fu.py(1373):         if not rv.is_Mul:
0.78 fu.py(1374):             return rv
0.78 fu.py(1373):         if not rv.is_Mul:
0.78 fu.py(1374):             return rv
0.78 fu.py(545):     return _TR56(rv, sin, cos, lambda x: 1 - x, max=max, pow=pow)
0.78 fu.py(496):     def _f(rv):
0.78 fu.py(524):     return bottom_up(rv, _f)
0.78 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.78 fu.py(502):             return rv
0.78 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.78 fu.py(502):             return rv
0.78 fu.py(780):     def f(rv):
0.78 fu.py(807):     return bottom_up(rv, f)
0.78 fu.py(781):         if not rv.func in (cos, sin):
0.78 fu.py(784):         f = rv.func
0.78 fu.py(785):         arg = rv.args[0]
0.78 fu.py(786):         if arg.is_Add:
0.78 fu.py(805):         return rv
0.78 fu.py(781):         if not rv.func in (cos, sin):
0.78 fu.py(782):             return rv
0.78 fu.py(984):     def f(rv):
0.78 fu.py(1019):     return bottom_up(rv, f)
0.78 fu.py(985):         if not rv.func in (cos, sin):
0.78 fu.py(988):         if base:
0.78 fu.py(1005):         elif not rv.args[0].is_Number:
0.78 fu.py(1008):             c, m = rv.args[0].as_coeff_Mul(rational=True)
0.78 fu.py(1009):             if c.p % 2 == 0:
0.78 fu.py(1017):         return rv
0.78 fu.py(985):         if not rv.func in (cos, sin):
0.78 fu.py(986):             return rv
0.78 fu.py(566):     return _TR56(rv, cos, sin, lambda x: 1 - x, max=max, pow=pow)
0.78 fu.py(496):     def _f(rv):
0.78 fu.py(524):     return bottom_up(rv, _f)
0.78 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.78 fu.py(502):             return rv
0.78 fu.py(501):         if not (rv.is_Pow and rv.base.func == f):
0.78 fu.py(504):         if (rv.exp < 0) == True:
F                                      [FAIL]


________________________________________________________________________________
 sympy/polys/tests/test_coverup_sympy__sympy-17139.py:test_simplify_cos_complex_exponent 
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_coverup_sympy__sympy-17139.py", line 8, in test_simplify_cos_complex_exponent
    result = simplify(expr)
  File "/testbed/sympy/simplify/simplify.py", line 587, in simplify
    expr = trigsimp(expr, deep=True)
  File "/testbed/sympy/simplify/trigsimp.py", line 508, in trigsimp
    return trigsimpfunc(expr)
  File "/testbed/sympy/simplify/trigsimp.py", line 501, in <lambda>
    'matching': (lambda x: futrig(x)),
  File "/testbed/sympy/simplify/trigsimp.py", line 1101, in futrig
    e = bottom_up(e, lambda x: _futrig(x, **kwargs))
  File "/testbed/sympy/simplify/simplify.py", line 1081, in bottom_up
    rv = F(rv)
  File "/testbed/sympy/simplify/trigsimp.py", line 1101, in <lambda>
    e = bottom_up(e, lambda x: _futrig(x, **kwargs))
  File "/testbed/sympy/simplify/trigsimp.py", line 1169, in _futrig
    e = greedy(tree, objective=Lops)(e)
  File "/testbed/sympy/strategies/core.py", line 115, in minrule
    return min([rule(expr) for rule in rules], key=objective)
  File "/testbed/sympy/strategies/core.py", line 115, in <listcomp>
    return min([rule(expr) for rule in rules], key=objective)
  File "/testbed/sympy/strategies/core.py", line 44, in chain_rl
    expr = rule(expr)
  File "/testbed/sympy/simplify/fu.py", line 566, in TR6
    return _TR56(rv, cos, sin, lambda x: 1 - x, max=max, pow=pow)
  File "/testbed/sympy/simplify/fu.py", line 524, in _TR56
    return bottom_up(rv, _f)
  File "/testbed/sympy/simplify/simplify.py", line 1081, in bottom_up
    rv = F(rv)
  File "/testbed/sympy/simplify/fu.py", line 504, in _f
    if (rv.exp < 0) == True:
  File "/testbed/sympy/core/expr.py", line 406, in __lt__
    raise TypeError("Invalid comparison of complex %s" % me)
TypeError: Invalid comparison of complex I

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_coverup_sympy__sympy-17139.py", line 10, in test_simplify_cos_complex_exponent
    assert False, "TypeError was raised"
AssertionError: TypeError was raised

============= tests finished: 0 passed, 1 failed, in 0.14 seconds ==============
DO *NOT* COMMIT!
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/simplify/fu\\.py)']
0.73 fu.py(1): """
0.73 fu.py(189): from __future__ import print_function, division
0.73 fu.py(191): from collections import defaultdict
0.73 fu.py(193): from sympy.core.add import Add
0.73 fu.py(194): from sympy.core.basic import S
0.73 fu.py(195): from sympy.core.compatibility import ordered, range
0.73 fu.py(196): from sympy.core.expr import Expr
0.73 fu.py(197): from sympy.core.exprtools import Factors, gcd_terms, factor_terms
0.73 fu.py(198): from sympy.core.function import expand_mul
0.73 fu.py(199): from sympy.core.mul import Mul
0.73 fu.py(200): from sympy.core.numbers import pi, I
0.73 fu.py(201): from sympy.core.power import Pow
0.73 fu.py(202): from sympy.core.symbol import Dummy
0.73 fu.py(203): from sympy.core.sympify import sympify
0.73 fu.py(204): from sympy.functions.combinatorial.factorials import binomial
0.73 fu.py(205): from sympy.functions.elementary.hyperbolic import (
0.73 fu.py(207): from sympy.functions.elementary.trigonometric import (
0.73 fu.py(209): from sympy.ntheory.factor_ import perfect_power
0.73 fu.py(210): from sympy.polys.polytools import factor
0.73 fu.py(211): from sympy.simplify.simplify import bottom_up
0.73 fu.py(212): from sympy.strategies.tree import greedy
0.73 fu.py(213): from sympy.strategies.core import identity, debug
0.73 fu.py(215): from sympy import SYMPY_DEBUG
0.73 fu.py(221): def TR0(rv):
0.73 fu.py(230): def TR1(rv):
0.73 fu.py(254): def TR2(rv):
0.73 fu.py(284): def TR2i(rv, half=False):
0.73 fu.py(400): def TR3(rv):
0.73 fu.py(442): def TR4(rv):
0.73 fu.py(470): def _TR56(rv, f, g, h, max, pow):
0.73 fu.py(527): def TR5(rv, max=4, pow=False):
0.73 fu.py(548): def TR6(rv, max=4, pow=False):
0.73 fu.py(569): def TR7(rv):
0.73 fu.py(593): def TR8(rv, first=True):
0.73 fu.py(668): def TR9(rv):
0.73 fu.py(762): def TR10(rv, first=True):
0.73 fu.py(810): def TR10i(rv):
0.73 fu.py(942): def TR11(rv, base=None):
0.73 fu.py(1022): def TR12(rv, first=True):
0.73 fu.py(1058): def TR12i(rv):
0.73 fu.py(1183): def TR13(rv):
0.73 fu.py(1230): def TRmorrie(rv):
0.73 fu.py(1350): def TR14(rv, first=True):
0.73 fu.py(1471): def TR15(rv, max=4, pow=False):
0.73 fu.py(1500): def TR16(rv, max=4, pow=False):
0.73 fu.py(1529): def TR111(rv):
0.73 fu.py(1561): def TR22(rv, max=4, pow=False):
0.73 fu.py(1590): def TRpower(rv):
0.73 fu.py(1636): def L(rv):
0.73 fu.py(1653): if SYMPY_DEBUG:
0.73 fu.py(1664): CTR1 = [(TR5, TR0), (TR6, TR0), identity]
0.73 fu.py(1666): CTR2 = (TR11, [(TR5, TR0), (TR6, TR0), TR0])
0.73 fu.py(1668): CTR3 = [(TRmorrie, TR8, TR0), (TRmorrie, TR8, TR10i, TR0), identity]
0.73 fu.py(1670): CTR4 = [(TR4, TR10i), identity]
0.73 fu.py(1672): RL1 = (TR4, TR3, TR4, TR12, TR4, TR13, TR4, TR0)
0.73 fu.py(1681):     (TR4, TR3, TR10, TR4, TR3, TR11),
0.73 fu.py(1682):     (TR5, TR7, TR11, TR4),
0.73 fu.py(1683):     (CTR3, CTR1, TR9, CTR2, TR4, TR9, TR9, CTR4),
0.73 fu.py(1684):     identity,
0.73 fu.py(1680): RL2 = [
0.73 fu.py(1688): def fu(rv, measure=lambda x: (L(x), x.count_ops())):
0.73 fu.py(1779): def process_common_addends(rv, do, key2=None, key1=True):
0.73 fu.py(1821): fufuncs = '''
0.73 fu.py(1825): FU = dict(list(zip(fufuncs, list(map(locals().get, fufuncs)))))
0.73 fu.py(1828): def _roots():
0.73 fu.py(1832): _ROOT2 = None
0.73 fu.py(1835): def trig_split(a, b, two=False):
0.73 fu.py(2017): def as_f_sign_1(e):
0.73 fu.py(2074): def _osborne(e, d):
0.73 fu.py(2114): def _osbornei(e, d):
0.73 fu.py(2153): def hyper_as_trig(rv):
0.73 fu.py(2196): def sincos_to_sum(expr):
+ cat coverage.cover
{"/testbed/sympy/simplify/fu.py": {"189": 1, "191": 1, "193": 1, "194": 1, "195": 1, "196": 1, "197": 1, "198": 1, "199": 1, "200": 1, "201": 1, "202": 1, "203": 1, "204": 1, "205": 1, "207": 1, "209": 1, "210": 1, "211": 1, "212": 1, "213": 1, "215": 1, "221": 1, "230": 1, "254": 1, "284": 1, "400": 1, "442": 1, "470": 1, "527": 1, "548": 1, "569": 1, "593": 1, "668": 1, "762": 1, "810": 1, "942": 1, "1022": 1, "1058": 1, "1183": 1, "1230": 1, "1350": 1, "1471": 1, "1500": 1, "1529": 1, "1561": 1, "1590": 1, "1636": 1, "1653": 1, "1656": 0, "1657": 0, "1658": 0, "1654": 0, "1655": 0, "1664": 1, "1666": 1, "1668": 1, "1670": 1, "1672": 1, "1681": 1, "1682": 1, "1683": 1, "1684": 1, "1680": 1, "1688": 1, "1779": 1, "1821": 1, "1825": 1, "1828": 1, "1832": 1, "1835": 1, "2017": 1, "2074": 1, "2114": 1, "2153": 1, "2196": 1, "227": 0, "242": 3, "251": 3, "243": 4, "244": 0, "245": 0, "246": 4, "247": 0, "248": 0, "249": 4, "272": 4, "281": 4, "273": 5, "274": 0, "275": 0, "276": 5, "277": 0, "278": 0, "279": 5, "312": 5, "397": 5, "313": 6, "314": 6, "316": 0, "317": 0, "318": 0, "320": 0, "330": 0, "331": 0, "332": 0, "333": 0, "335": 0, "336": 0, "337": 0, "338": 0, "342": 0, "361": 0, "362": 0, "365": 0, "366": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "387": 0, "388": 0, "390": 0, "391": 0, "392": 0, "393": 0, "395": 0, "323": 0, "324": 0, "325": 0, "326": 0, "327": 0, "328": 0, "322": 0, "343": 0, "344": 0, "345": 0, "346": 0, "347": 0, "348": 0, "349": 0, "350": 0, "351": 0, "352": 0, "353": 0, "354": 0, "355": 0, "356": 0, "357": 0, "359": 0, "360": 0, "418": 2, "428": 2, "439": 2, "429": 3, "430": 1, "431": 2, "432": 2, "433": 0, "434": 2, "435": 0, "436": 0, "437": 2, "467": 0, "496": 6, "524": 6, "501": 8, "502": 7, "504": 1, "505": 0, "506": 0, "507": 0, "508": 0, "509": 0, "511": 0, "512": 0, "513": 0, "514": 0, "515": 0, "516": 0, "518": 0, "519": 0, "520": 0, "521": 0, "522": 0, "545": 3, "566": 3, "585": 0, "590": 0, "586": 0, "587": 0, "588": 0, "610": 1, "665": 1, "612": 1, "611": 2, "613": 1, "614": 0, "615": 0, "616": 1, "618": 0, "619": 0, "620": 0, "621": 0, "622": 0, "623": 0, "624": 0, "625": 0, "626": 0, "627": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "634": 0, "637": 0, "639": 0, "640": 0, "641": 0, "642": 0, "643": 0, "645": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "651": 0, "652": 0, "653": 0, "654": 0, "655": 0, "656": 0, "657": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "691": 0, "759": 0, "692": 0, "693": 0, "695": 0, "757": 0, "709": 0, "710": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "717": 0, "718": 0, "719": 0, "720": 0, "721": 0, "722": 0, "723": 0, "724": 0, "725": 0, "726": 0, "727": 0, "728": 0, "729": 0, "730": 0, "731": 0, "732": 0, "733": 0, "735": 0, "738": 0, "739": 0, "740": 0, "741": 0, "744": 0, "745": 0, "746": 0, "747": 0, "748": 0, "749": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "780": 2, "807": 2, "781": 3, "782": 1, "784": 2, "785": 2, "786": 2, "787": 0, "788": 0, "790": 0, "791": 0, "792": 0, "793": 0, "794": 0, "795": 0, "796": 0, "798": 0, "799": 0, "801": 0, "802": 0, "804": 0, "805": 2, "829": 1, "830": 1, "832": 1, "939": 1, "833": 1, "834": 1, "836": 0, "892": 0, "893": 0, "897": 0, "898": 0, "899": 0, "900": 0, "901": 0, "902": 0, "903": 0, "904": 0, "905": 0, "906": 0, "907": 0, "908": 0, "909": 0, "913": 0, "914": 0, "915": 0, "916": 0, "917": 0, "918": 0, "919": 0, "920": 0, "921": 0, "922": 0, "923": 0, "924": 0, "925": 0, "926": 0, "927": 0, "928": 0, "929": 0, "930": 0, "931": 0, "932": 0, "934": 0, "935": 0, "937": 0, "846": 0, "847": 0, "849": 0, "850": 0, "851": 0, "852": 0, "853": 0, "854": 0, "855": 0, "856": 0, "857": 0, "858": 0, "859": 0, "860": 0, "861": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "867": 0, "868": 0, "869": 0, "870": 0, "872": 0, "875": 0, "876": 0, "877": 0, "878": 0, "881": 0, "882": 0, "883": 0, "884": 0, "885": 0, "887": 0, "888": 0, "889": 0, "890": 0, "984": 2, "1019": 2, "985": 3, "986": 1, "988": 2, "989": 0, "990": 0, "991": 0, "992": 0, "993": 0, "994": 0, "995": 0, "996": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1002": 0, "1003": 0, "1005": 2, "1008": 2, "1009": 2, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1016": 0, "1017": 2, "1036": 3, "1055": 3, "1037": 4, "1038": 4, "1040": 0, "1041": 0, "1042": 0, "1043": 0, "1045": 0, "1046": 0, "1047": 0, "1048": 0, "1049": 0, "1051": 0, "1052": 0, "1053": 0, "1079": 0, "1081": 0, "1180": 0, "1082": 0, "1083": 0, "1085": 0, "1086": 0, "1087": 0, "1089": 0, "1091": 0, "1099": 0, "1100": 0, "1101": 0, "1102": 0, "1103": 0, "1104": 0, "1105": 0, "1106": 0, "1107": 0, "1108": 0, "1109": 0, "1110": 0, "1111": 0, "1112": 0, "1113": 0, "1114": 0, "1115": 0, "1116": 0, "1117": 0, "1118": 0, "1119": 0, "1121": 0, "1122": 0, "1123": 0, "1124": 0, "1125": 0, "1126": 0, "1128": 0, "1133": 0, "1134": 0, "1135": 0, "1136": 0, "1137": 0, "1138": 0, "1139": 0, "1140": 0, "1142": 0, "1143": 0, "1144": 0, "1145": 0, "1146": 0, "1147": 0, "1148": 0, "1149": 0, "1150": 0, "1151": 0, "1152": 0, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1160": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1167": 0, "1168": 0, "1169": 0, "1171": 0, "1172": 0, "1174": 0, "1175": 0, "1176": 0, "1178": 0, "1092": 0, "1093": 0, "1094": 0, "1095": 0, "1096": 0, "1097": 0, "1129": 0, "1130": 0, "1131": 0, "1132": 0, "1197": 0, "1227": 0, "1198": 0, "1199": 0, "1202": 0, "1203": 0, "1204": 0, "1205": 0, "1207": 0, "1208": 0, "1209": 0, "1210": 0, "1211": 0, "1212": 0, "1213": 0, "1214": 0, "1215": 0, "1216": 0, "1217": 0, "1218": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1224": 0, "1225": 0, "1289": 1, "1347": 1, "1290": 1, "1291": 1, "1292": 0, "1293": 0, "1294": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1300": 0, "1301": 0, "1302": 0, "1303": 0, "1304": 0, "1306": 0, "1308": 0, "1309": 0, "1310": 0, "1311": 0, "1312": 0, "1313": 0, "1314": 0, "1315": 0, "1316": 0, "1317": 0, "1318": 0, "1319": 0, "1320": 0, "1322": 0, "1323": 0, "1324": 0, "1325": 0, "1326": 0, "1327": 0, "1328": 0, "1330": 0, "1331": 0, "1332": 0, "1333": 0, "1334": 0, "1335": 0, "1336": 0, "1338": 0, "1339": 0, "1341": 0, "1342": 0, "1343": 0, "1345": 0, "1372": 3, "1468": 3, "1373": 4, "1374": 4, "1376": 0, "1379": 0, "1380": 0, "1381": 0, "1382": 0, "1383": 0, "1384": 0, "1385": 0, "1387": 0, "1388": 0, "1389": 0, "1390": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1397": 0, "1398": 0, "1399": 0, "1400": 0, "1401": 0, "1403": 0, "1404": 0, "1405": 0, "1406": 0, "1409": 0, "1412": 0, "1415": 0, "1417": 0, "1418": 0, "1419": 0, "1420": 0, "1422": 0, "1424": 0, "1425": 0, "1426": 0, "1427": 0, "1431": 0, "1432": 0, "1433": 0, "1434": 0, "1435": 0, "1436": 0, "1437": 0, "1438": 0, "1440": 0, "1441": 0, "1443": 0, "1444": 0, "1445": 0, "1447": 0, "1449": 0, "1450": 0, "1451": 0, "1452": 0, "1453": 0, "1454": 0, "1456": 0, "1457": 0, "1458": 0, "1461": 0, "1463": 0, "1464": 0, "1466": 0, "1487": 1, "1497": 1, "1488": 1, "1489": 1, "1491": 0, "1492": 0, "1493": 0, "1494": 0, "1495": 0, "1516": 1, "1526": 1, "1517": 1, "1518": 1, "1520": 0, "1521": 0, "1522": 0, "1523": 0, "1524": 0, "1544": 1, "1558": 1, "1546": 1, "1545": 1, "1547": 0, "1548": 1, "1550": 0, "1551": 0, "1552": 0, "1553": 0, "1554": 0, "1555": 0, "1556": 0, "1579": 1, "1587": 1, "1580": 1, "1581": 1, "1583": 0, "1584": 0, "1585": 0, "1611": 0, "1633": 0, "1612": 0, "1613": 0, "1614": 0, "1615": 0, "1616": 0, "1617": 0, "1618": 0, "1619": 0, "1620": 0, "1621": 0, "1622": 0, "1623": 0, "1624": 0, "1625": 0, "1626": 0, "1627": 0, "1628": 0, "1629": 0, "1630": 0, "1631": 0, "1648": 22, "1758": 0, "1759": 0, "1761": 0, "1762": 0, "1763": 0, "1764": 0, "1765": 0, "1766": 0, "1767": 0, "1768": 0, "1769": 0, "1770": 0, "1771": 0, "1772": 0, "1773": 0, "1774": 0, "1775": 0, "1776": 0, "1787": 0, "1788": 0, "1789": 0, "1790": 0, "1791": 0, "1792": 0, "1793": 0, "1794": 0, "1795": 0, "1796": 0, "1797": 0, "1799": 0, "1801": 0, "1802": 0, "1803": 0, "1804": 0, "1805": 0, "1806": 0, "1807": 0, "1808": 0, "1809": 0, "1810": 0, "1811": 0, "1812": 0, "1814": 0, "1815": 0, "1816": 0, "1818": 0, "1830": 1, "1831": 1, "1886": 0, "1887": 0, "1889": 0, "1890": 0, "1891": 0, "1892": 0, "1893": 0, "1894": 0, "1895": 0, "1896": 0, "1897": 0, "1898": 0, "1899": 0, "1901": 0, "1967": 0, "1968": 0, "1969": 0, "1970": 0, "1971": 0, "1972": 0, "1973": 0, "1974": 0, "1977": 0, "1978": 0, "1979": 0, "1980": 0, "1981": 0, "1982": 0, "1983": 0, "1984": 0, "1985": 0, "1987": 0, "1988": 0, "1989": 0, "1990": 0, "1991": 0, "1992": 0, "1993": 0, "1994": 0, "1995": 0, "1996": 0, "1997": 0, "1998": 0, "1999": 0, "2000": 0, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "1921": 0, "1922": 0, "1923": 0, "1924": 0, "1925": 0, "1926": 0, "1927": 0, "1928": 0, "1930": 0, "1931": 0, "1932": 0, "1933": 0, "1934": 0, "1935": 0, "1936": 0, "1937": 0, "1939": 0, "1940": 0, "1941": 0, "1942": 0, "1943": 0, "1944": 0, "1946": 0, "1947": 0, "1948": 0, "1949": 0, "1951": 0, "1952": 0, "1953": 0, "1955": 0, "1956": 0, "1957": 0, "1958": 0, "1959": 0, "1960": 0, "1961": 0, "1962": 0, "1963": 0, "1964": 0, "2038": 0, "2039": 0, "2041": 0, "2042": 0, "2043": 0, "2044": 0, "2045": 0, "2046": 0, "2047": 0, "2049": 0, "2050": 0, "2051": 0, "2052": 0, "2053": 0, "2054": 0, "2055": 0, "2056": 0, "2057": 0, "2058": 0, "2059": 0, "2061": 0, "2062": 0, "2063": 0, "2064": 0, "2065": 0, "2066": 0, "2067": 0, "2068": 0, "2070": 0, "2071": 0, "2091": 0, "2111": 0, "2092": 0, "2093": 0, "2094": 0, "2095": 0, "2096": 0, "2097": 0, "2098": 0, "2099": 0, "2100": 0, "2101": 0, "2102": 0, "2103": 0, "2104": 0, "2105": 0, "2106": 0, "2107": 0, "2109": 0, "2130": 0, "2150": 0, "2131": 0, "2132": 0, "2133": 0, "2134": 0, "2135": 0, "2136": 0, "2137": 0, "2138": 0, "2139": 0, "2140": 0, "2141": 0, "2142": 0, "2143": 0, "2144": 0, "2145": 0, "2146": 0, "2148": 0, "2179": 0, "2180": 0, "2183": 0, "2184": 0, "2185": 0, "2188": 0, "2190": 0, "2192": 0, "2193": 0, "2212": 0, "2213": 0, "2215": 0}}
{"/testbed/sympy/simplify/fu.py": {"189": 1, "191": 1, "193": 1, "194": 1, "195": 1, "196": 1, "197": 1, "198": 1, "199": 1, "200": 1, "201": 1, "202": 1, "203": 1, "204": 1, "205": 1, "207": 1, "209": 1, "210": 1, "211": 1, "212": 1, "213": 1, "215": 1, "221": 1, "230": 1, "254": 1, "284": 1, "400": 1, "442": 1, "470": 1, "527": 1, "548": 1, "569": 1, "593": 1, "668": 1, "762": 1, "810": 1, "942": 1, "1022": 1, "1058": 1, "1183": 1, "1230": 1, "1350": 1, "1471": 1, "1500": 1, "1529": 1, "1561": 1, "1590": 1, "1636": 1, "1653": 1, "1656": 0, "1657": 0, "1658": 0, "1654": 0, "1655": 0, "1664": 1, "1666": 1, "1668": 1, "1670": 1, "1672": 1, "1681": 1, "1682": 1, "1683": 1, "1684": 1, "1680": 1, "1688": 1, "1779": 1, "1821": 1, "1825": 1, "1828": 1, "1832": 1, "1835": 1, "2017": 1, "2074": 1, "2114": 1, "2153": 1, "2196": 1, "227": 0, "242": 0, "251": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "272": 0, "281": 0, "273": 0, "274": 0, "275": 0, "276": 0, "277": 0, "278": 0, "279": 0, "312": 0, "397": 0, "313": 0, "314": 0, "316": 0, "317": 0, "318": 0, "320": 0, "330": 0, "331": 0, "332": 0, "333": 0, "335": 0, "336": 0, "337": 0, "338": 0, "342": 0, "361": 0, "362": 0, "365": 0, "366": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "387": 0, "388": 0, "390": 0, "391": 0, "392": 0, "393": 0, "395": 0, "323": 0, "324": 0, "325": 0, "326": 0, "327": 0, "328": 0, "322": 0, "343": 0, "344": 0, "345": 0, "346": 0, "347": 0, "348": 0, "349": 0, "350": 0, "351": 0, "352": 0, "353": 0, "354": 0, "355": 0, "356": 0, "357": 0, "359": 0, "360": 0, "418": 0, "428": 0, "439": 0, "429": 0, "430": 0, "431": 0, "432": 0, "433": 0, "434": 0, "435": 0, "436": 0, "437": 0, "467": 0, "496": 0, "524": 0, "501": 0, "502": 0, "504": 0, "505": 0, "506": 0, "507": 0, "508": 0, "509": 0, "511": 0, "512": 0, "513": 0, "514": 0, "515": 0, "516": 0, "518": 0, "519": 0, "520": 0, "521": 0, "522": 0, "545": 0, "566": 0, "585": 0, "590": 0, "586": 0, "587": 0, "588": 0, "610": 0, "665": 0, "612": 0, "611": 0, "613": 0, "614": 0, "615": 0, "616": 0, "618": 0, "619": 0, "620": 0, "621": 0, "622": 0, "623": 0, "624": 0, "625": 0, "626": 0, "627": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "634": 0, "637": 0, "639": 0, "640": 0, "641": 0, "642": 0, "643": 0, "645": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "651": 0, "652": 0, "653": 0, "654": 0, "655": 0, "656": 0, "657": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "691": 0, "759": 0, "692": 0, "693": 0, "695": 0, "757": 0, "709": 0, "710": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "717": 0, "718": 0, "719": 0, "720": 0, "721": 0, "722": 0, "723": 0, "724": 0, "725": 0, "726": 0, "727": 0, "728": 0, "729": 0, "730": 0, "731": 0, "732": 0, "733": 0, "735": 0, "738": 0, "739": 0, "740": 0, "741": 0, "744": 0, "745": 0, "746": 0, "747": 0, "748": 0, "749": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "780": 0, "807": 0, "781": 0, "782": 0, "784": 0, "785": 0, "786": 0, "787": 0, "788": 0, "790": 0, "791": 0, "792": 0, "793": 0, "794": 0, "795": 0, "796": 0, "798": 0, "799": 0, "801": 0, "802": 0, "804": 0, "805": 0, "829": 0, "830": 0, "832": 0, "939": 0, "833": 0, "834": 0, "836": 0, "892": 0, "893": 0, "897": 0, "898": 0, "899": 0, "900": 0, "901": 0, "902": 0, "903": 0, "904": 0, "905": 0, "906": 0, "907": 0, "908": 0, "909": 0, "913": 0, "914": 0, "915": 0, "916": 0, "917": 0, "918": 0, "919": 0, "920": 0, "921": 0, "922": 0, "923": 0, "924": 0, "925": 0, "926": 0, "927": 0, "928": 0, "929": 0, "930": 0, "931": 0, "932": 0, "934": 0, "935": 0, "937": 0, "846": 0, "847": 0, "849": 0, "850": 0, "851": 0, "852": 0, "853": 0, "854": 0, "855": 0, "856": 0, "857": 0, "858": 0, "859": 0, "860": 0, "861": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "867": 0, "868": 0, "869": 0, "870": 0, "872": 0, "875": 0, "876": 0, "877": 0, "878": 0, "881": 0, "882": 0, "883": 0, "884": 0, "885": 0, "887": 0, "888": 0, "889": 0, "890": 0, "984": 0, "1019": 0, "985": 0, "986": 0, "988": 0, "989": 0, "990": 0, "991": 0, "992": 0, "993": 0, "994": 0, "995": 0, "996": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1002": 0, "1003": 0, "1005": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1016": 0, "1017": 0, "1036": 0, "1055": 0, "1037": 0, "1038": 0, "1040": 0, "1041": 0, "1042": 0, "1043": 0, "1045": 0, "1046": 0, "1047": 0, "1048": 0, "1049": 0, "1051": 0, "1052": 0, "1053": 0, "1079": 0, "1081": 0, "1180": 0, "1082": 0, "1083": 0, "1085": 0, "1086": 0, "1087": 0, "1089": 0, "1091": 0, "1099": 0, "1100": 0, "1101": 0, "1102": 0, "1103": 0, "1104": 0, "1105": 0, "1106": 0, "1107": 0, "1108": 0, "1109": 0, "1110": 0, "1111": 0, "1112": 0, "1113": 0, "1114": 0, "1115": 0, "1116": 0, "1117": 0, "1118": 0, "1119": 0, "1121": 0, "1122": 0, "1123": 0, "1124": 0, "1125": 0, "1126": 0, "1128": 0, "1133": 0, "1134": 0, "1135": 0, "1136": 0, "1137": 0, "1138": 0, "1139": 0, "1140": 0, "1142": 0, "1143": 0, "1144": 0, "1145": 0, "1146": 0, "1147": 0, "1148": 0, "1149": 0, "1150": 0, "1151": 0, "1152": 0, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1160": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1167": 0, "1168": 0, "1169": 0, "1171": 0, "1172": 0, "1174": 0, "1175": 0, "1176": 0, "1178": 0, "1092": 0, "1093": 0, "1094": 0, "1095": 0, "1096": 0, "1097": 0, "1129": 0, "1130": 0, "1131": 0, "1132": 0, "1197": 0, "1227": 0, "1198": 0, "1199": 0, "1202": 0, "1203": 0, "1204": 0, "1205": 0, "1207": 0, "1208": 0, "1209": 0, "1210": 0, "1211": 0, "1212": 0, "1213": 0, "1214": 0, "1215": 0, "1216": 0, "1217": 0, "1218": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1224": 0, "1225": 0, "1289": 0, "1347": 0, "1290": 0, "1291": 0, "1292": 0, "1293": 0, "1294": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1300": 0, "1301": 0, "1302": 0, "1303": 0, "1304": 0, "1306": 0, "1308": 0, "1309": 0, "1310": 0, "1311": 0, "1312": 0, "1313": 0, "1314": 0, "1315": 0, "1316": 0, "1317": 0, "1318": 0, "1319": 0, "1320": 0, "1322": 0, "1323": 0, "1324": 0, "1325": 0, "1326": 0, "1327": 0, "1328": 0, "1330": 0, "1331": 0, "1332": 0, "1333": 0, "1334": 0, "1335": 0, "1336": 0, "1338": 0, "1339": 0, "1341": 0, "1342": 0, "1343": 0, "1345": 0, "1372": 0, "1468": 0, "1373": 0, "1374": 0, "1376": 0, "1379": 0, "1380": 0, "1381": 0, "1382": 0, "1383": 0, "1384": 0, "1385": 0, "1387": 0, "1388": 0, "1389": 0, "1390": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1397": 0, "1398": 0, "1399": 0, "1400": 0, "1401": 0, "1403": 0, "1404": 0, "1405": 0, "1406": 0, "1409": 0, "1412": 0, "1415": 0, "1417": 0, "1418": 0, "1419": 0, "1420": 0, "1422": 0, "1424": 0, "1425": 0, "1426": 0, "1427": 0, "1431": 0, "1432": 0, "1433": 0, "1434": 0, "1435": 0, "1436": 0, "1437": 0, "1438": 0, "1440": 0, "1441": 0, "1443": 0, "1444": 0, "1445": 0, "1447": 0, "1449": 0, "1450": 0, "1451": 0, "1452": 0, "1453": 0, "1454": 0, "1456": 0, "1457": 0, "1458": 0, "1461": 0, "1463": 0, "1464": 0, "1466": 0, "1487": 0, "1497": 0, "1488": 0, "1489": 0, "1491": 0, "1492": 0, "1493": 0, "1494": 0, "1495": 0, "1516": 0, "1526": 0, "1517": 0, "1518": 0, "1520": 0, "1521": 0, "1522": 0, "1523": 0, "1524": 0, "1544": 0, "1558": 0, "1546": 0, "1545": 0, "1547": 0, "1548": 0, "1550": 0, "1551": 0, "1552": 0, "1553": 0, "1554": 0, "1555": 0, "1556": 0, "1579": 0, "1587": 0, "1580": 0, "1581": 0, "1583": 0, "1584": 0, "1585": 0, "1611": 0, "1633": 0, "1612": 0, "1613": 0, "1614": 0, "1615": 0, "1616": 0, "1617": 0, "1618": 0, "1619": 0, "1620": 0, "1621": 0, "1622": 0, "1623": 0, "1624": 0, "1625": 0, "1626": 0, "1627": 0, "1628": 0, "1629": 0, "1630": 0, "1631": 0, "1648": 0, "1758": 0, "1759": 0, "1761": 0, "1762": 0, "1763": 0, "1764": 0, "1765": 0, "1766": 0, "1767": 0, "1768": 0, "1769": 0, "1770": 0, "1771": 0, "1772": 0, "1773": 0, "1774": 0, "1775": 0, "1776": 0, "1787": 0, "1788": 0, "1789": 0, "1790": 0, "1791": 0, "1792": 0, "1793": 0, "1794": 0, "1795": 0, "1796": 0, "1797": 0, "1799": 0, "1801": 0, "1802": 0, "1803": 0, "1804": 0, "1805": 0, "1806": 0, "1807": 0, "1808": 0, "1809": 0, "1810": 0, "1811": 0, "1812": 0, "1814": 0, "1815": 0, "1816": 0, "1818": 0, "1830": 0, "1831": 0, "1886": 0, "1887": 0, "1889": 0, "1890": 0, "1891": 0, "1892": 0, "1893": 0, "1894": 0, "1895": 0, "1896": 0, "1897": 0, "1898": 0, "1899": 0, "1901": 0, "1967": 0, "1968": 0, "1969": 0, "1970": 0, "1971": 0, "1972": 0, "1973": 0, "1974": 0, "1977": 0, "1978": 0, "1979": 0, "1980": 0, "1981": 0, "1982": 0, "1983": 0, "1984": 0, "1985": 0, "1987": 0, "1988": 0, "1989": 0, "1990": 0, "1991": 0, "1992": 0, "1993": 0, "1994": 0, "1995": 0, "1996": 0, "1997": 0, "1998": 0, "1999": 0, "2000": 0, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "1921": 0, "1922": 0, "1923": 0, "1924": 0, "1925": 0, "1926": 0, "1927": 0, "1928": 0, "1930": 0, "1931": 0, "1932": 0, "1933": 0, "1934": 0, "1935": 0, "1936": 0, "1937": 0, "1939": 0, "1940": 0, "1941": 0, "1942": 0, "1943": 0, "1944": 0, "1946": 0, "1947": 0, "1948": 0, "1949": 0, "1951": 0, "1952": 0, "1953": 0, "1955": 0, "1956": 0, "1957": 0, "1958": 0, "1959": 0, "1960": 0, "1961": 0, "1962": 0, "1963": 0, "1964": 0, "2038": 0, "2039": 0, "2041": 0, "2042": 0, "2043": 0, "2044": 0, "2045": 0, "2046": 0, "2047": 0, "2049": 0, "2050": 0, "2051": 0, "2052": 0, "2053": 0, "2054": 0, "2055": 0, "2056": 0, "2057": 0, "2058": 0, "2059": 0, "2061": 0, "2062": 0, "2063": 0, "2064": 0, "2065": 0, "2066": 0, "2067": 0, "2068": 0, "2070": 0, "2071": 0, "2091": 0, "2111": 0, "2092": 0, "2093": 0, "2094": 0, "2095": 0, "2096": 0, "2097": 0, "2098": 0, "2099": 0, "2100": 0, "2101": 0, "2102": 0, "2103": 0, "2104": 0, "2105": 0, "2106": 0, "2107": 0, "2109": 0, "2130": 0, "2150": 0, "2131": 0, "2132": 0, "2133": 0, "2134": 0, "2135": 0, "2136": 0, "2137": 0, "2138": 0, "2139": 0, "2140": 0, "2141": 0, "2142": 0, "2143": 0, "2144": 0, "2145": 0, "2146": 0, "2148": 0, "2179": 0, "2180": 0, "2183": 0, "2184": 0, "2185": 0, "2188": 0, "2190": 0, "2192": 0, "2193": 0, "2212": 0, "2213": 0, "2215": 0}}
+ git checkout 1d3327b8e90a186df6972991963a5ae87053259d
Note: switching to '1d3327b8e90a186df6972991963a5ae87053259d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 1d3327b8e9 Merge pull request #17128 from gschintgen/fix9638-add-test
+ git apply /root/pre_state.patch
error: unrecognized input
