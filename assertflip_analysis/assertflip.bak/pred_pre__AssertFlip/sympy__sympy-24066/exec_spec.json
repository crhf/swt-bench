{"instance_id": "sympy__sympy-24066", "repo": "sympy/sympy", "version": "1.12", "environment_setup_commit": "c6cb7c5602fa48034ab1bd43c2347a7e8488f12e", "patch_list": ["diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-24066.py\nnew file mode 100644\nindex e69de29..06445a6 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-24066.py\n@@ -0,0 +1,14 @@\n+from sympy import exp\n+from sympy.physics import units\n+from sympy.physics.units.systems.si import SI\n+\n+def test_dimensionless_exponent_bug():\n+    # Setup the expression\n+    expr = units.second / (units.ohm * units.farad)\n+    buggy_expr = 100 + exp(expr)\n+    \n+    # Assert the correct behavior: no exception should be raised\n+    try:\n+        SI._collect_factor_and_dimension(buggy_expr)\n+    except ValueError:\n+        assert False, \"ValueError raised, but the expression should be dimensionless.\"\n"], "arch": "x86_64", "base_commit": "514579c655bf22e2af14f0743376ae1d7befe345", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-24066.py"], "coverage_files": ["sympy/physics/units/unitsystem.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/physics/units/unitsystem\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-24066.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}