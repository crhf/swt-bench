{"instance_id": "django__django-16667", "repo": "django/django", "version": "5.0", "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-16667.py\nnew file mode 100644\nindex e69de29..5c49875 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-16667.py\n@@ -0,0 +1,41 @@\n+from django.test import SimpleTestCase, Client, override_settings\n+from django.urls import path\n+from django.http import HttpResponse\n+from django import forms\n+from django.forms import SelectDateWidget\n+\n+# Define the form and view inline since we can't retrieve them\n+class ReproForm(forms.Form):\n+    my_date = forms.DateField(widget=SelectDateWidget())\n+\n+def repro_view(request):\n+    form = ReproForm(request.GET)  # for ease of reproducibility\n+    if form.is_valid():\n+        return HttpResponse(\"ok\")\n+    else:\n+        return HttpResponse(\"not ok\")\n+\n+urlpatterns = [\n+    path('repro/', repro_view, name='repro')\n+]\n+\n+@override_settings(ROOT_URLCONF=__name__)\n+class SelectDateWidgetTest(SimpleTestCase):\n+    def setUp(self):\n+        self.client = Client()\n+\n+    def test_overflow_error_handling(self):\n+        \"\"\"\n+        Test that a large year value in SelectDateWidget does not crash the server.\n+        \"\"\"\n+        try:\n+            response = self.client.get('/repro/', {\n+                'my_date_day': '1',\n+                'my_date_month': '1',\n+                'my_date_year': '1234567821345678'\n+            })\n+            # If no exception is raised, the test should pass because the bug is fixed\n+            self.assertEqual(response.status_code, 200)\n+        except OverflowError:\n+            # If OverflowError is raised, the test should fail because the bug is still present\n+            self.fail(\"OverflowError was raised due to large year value\")\n"], "arch": "x86_64", "base_commit": "02c356f2f3945b8075735d485c3cf48cad991011", "test_directives": ["test_coverup_django__django-16667"], "coverage_files": ["django/forms/widgets.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.11", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/widgets\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16667", "req_install_commands": ["conda create -n testbed python=3.11 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.7.0\nargon2-cffi >= 19.2.0\nbcrypt\nblack\ndocutils\ngeoip2; python_version < '3.12'\njinja2 >= 2.11.0\nnumpy; python_version < '3.12'\nPillow >= 6.2.1; sys.platform != 'win32' or python_version < '3.12'\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.4.0\nselenium >= 4.8.0\nsqlparse >= 0.3.1\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}