{"instance_id": "sphinx-doc__sphinx-11445", "repo": "sphinx-doc/sphinx", "version": "7.1", "environment_setup_commit": "89808c6f49e1738765d18309244dca0156ee28f6", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_sphinx-doc__sphinx-11445.py\nnew file mode 100644\nindex e69de29..f344b84 100644\n--- /dev/null\n+++ b/tests/test_coverup_sphinx-doc__sphinx-11445.py\n@@ -0,0 +1,47 @@\n+import os\n+import pytest\n+from sphinx.application import Sphinx\n+\n+def test_rst_prolog_with_domain_directive(tmpdir):\n+    # Setup a temporary directory for the Sphinx project\n+    srcdir = tmpdir.mkdir(\"src\")\n+    confdir = srcdir\n+    outdir = tmpdir.mkdir(\"out\")\n+    doctreedir = tmpdir.mkdir(\"doctree\")\n+\n+    # Create conf.py with rst_prolog\n+    conf_py = srcdir.join(\"conf.py\")\n+    conf_py.write('rst_prolog = \"\"\"\\n.. |psf| replace:: Python Software Foundation\\n\"\"\"\\n')\n+\n+    # Create index.rst\n+    index_rst = srcdir.join(\"index.rst\")\n+    index_rst.write(\"Welcome\\n=======\\n\\n.. toctree::\\n\\n   mypackage\\n\")\n+\n+    # Create mypackage.rst with a domain directive in the heading\n+    mypackage_rst = srcdir.join(\"mypackage.rst\")\n+    mypackage_rst.write(\":mod:`mypackage2`\\n=================\\n\\nContent\\n\\nSubheading\\n----------\\n\")\n+\n+    # Initialize a Sphinx application\n+    app = Sphinx(\n+        srcdir=str(srcdir),\n+        confdir=str(confdir),\n+        outdir=str(outdir),\n+        doctreedir=str(doctreedir),\n+        buildername='html'\n+    )\n+\n+    # Build the documentation\n+    app.build()\n+\n+    # Check the generated HTML for the presence of the heading\n+    index_html_path = os.path.join(str(outdir), \"index.html\")\n+    with open(index_html_path, 'r') as file:\n+        index_html = file.read()\n+\n+    # Assert that the heading with the domain directive is present\n+    assert \"mypackage2\" in index_html  # The heading should be present when the bug is fixed\n+\n+    # No cleanup method is needed as Sphinx does not have a cleanup method\n+\n+# Note: This test assumes pytest is being used to run the test.\n+\n"], "arch": "x86_64", "base_commit": "71db08c05197545944949d5aa76cd340e7143627", "test_directives": ["tests/test_coverup_sphinx-doc__sphinx-11445.py"], "coverage_files": ["sphinx/util/rst.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "pip_packages": ["tox==4.16.0", "tox-current-env==0.0.11"], "install": "python -m pip install -e .[test]", "pre_install": ["sed -i 's/pytest/pytest -rA/' tox.ini"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sphinx/util/rst\\.py)' -m tox -epy39 -v -- tests/test_coverup_sphinx-doc__sphinx-11445.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}