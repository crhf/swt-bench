+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 5b884d45ac5b76234eca614d90c83b347294c332
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 5b884d45ac5b76234eca614d90c83b347294c332
Author: Adam Johnson <me@adamj.eu>
Date:   Tue Apr 14 08:56:40 2020 +0100

    Fixed #29501 -- Allowed dbshell to pass options to underlying tool.

diff --git a/django/core/management/commands/dbshell.py b/django/core/management/commands/dbshell.py
index 6782ef48f3..fb3caed12a 100644
--- a/django/core/management/commands/dbshell.py
+++ b/django/core/management/commands/dbshell.py
@@ -1,3 +1,5 @@
+import subprocess
+
 from django.core.management.base import BaseCommand, CommandError
 from django.db import DEFAULT_DB_ALIAS, connections
 
@@ -15,11 +17,13 @@ class Command(BaseCommand):
             '--database', default=DEFAULT_DB_ALIAS,
             help='Nominates a database onto which to open a shell. Defaults to the "default" database.',
         )
+        parameters = parser.add_argument_group('parameters', prefix_chars='--')
+        parameters.add_argument('parameters', nargs='*')
 
     def handle(self, **options):
         connection = connections[options['database']]
         try:
-            connection.client.runshell()
+            connection.client.runshell(options['parameters'])
         except FileNotFoundError:
             # Note that we're assuming the FileNotFoundError relates to the
             # command missing. It could be raised for some other reason, in
@@ -29,3 +33,11 @@ class Command(BaseCommand):
                 'You appear not to have the %r program installed or on your path.' %
                 connection.client.executable_name
             )
+        except subprocess.CalledProcessError as e:
+            raise CommandError(
+                '"%s" returned non-zero exit status %s.' % (
+                    ' '.join(e.cmd),
+                    e.returncode,
+                ),
+                returncode=e.returncode,
+            )
diff --git a/django/db/backends/base/client.py b/django/db/backends/base/client.py
index f6a0cda35d..32901764aa 100644
--- a/django/db/backends/base/client.py
+++ b/django/db/backends/base/client.py
@@ -8,5 +8,5 @@ class BaseDatabaseClient:
         # connection is an instance of BaseDatabaseWrapper.
         self.connection = connection
 
-    def runshell(self):
+    def runshell(self, parameters):
         raise NotImplementedError('subclasses of BaseDatabaseClient must provide a runshell() method')
diff --git a/django/db/backends/mysql/client.py b/django/db/backends/mysql/client.py
index a596a650b3..e5b6a59fb2 100644
--- a/django/db/backends/mysql/client.py
+++ b/django/db/backends/mysql/client.py
@@ -7,7 +7,7 @@ class DatabaseClient(BaseDatabaseClient):
     executable_name = 'mysql'
 
     @classmethod
-    def settings_to_cmd_args(cls, settings_dict):
+    def settings_to_cmd_args(cls, settings_dict, parameters):
         args = [cls.executable_name]
         db = settings_dict['OPTIONS'].get('db', settings_dict['NAME'])
         user = settings_dict['OPTIONS'].get('user', settings_dict['USER'])
@@ -41,8 +41,9 @@ class DatabaseClient(BaseDatabaseClient):
             args += ["--ssl-key=%s" % client_key]
         if db:
             args += [db]
+        args.extend(parameters)
         return args
 
-    def runshell(self):
-        args = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict)
+    def runshell(self, parameters):
+        args = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict, parameters)
         subprocess.run(args, check=True)
diff --git a/django/db/backends/mysql/creation.py b/django/db/backends/mysql/creation.py
index 79d2959d5f..99372fd7ee 100644
--- a/django/db/backends/mysql/creation.py
+++ b/django/db/backends/mysql/creation.py
@@ -55,9 +55,9 @@ class DatabaseCreation(BaseDatabaseCreation):
         self._clone_db(source_database_name, target_database_name)
 
     def _clone_db(self, source_database_name, target_database_name):
-        dump_args = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict)[1:]
+        dump_args = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict, [])[1:]
         dump_cmd = ['mysqldump', *dump_args[:-1], '--routines', '--events', source_database_name]
-        load_cmd = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict)
+        load_cmd = DatabaseClient.settings_to_cmd_args(self.connection.settings_dict, [])
         load_cmd[-1] = target_database_name
 
         with subprocess.Popen(dump_cmd, stdout=subprocess.PIPE) as dump_proc:
diff --git a/django/db/backends/oracle/client.py b/django/db/backends/oracle/client.py
index 243c018d03..434481ba81 100644
--- a/django/db/backends/oracle/client.py
+++ b/django/db/backends/oracle/client.py
@@ -8,10 +8,11 @@ class DatabaseClient(BaseDatabaseClient):
     executable_name = 'sqlplus'
     wrapper_name = 'rlwrap'
 
-    def runshell(self):
+    def runshell(self, parameters):
         conn_string = self.connection._connect_string()
         args = [self.executable_name, "-L", conn_string]
         wrapper_path = shutil.which(self.wrapper_name)
         if wrapper_path:
             args = [wrapper_path, *args]
+        args.extend(parameters)
         subprocess.run(args, check=True)
diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py
index 0efe0d47f0..9d390b3807 100644
--- a/django/db/backends/postgresql/client.py
+++ b/django/db/backends/postgresql/client.py
@@ -9,7 +9,7 @@ class DatabaseClient(BaseDatabaseClient):
     executable_name = 'psql'
 
     @classmethod
-    def runshell_db(cls, conn_params):
+    def runshell_db(cls, conn_params, parameters):
         args = [cls.executable_name]
 
         host = conn_params.get('host', '')
@@ -29,6 +29,7 @@ class DatabaseClient(BaseDatabaseClient):
         if port:
             args += ['-p', str(port)]
         args += [dbname]
+        args.extend(parameters)
 
         sigint_handler = signal.getsignal(signal.SIGINT)
         subprocess_env = os.environ.copy()
@@ -50,5 +51,5 @@ class DatabaseClient(BaseDatabaseClient):
             # Restore the original SIGINT handler.
             signal.signal(signal.SIGINT, sigint_handler)
 
-    def runshell(self):
-        DatabaseClient.runshell_db(self.connection.get_connection_params())
+    def runshell(self, parameters):
+        self.runshell_db(self.connection.get_connection_params(), parameters)
diff --git a/django/db/backends/sqlite3/client.py b/django/db/backends/sqlite3/client.py
index f6b7077a0c..a71005fd5b 100644
--- a/django/db/backends/sqlite3/client.py
+++ b/django/db/backends/sqlite3/client.py
@@ -6,9 +6,10 @@ from django.db.backends.base.client import BaseDatabaseClient
 class DatabaseClient(BaseDatabaseClient):
     executable_name = 'sqlite3'
 
-    def runshell(self):
+    def runshell(self, parameters):
         # TODO: Remove str() when dropping support for PY37.
         # args parameter accepts path-like objects on Windows since Python 3.8.
         args = [self.executable_name,
                 str(self.connection.settings_dict['NAME'])]
+        args.extend(parameters)
         subprocess.run(args, check=True)
diff --git a/docs/ref/django-admin.txt b/docs/ref/django-admin.txt
index 4011da32fc..eb151193ae 100644
--- a/docs/ref/django-admin.txt
+++ b/docs/ref/django-admin.txt
@@ -226,6 +226,33 @@ program manually.
 
 Specifies the database onto which to open a shell. Defaults to ``default``.
 
+.. django-admin-option:: -- ARGUMENTS
+
+.. versionadded:: 3.1
+
+Any arguments following a ``--`` divider will be passed on to the underlying
+command-line client. For example, with PostgreSQL you can use the ``psql``
+command's ``-c`` flag to execute a raw SQL query directly:
+
+.. console::
+
+    $ django-admin dbshell -- -c 'select current_user'
+     current_user
+    --------------
+     postgres
+    (1 row)
+
+On MySQL/MariaDB, you can do this with the ``mysql`` command's ``-e`` flag:
+
+.. console::
+
+    $ django-admin dbshell -- -e "select user()"
+    +----------------------+
+    | user()               |
+    +----------------------+
+    | djangonaut@localhost |
+    +----------------------+
+
 .. note::
 
     Be aware that not all options set in the :setting:`OPTIONS` part of your
diff --git a/docs/releases/3.1.txt b/docs/releases/3.1.txt
index dbf599fb48..384fa43dfb 100644
--- a/docs/releases/3.1.txt
+++ b/docs/releases/3.1.txt
@@ -317,6 +317,9 @@ Management Commands
   :attr:`~django.core.management.CommandError` allows customizing the exit
   status for management commands.
 
+* The new :option:`dbshell -- ARGUMENTS <dbshell -->` option allows passing
+  extra arguments to the command-line client for the database.
+
 Migrations
 ~~~~~~~~~~
 
@@ -505,6 +508,9 @@ backends.
   yields a cursor and automatically closes the cursor and connection upon
   exiting the ``with`` statement.
 
+* ``DatabaseClient.runshell()`` now requires an additional ``parameters``
+  argument as a list of extra arguments to pass on to the command-line client.
+
 Dropped support for MariaDB 10.1
 --------------------------------
 
diff --git a/tests/dbshell/test_mysql.py b/tests/dbshell/test_mysql.py
index 6b60e2722e..91c1a6cd50 100644
--- a/tests/dbshell/test_mysql.py
+++ b/tests/dbshell/test_mysql.py
@@ -76,5 +76,23 @@ class MySqlDbshellCommandTestCase(SimpleTestCase):
                 },
             }))
 
-    def get_command_line_arguments(self, connection_settings):
-        return DatabaseClient.settings_to_cmd_args(connection_settings)
+    def test_parameters(self):
+        self.assertEqual(
+            ['mysql', 'somedbname', '--help'],
+            self.get_command_line_arguments(
+                {
+                    'NAME': 'somedbname',
+                    'USER': None,
+                    'PASSWORD': None,
+                    'HOST': None,
+                    'PORT': None,
+                    'OPTIONS': {},
+                },
+                ['--help'],
+            ),
+        )
+
+    def get_command_line_arguments(self, connection_settings, parameters=None):
+        if parameters is None:
+            parameters = []
+        return DatabaseClient.settings_to_cmd_args(connection_settings, parameters)
diff --git a/tests/dbshell/test_oracle.py b/tests/dbshell/test_oracle.py
index 431134e3ac..41fbc07455 100644
--- a/tests/dbshell/test_oracle.py
+++ b/tests/dbshell/test_oracle.py
@@ -8,17 +8,19 @@ from django.test import SimpleTestCase
 
 @skipUnless(connection.vendor == 'oracle', 'Oracle tests')
 class OracleDbshellTests(SimpleTestCase):
-    def _run_dbshell(self, rlwrap=False):
+    def _run_dbshell(self, rlwrap=False, parameters=None):
         """Run runshell command and capture its arguments."""
         def _mock_subprocess_run(*args, **kwargs):
             self.subprocess_args = list(*args)
             return CompletedProcess(self.subprocess_args, 0)
 
+        if parameters is None:
+            parameters = []
         client = DatabaseClient(connection)
         self.subprocess_args = None
         with mock.patch('subprocess.run', new=_mock_subprocess_run):
             with mock.patch('shutil.which', return_value='/usr/bin/rlwrap' if rlwrap else None):
-                client.runshell()
+                client.runshell(parameters)
         return self.subprocess_args
 
     def test_without_rlwrap(self):
@@ -32,3 +34,9 @@ class OracleDbshellTests(SimpleTestCase):
             self._run_dbshell(rlwrap=True),
             ['/usr/bin/rlwrap', 'sqlplus', '-L', connection._connect_string()],
         )
+
+    def test_parameters(self):
+        self.assertEqual(
+            self._run_dbshell(parameters=['-HELP']),
+            ['sqlplus', '-L', connection._connect_string(), '-HELP'],
+        )
diff --git a/tests/dbshell/test_postgresql.py b/tests/dbshell/test_postgresql.py
index 7047283bb3..6de60eaef2 100644
--- a/tests/dbshell/test_postgresql.py
+++ b/tests/dbshell/test_postgresql.py
@@ -9,7 +9,7 @@ from django.test import SimpleTestCase
 
 class PostgreSqlDbshellCommandTestCase(SimpleTestCase):
 
-    def _run_it(self, dbinfo):
+    def _run_it(self, dbinfo, parameters=None):
         """
         That function invokes the runshell command, while mocking
         subprocess.run(). It returns a 2-tuple with:
@@ -21,8 +21,11 @@ class PostgreSqlDbshellCommandTestCase(SimpleTestCase):
             # PostgreSQL environment variables.
             self.pg_env = {key: env[key] for key in env if key.startswith('PG')}
             return subprocess.CompletedProcess(self.subprocess_args, 0)
+
+        if parameters is None:
+            parameters = []
         with mock.patch('subprocess.run', new=_mock_subprocess_run):
-            DatabaseClient.runshell_db(dbinfo)
+            DatabaseClient.runshell_db(dbinfo, parameters)
         return self.subprocess_args, self.pg_env
 
     def test_basic(self):
@@ -104,6 +107,12 @@ class PostgreSqlDbshellCommandTestCase(SimpleTestCase):
             )
         )
 
+    def test_parameters(self):
+        self.assertEqual(
+            self._run_it({'database': 'dbname'}, ['--help']),
+            (['psql', 'dbname', '--help'], {}),
+        )
+
     def test_sigint_handler(self):
         """SIGINT is ignored in Python and passed to psql to abort queries."""
         def _mock_subprocess_run(*args, **kwargs):
@@ -114,6 +123,6 @@ class PostgreSqlDbshellCommandTestCase(SimpleTestCase):
         # The default handler isn't SIG_IGN.
         self.assertNotEqual(sigint_handler, signal.SIG_IGN)
         with mock.patch('subprocess.run', new=_mock_subprocess_run):
-            DatabaseClient.runshell_db({})
+            DatabaseClient.runshell_db({}, [])
         # dbshell restores the original handler.
         self.assertEqual(sigint_handler, signal.getsignal(signal.SIGINT))
diff --git a/tests/dbshell/test_sqlite.py b/tests/dbshell/test_sqlite.py
index 46d09895c8..c3b2b1e28d 100644
--- a/tests/dbshell/test_sqlite.py
+++ b/tests/dbshell/test_sqlite.py
@@ -9,15 +9,17 @@ from django.test import SimpleTestCase
 
 @skipUnless(connection.vendor == 'sqlite', 'SQLite tests.')
 class SqliteDbshellCommandTestCase(SimpleTestCase):
-    def _run_dbshell(self):
+    def _run_dbshell(self, parameters=None):
         """Run runshell command and capture its arguments."""
         def _mock_subprocess_run(*args, **kwargs):
             self.subprocess_args = list(*args)
             return CompletedProcess(self.subprocess_args, 0)
 
+        if parameters is None:
+            parameters = []
         client = DatabaseClient(connection)
         with mock.patch('subprocess.run', new=_mock_subprocess_run):
-            client.runshell()
+            client.runshell(parameters)
         return self.subprocess_args
 
     def test_path_name(self):
@@ -29,3 +31,13 @@ class SqliteDbshellCommandTestCase(SimpleTestCase):
                 self._run_dbshell(),
                 ['sqlite3', 'test.db.sqlite3'],
             )
+
+    def test_parameters(self):
+        with mock.patch.dict(
+            connection.settings_dict,
+            {'NAME': Path('test.db.sqlite3')},
+        ):
+            self.assertEqual(
+                self._run_dbshell(['-help']),
+                ['sqlite3', 'test.db.sqlite3', '-help'],
+            )
+ git diff 5b884d45ac5b76234eca614d90c83b347294c332
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (2025.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2->Django==3.1) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.1
    Uninstalling Django-3.1:
      Successfully uninstalled Django-3.1
  Running setup.py develop for Django
Successfully installed Django-3.1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git apply -v -
Checking patch tests/test_coverup_django__django-12713.py...
Applied patch tests/test_coverup_django__django-12713.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/admin/options\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-12713
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/contrib/admin/options\\.py)']
Testing against Django installed in '/testbed/django'
0.57 options.py(1): import copy
0.57 options.py(2): import json
0.57 options.py(3): import operator
0.57 options.py(4): import re
0.57 options.py(5): from functools import partial, reduce, update_wrapper
0.57 options.py(6): from urllib.parse import quote as urlquote
0.57 options.py(8): from django import forms
0.57 options.py(9): from django.conf import settings
0.57 options.py(10): from django.contrib import messages
0.57 options.py(11): from django.contrib.admin import helpers, widgets
0.58 options.py(12): from django.contrib.admin.checks import (
0.58 options.py(15): from django.contrib.admin.exceptions import DisallowedModelAdminToField
0.58 options.py(16): from django.contrib.admin.templatetags.admin_urls import add_preserved_filters
0.58 options.py(17): from django.contrib.admin.utils import (
0.58 options.py(22): from django.contrib.admin.views.autocomplete import AutocompleteJsonView
0.58 options.py(23): from django.contrib.admin.widgets import (
0.58 options.py(26): from django.contrib.auth import get_permission_codename
0.58 options.py(27): from django.core.exceptions import (
0.58 options.py(30): from django.core.paginator import Paginator
0.58 options.py(31): from django.db import models, router, transaction
0.58 options.py(32): from django.db.models.constants import LOOKUP_SEP
0.58 options.py(33): from django.forms.formsets import DELETION_FIELD_NAME, all_valid
0.58 options.py(34): from django.forms.models import (
0.58 options.py(38): from django.forms.widgets import CheckboxSelectMultiple, SelectMultiple
0.58 options.py(39): from django.http import HttpResponseRedirect
0.58 options.py(40): from django.http.response import HttpResponseBase
0.58 options.py(41): from django.template.response import SimpleTemplateResponse, TemplateResponse
0.58 options.py(42): from django.urls import reverse
0.58 options.py(43): from django.utils.decorators import method_decorator
0.58 options.py(44): from django.utils.html import format_html
0.58 options.py(45): from django.utils.http import urlencode
0.58 options.py(46): from django.utils.safestring import mark_safe
0.58 options.py(47): from django.utils.text import capfirst, format_lazy, get_text_list
0.58 options.py(48): from django.utils.translation import gettext as _, ngettext
0.58 options.py(49): from django.views.decorators.csrf import csrf_protect
0.58 options.py(50): from django.views.generic import RedirectView
0.58 options.py(52): IS_POPUP_VAR = '_popup'
0.58 options.py(53): TO_FIELD_VAR = '_to_field'
0.58 options.py(56): HORIZONTAL, VERTICAL = 1, 2
0.58 options.py(59): def get_content_type_for_model(obj):
0.58 options.py(66): def get_ul_class(radio_style):
0.58 options.py(70): class IncorrectLookupParameters(Exception):
0.58 options.py(70): class IncorrectLookupParameters(Exception):
0.58 options.py(71):     pass
0.58 options.py(78):     models.DateTimeField: {
0.58 options.py(79):         'form_class': forms.SplitDateTimeField,
0.58 options.py(80):         'widget': widgets.AdminSplitDateTime
0.58 options.py(82):     models.DateField: {'widget': widgets.AdminDateWidget},
0.58 options.py(83):     models.TimeField: {'widget': widgets.AdminTimeWidget},
0.58 options.py(84):     models.TextField: {'widget': widgets.AdminTextareaWidget},
0.58 options.py(85):     models.URLField: {'widget': widgets.AdminURLFieldWidget},
0.58 options.py(86):     models.IntegerField: {'widget': widgets.AdminIntegerFieldWidget},
0.58 options.py(87):     models.BigIntegerField: {'widget': widgets.AdminBigIntegerFieldWidget},
0.58 options.py(88):     models.CharField: {'widget': widgets.AdminTextInputWidget},
0.58 options.py(89):     models.ImageField: {'widget': widgets.AdminFileWidget},
0.58 options.py(90):     models.FileField: {'widget': widgets.AdminFileWidget},
0.58 options.py(91):     models.EmailField: {'widget': widgets.AdminEmailInputWidget},
0.58 options.py(92):     models.UUIDField: {'widget': widgets.AdminUUIDInputWidget},
0.58 options.py(95): csrf_protect_m = method_decorator(csrf_protect)
0.58 options.py(98): class BaseModelAdmin(metaclass=forms.MediaDefiningClass):
0.58 options.py(98): class BaseModelAdmin(metaclass=forms.MediaDefiningClass):
0.58 options.py(99):     """Functionality common to both ModelAdmin and InlineAdmin."""
0.58 options.py(101):     autocomplete_fields = ()
0.58 options.py(102):     raw_id_fields = ()
0.58 options.py(103):     fields = None
0.58 options.py(104):     exclude = None
0.58 options.py(105):     fieldsets = None
0.58 options.py(106):     form = forms.ModelForm
0.58 options.py(107):     filter_vertical = ()
0.58 options.py(108):     filter_horizontal = ()
0.58 options.py(109):     radio_fields = {}
0.58 options.py(110):     prepopulated_fields = {}
0.58 options.py(111):     formfield_overrides = {}
0.58 options.py(112):     readonly_fields = ()
0.58 options.py(113):     ordering = None
0.58 options.py(114):     sortable_by = None
0.58 options.py(115):     view_on_site = True
0.58 options.py(116):     show_full_result_count = True
0.58 options.py(117):     checks_class = BaseModelAdminChecks
0.58 options.py(119):     def check(self, **kwargs):
0.58 options.py(122):     def __init__(self):
0.58 options.py(130):     def formfield_for_dbfield(self, db_field, request, **kwargs):
0.58 options.py(187):     def formfield_for_choice_field(self, db_field, request, **kwargs):
0.58 options.py(205):     def get_field_queryset(self, db, db_field, request):
0.58 options.py(218):     def formfield_for_foreignkey(self, db_field, request, **kwargs):
0.58 options.py(242):     def formfield_for_manytomany(self, db_field, request, **kwargs):
0.58 options.py(276):     def get_autocomplete_fields(self, request):
0.58 options.py(283):     def get_view_on_site_url(self, obj=None):
0.58 options.py(296):     def get_empty_value_display(self):
0.58 options.py(305):     def get_exclude(self, request, obj=None):
0.58 options.py(311):     def get_fields(self, request, obj=None):
0.58 options.py(321):     def get_fieldsets(self, request, obj=None):
0.58 options.py(329):     def get_inlines(self, request, obj):
0.58 options.py(333):     def get_ordering(self, request):
0.58 options.py(339):     def get_readonly_fields(self, request, obj=None):
0.58 options.py(345):     def get_prepopulated_fields(self, request, obj=None):
0.58 options.py(351):     def get_queryset(self, request):
0.58 options.py(363):     def get_sortable_by(self, request):
0.58 options.py(367):     def lookup_allowed(self, lookup, value):
0.58 options.py(421):     def to_field_allowed(self, request, to_field):
0.58 options.py(466):     def has_add_permission(self, request):
0.58 options.py(475):     def has_change_permission(self, request, obj=None):
0.58 options.py(490):     def has_delete_permission(self, request, obj=None):
0.58 options.py(505):     def has_view_permission(self, request, obj=None):
0.58 options.py(524):     def has_view_or_change_permission(self, request, obj=None):
0.58 options.py(527):     def has_module_permission(self, request):
0.58 options.py(541): class ModelAdmin(BaseModelAdmin):
0.58 options.py(541): class ModelAdmin(BaseModelAdmin):
0.58 options.py(542):     """Encapsulate all admin options and functionality for a given model."""
0.58 options.py(544):     list_display = ('__str__',)
0.58 options.py(545):     list_display_links = ()
0.58 options.py(546):     list_filter = ()
0.58 options.py(547):     list_select_related = False
0.58 options.py(548):     list_per_page = 100
0.58 options.py(549):     list_max_show_all = 200
0.58 options.py(550):     list_editable = ()
0.58 options.py(551):     search_fields = ()
0.58 options.py(552):     date_hierarchy = None
0.58 options.py(553):     save_as = False
0.58 options.py(554):     save_as_continue = True
0.58 options.py(555):     save_on_top = False
0.58 options.py(556):     paginator = Paginator
0.58 options.py(557):     preserve_filters = True
0.58 options.py(558):     inlines = []
0.58 options.py(561):     add_form_template = None
0.58 options.py(562):     change_form_template = None
0.58 options.py(563):     change_list_template = None
0.58 options.py(564):     delete_confirmation_template = None
0.58 options.py(565):     delete_selected_confirmation_template = None
0.58 options.py(566):     object_history_template = None
0.58 options.py(567):     popup_response_template = None
0.58 options.py(570):     actions = []
0.58 options.py(571):     action_form = helpers.ActionForm
0.58 options.py(572):     actions_on_top = True
0.58 options.py(573):     actions_on_bottom = False
0.58 options.py(574):     actions_selection_counter = True
0.58 options.py(575):     checks_class = ModelAdminChecks
0.58 options.py(577):     def __init__(self, model, admin_site):
0.58 options.py(583):     def __str__(self):
0.58 options.py(586):     def get_inline_instances(self, request, obj=None):
0.58 options.py(601):     def get_urls(self):
0.58 options.py(625):     @property
0.58 options.py(629):     @property
0.58 options.py(644):     def get_model_perms(self, request):
0.58 options.py(657):     def _get_form_for_get_fields(self, request, obj):
0.58 options.py(660):     def get_form(self, request, obj=None, change=False, **kwargs):
0.58 options.py(708):     def get_changelist(self, request, **kwargs):
0.58 options.py(715):     def get_changelist_instance(self, request):
0.58 options.py(743):     def get_object(self, request, object_id, from_field=None):
0.58 options.py(758):     def get_changelist_form(self, request, **kwargs):
0.58 options.py(771):     def get_changelist_formset(self, request, **kwargs):
0.58 options.py(785):     def get_formsets_with_inlines(self, request, obj=None):
0.58 options.py(792):     def get_paginator(self, request, queryset, per_page, orphans=0, allow_empty_first_page=True):
0.58 options.py(795):     def log_addition(self, request, object, message):
0.58 options.py(811):     def log_change(self, request, object, message):
0.58 options.py(827):     def log_deletion(self, request, object, object_repr):
0.58 options.py(843):     def action_checkbox(self, obj):
0.58 options.py(848):     action_checkbox.short_description = mark_safe('<input type="checkbox" id="action-toggle">')
0.58 options.py(850):     def _get_base_actions(self):
0.58 options.py(863):     def _filter_actions_by_permissions(self, request, actions):
0.58 options.py(879):     def get_actions(self, request):
0.58 options.py(891):     def get_action_choices(self, request, default_choices=models.BLANK_CHOICE_DASH):
0.58 options.py(902):     def get_action(self, action):
0.58 options.py(932):     def get_list_display(self, request):
0.58 options.py(939):     def get_list_display_links(self, request, list_display):
0.58 options.py(951):     def get_list_filter(self, request):
0.58 options.py(958):     def get_list_select_related(self, request):
0.58 options.py(965):     def get_search_fields(self, request):
0.58 options.py(972):     def get_search_results(self, request, queryset, search_term):
0.58 options.py(1020):     def get_preserved_filters(self, request):
0.58 options.py(1038):     def construct_change_message(self, request, form, formsets, add=False):
0.58 options.py(1044):     def message_user(self, request, message, level=messages.INFO, extra_tags='',
0.58 options.py(1045):                      fail_silently=False):
0.58 options.py(1069):     def save_form(self, request, form, change):
0.58 options.py(1076):     def save_model(self, request, obj, form, change):
0.58 options.py(1082):     def delete_model(self, request, obj):
0.58 options.py(1088):     def delete_queryset(self, request, queryset):
0.58 options.py(1092):     def save_formset(self, request, form, formset, change):
0.58 options.py(1098):     def save_related(self, request, form, formsets, change):
0.58 options.py(1110):     def render_change_form(self, request, context, add=False, change=False, form_url='', obj=None):
0.58 options.py(1157):     def response_add(self, request, obj, post_url_continue=None):
0.58 options.py(1234):     def response_change(self, request, obj):
0.58 options.py(1309):     def _response_post_save(self, request, obj):
0.58 options.py(1322):     def response_post_save_add(self, request, obj):
0.58 options.py(1329):     def response_post_save_change(self, request, obj):
0.58 options.py(1336):     def response_action(self, request, queryset):
0.58 options.py(1403):     def response_delete(self, request, obj_display, obj_id):
0.58 options.py(1444):     def render_delete_form(self, request, context):
0.58 options.py(1465):     def get_inline_formsets(self, request, formsets, inline_instances, obj=None):
0.58 options.py(1490):     def get_changeform_initial_data(self, request):
0.58 options.py(1505):     def _get_obj_does_not_exist_redirect(self, request, opts, object_id):
0.58 options.py(1518):     @csrf_protect_m
0.58 options.py(1519):     def changeform_view(self, request, object_id=None, form_url='', extra_context=None):
0.58 options.py(1523):     def _changeform_view(self, request, object_id, form_url, extra_context):
0.58 options.py(1636):     def autocomplete_view(self, request):
0.58 options.py(1639):     def add_view(self, request, form_url='', extra_context=None):
0.58 options.py(1642):     def change_view(self, request, object_id, form_url='', extra_context=None):
0.58 options.py(1645):     def _get_edited_object_pks(self, request, prefix):
0.58 options.py(1652):     def _get_list_editable_queryset(self, request, prefix):
0.58 options.py(1668):     @csrf_protect_m
0.58 options.py(1669):     def changelist_view(self, request, extra_context=None):
0.58 options.py(1823):     def get_deleted_objects(self, objs, request):
0.58 options.py(1830):     @csrf_protect_m
0.58 options.py(1831):     def delete_view(self, request, object_id, extra_context=None):
0.58 options.py(1835):     def _delete_view(self, request, object_id, extra_context):
0.58 options.py(1893):     def history_view(self, request, object_id, extra_context=None):
0.58 options.py(1932):     def _create_formsets(self, request, obj, change):
0.58 options.py(1978): class InlineModelAdmin(BaseModelAdmin):
0.58 options.py(1978): class InlineModelAdmin(BaseModelAdmin):
0.58 options.py(1985):     """
0.58 options.py(1986):     model = None
0.58 options.py(1987):     fk_name = None
0.58 options.py(1988):     formset = BaseInlineFormSet
0.58 options.py(1989):     extra = 3
0.58 options.py(1990):     min_num = None
0.58 options.py(1991):     max_num = None
0.58 options.py(1992):     template = None
0.58 options.py(1993):     verbose_name = None
0.58 options.py(1994):     verbose_name_plural = None
0.58 options.py(1995):     can_delete = True
0.58 options.py(1996):     show_change_link = False
0.58 options.py(1997):     checks_class = InlineModelAdminChecks
0.58 options.py(1998):     classes = None
0.58 options.py(2000):     def __init__(self, parent_model, admin_site):
0.58 options.py(2011):     @property
0.58 options.py(2022):     def get_extra(self, request, obj=None, **kwargs):
0.58 options.py(2026):     def get_min_num(self, request, obj=None, **kwargs):
0.58 options.py(2030):     def get_max_num(self, request, obj=None, **kwargs):
0.58 options.py(2034):     def get_formset(self, request, obj=None, **kwargs):
0.58 options.py(2123):     def _get_form_for_get_fields(self, request, obj=None):
0.58 options.py(2126):     def get_queryset(self, request):
0.58 options.py(2132):     def _has_any_perms_for_target_model(self, request, perms):
0.58 options.py(2150):     def has_add_permission(self, request, obj):
0.58 options.py(2159):     def has_change_permission(self, request, obj=None):
0.58 options.py(2165):     def has_delete_permission(self, request, obj=None):
0.58 options.py(2171):     def has_view_permission(self, request, obj=None):
0.58 options.py(2179): class StackedInline(InlineModelAdmin):
0.58 options.py(2179): class StackedInline(InlineModelAdmin):
0.58 options.py(2180):     template = 'admin/edit_inline/stacked.html'
0.58 options.py(2183): class TabularInline(InlineModelAdmin):
0.58 options.py(2183): class TabularInline(InlineModelAdmin):
0.58 options.py(2184):     template = 'admin/edit_inline/tabular.html'
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
test_custom_widget_used (test_coverup_django__django-12713.FormFieldForManyToManyTests) ... FAIL

======================================================================
FAIL: test_custom_widget_used (test_coverup_django__django-12713.FormFieldForManyToManyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./tests/test_coverup_django__django-12713.py", line 38, in test_custom_widget_used
    self.assertEqual(form_field.widget, custom_widget)
AssertionError: <test_coverup_django__django-12713.CustomWidget object at 0x7fbb69c0f438> != <test_coverup_django__django-12713.CustomWidget object at 0x7fbb69c0f1d0>

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
0.72 options.py(578):         self.model = model
0.72 options.py(579):         self.opts = model._meta
0.72 options.py(580):         self.admin_site = admin_site
0.72 options.py(581):         super().__init__()
0.72 options.py(125):         overrides = copy.deepcopy(FORMFIELD_FOR_DBFIELD_DEFAULTS)
0.72 options.py(126):         for k, v in self.formfield_overrides.items():
0.72 options.py(128):         self.formfield_overrides = overrides
0.72 options.py(248):         if not db_field.remote_field.through._meta.auto_created:
0.72 options.py(250):         db = kwargs.get('using')
0.72 options.py(252):         autocomplete_fields = self.get_autocomplete_fields(request)
0.72 options.py(281):         return self.autocomplete_fields
0.72 options.py(253):         if db_field.name in autocomplete_fields:
0.72 options.py(255):         elif db_field.name in self.raw_id_fields:
0.72 options.py(257):         elif db_field.name in [*self.filter_vertical, *self.filter_horizontal]:
0.72 options.py(263):         if 'queryset' not in kwargs:
0.72 options.py(264):             queryset = self.get_field_queryset(db, db_field, request)
0.72 options.py(211):         related_admin = self.admin_site._registry.get(db_field.remote_field.model)
0.72 options.py(212):         if related_admin is not None:
0.72 options.py(216):         return None
0.72 options.py(265):             if queryset is not None:
0.72 options.py(268):         form_field = db_field.formfield(**kwargs)
0.72 options.py(269):         if (isinstance(form_field.widget, SelectMultiple) and
0.72 options.py(274):         return form_field
+ cat coverage.cover
{"/testbed/django/contrib/admin/options.py": {"1": 1, "2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "15": 1, "16": 1, "17": 1, "22": 1, "23": 1, "26": 1, "27": 1, "30": 1, "31": 1, "32": 1, "33": 1, "34": 1, "38": 1, "39": 1, "40": 1, "41": 1, "42": 1, "43": 1, "44": 1, "45": 1, "46": 1, "47": 1, "48": 1, "49": 1, "50": 1, "52": 1, "53": 1, "56": 1, "59": 1, "66": 1, "70": 2, "78": 1, "79": 1, "80": 1, "82": 1, "83": 1, "84": 1, "85": 1, "86": 1, "87": 1, "88": 1, "89": 1, "90": 1, "91": 1, "92": 1, "95": 1, "98": 2, "541": 2, "1978": 2, "2179": 2, "2183": 2, "62": 0, "63": 0, "67": 0, "71": 1, "101": 1, "102": 1, "103": 1, "104": 1, "105": 1, "106": 1, "107": 1, "108": 1, "109": 1, "110": 1, "111": 1, "112": 1, "113": 1, "114": 1, "115": 1, "116": 1, "117": 1, "119": 1, "122": 1, "130": 1, "187": 1, "205": 1, "218": 1, "242": 1, "276": 1, "283": 1, "296": 1, "305": 1, "311": 1, "321": 1, "329": 1, "333": 1, "339": 1, "345": 1, "351": 1, "363": 1, "367": 1, "421": 1, "466": 1, "475": 1, "490": 1, "505": 1, "524": 1, "527": 1, "120": 0, "125": 1, "126": 1, "127": 0, "128": 1, "139": 0, "140": 0, "143": 0, "148": 0, "149": 0, "152": 0, "153": 0, "154": 0, "155": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "171": 0, "172": 0, "175": 0, "179": 0, "180": 0, "181": 0, "182": 0, "185": 0, "192": 0, "194": 0, "195": 0, "196": 0, "198": 0, "199": 0, "200": 0, "201": 0, "203": 0, "211": 1, "212": 1, "213": 0, "214": 0, "215": 0, "216": 1, "222": 0, "224": 0, "225": 0, "226": 0, "227": 0, "228": 0, "229": 0, "230": 0, "231": 0, "233": 0, "235": 0, "236": 0, "237": 0, "238": 0, "240": 0, "248": 1, "249": 0, "250": 1, "252": 1, "253": 1, "254": 0, "255": 1, "256": 0, "257": 1, "258": 0, "259": 0, "260": 0, "263": 1, "264": 1, "265": 1, "266": 0, "268": 1, "269": 1, "270": 0, "271": 0, "272": 0, "273": 0, "274": 1, "281": 1, "284": 0, "285": 0, "287": 0, "288": 0, "289": 0, "291": 0, "292": 0, "293": 0, "300": 0, "301": 0, "302": 0, "303": 0, "309": 0, "315": 0, "316": 0, "318": 0, "319": 0, "325": 0, "326": 0, "327": 0, "331": 0, "337": 0, "343": 0, "349": 0, "356": 0, "358": 0, "359": 0, "360": 0, "361": 0, "365": 0, "368": 0, "370": 0, "374": 0, "376": 0, "377": 0, "378": 0, "379": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "389": 0, "393": 0, "394": 0, "395": 0, "396": 0, "399": 0, "400": 0, "401": 0, "403": 0, "405": 0, "406": 0, "407": 0, "408": 0, "409": 0, "410": 0, "411": 0, "413": 0, "417": 0, "418": 0, "419": 0, "426": 0, "428": 0, "429": 0, "430": 0, "431": 0, "435": 0, "436": 0, "440": 0, "441": 0, "442": 0, "446": 0, "447": 0, "448": 0, "449": 0, "450": 0, "453": 0, "456": 0, "457": 0, "458": 0, "459": 0, "460": 0, "461": 0, "462": 0, "464": 0, "454": 0, "471": 0, "472": 0, "473": 0, "486": 0, "487": 0, "488": 0, "501": 0, "502": 0, "503": 0, "516": 0, "517": 0, "518": 0, "520": 0, "521": 0, "525": 0, "538": 0, "544": 1, "545": 1, "546": 1, "547": 1, "548": 1, "549": 1, "550": 1, "551": 1, "552": 1, "553": 1, "554": 1, "555": 1, "556": 1, "557": 1, "558": 1, "561": 1, "562": 1, "563": 1, "564": 1, "565": 1, "566": 1, "567": 1, "570": 1, "571": 1, "572": 1, "573": 1, "574": 1, "575": 1, "577": 1, "583": 1, "586": 1, "601": 1, "625": 1, "629": 1, "644": 1, "657": 1, "660": 1, "708": 1, "715": 1, "743": 1, "758": 1, "771": 1, "785": 1, "792": 1, "795": 1, "811": 1, "827": 1, "843": 1, "848": 1, "850": 1, "863": 1, "879": 1, "891": 1, "902": 1, "932": 1, "939": 1, "951": 1, "958": 1, "965": 1, "972": 1, "1020": 1, "1038": 1, "1044": 1, "1045": 1, "1069": 1, "1076": 1, "1082": 1, "1088": 1, "1092": 1, "1098": 1, "1110": 1, "1157": 1, "1234": 1, "1309": 1, "1322": 1, "1329": 1, "1336": 1, "1403": 1, "1444": 1, "1465": 1, "1490": 1, "1505": 1, "1518": 1, "1519": 1, "1523": 1, "1636": 1, "1639": 1, "1642": 1, "1645": 1, "1652": 1, "1668": 1, "1669": 1, "1823": 1, "1830": 1, "1831": 1, "1835": 1, "1893": 1, "1932": 1, "578": 1, "579": 1, "580": 1, "581": 1, "584": 0, "587": 0, "588": 0, "589": 0, "590": 0, "591": 0, "592": 0, "593": 0, "594": 0, "595": 0, "596": 0, "597": 0, "599": 0, "602": 0, "604": 0, "610": 0, "613": 0, "614": 0, "615": 0, "616": 0, "617": 0, "618": 0, "620": 0, "621": 0, "605": 0, "607": 0, "608": 0, "606": 0, "627": 0, "631": 0, "633": 0, "634": 0, "635": 0, "636": 0, "637": 0, "638": 0, "639": 0, "640": 0, "642": 0, "651": 0, "652": 0, "653": 0, "654": 0, "658": 0, "665": 0, "666": 0, "668": 0, "669": 0, "670": 0, "671": 0, "672": 0, "675": 0, "676": 0, "677": 0, "680": 0, "683": 0, "686": 0, "687": 0, "690": 0, "691": 0, "692": 0, "693": 0, "694": 0, "697": 0, "698": 0, "700": 0, "701": 0, "702": 0, "703": 0, "704": 0, "705": 0, "712": 0, "713": 0, "720": 0, "721": 0, "723": 0, "724": 0, "725": 0, "726": 0, "727": 0, "728": 0, "729": 0, "730": 0, "731": 0, "732": 0, "733": 0, "734": 0, "735": 0, "736": 0, "737": 0, "738": 0, "739": 0, "740": 0, "749": 0, "750": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "756": 0, "763": 0, "764": 0, "766": 0, "767": 0, "769": 0, "777": 0, "778": 0, "780": 0, "781": 0, "782": 0, "789": 0, "790": 0, "793": 0, "801": 0, "802": 0, "803": 0, "804": 0, "805": 0, "806": 0, "807": 0, "808": 0, "817": 0, "818": 0, "819": 0, "820": 0, "821": 0, "822": 0, "823": 0, "824": 0, "834": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "847": 0, "852": 0, "855": 0, "856": 0, "857": 0, "859": 0, "861": 0, "865": 0, "866": 0, "867": 0, "868": 0, "869": 0, "870": 0, "872": 0, "873": 0, "875": 0, "876": 0, "877": 0, "886": 0, "887": 0, "888": 0, "889": 0, "896": 0, "897": 0, "898": 0, "899": 0, "900": 0, "909": 0, "910": 0, "911": 0, "916": 0, "917": 0, "921": 0, "922": 0, "923": 0, "924": 0, "926": 0, "927": 0, "929": 0, "930": 0, "937": 0, "945": 0, "946": 0, "949": 0, "956": 0, "963": 0, "970": 0, "978": 0, "1007": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1015": 0, "1016": 0, "1018": 0, "979": 0, "980": 0, "981": 0, "982": 0, "983": 0, "984": 0, "986": 0, "987": 0, "989": 0, "990": 0, "991": 0, "992": 0, "993": 0, "994": 0, "995": 0, "997": 0, "998": 0, "1000": 0, "1001": 0, "1003": 0, "1005": 0, "1024": 0, "1025": 0, "1026": 0, "1027": 0, "1028": 0, "1029": 0, "1030": 0, "1032": 0, "1034": 0, "1035": 0, "1036": 0, "1042": 0, "1055": 0, "1057": 0, "1058": 0, "1059": 0, "1060": 0, "1061": 0, "1062": 0, "1063": 0, "1064": 0, "1067": 0, "1074": 0, "1080": 0, "1086": 0, "1090": 0, "1096": 0, "1106": 0, "1107": 0, "1108": 0, "1111": 0, "1112": 0, "1113": 0, "1114": 0, "1115": 0, "1116": 0, "1117": 0, "1118": 0, "1119": 0, "1120": 0, "1121": 0, "1122": 0, "1123": 0, "1124": 0, "1125": 0, "1126": 0, "1127": 0, "1128": 0, "1129": 0, "1130": 0, "1131": 0, "1133": 0, "1134": 0, "1135": 0, "1136": 0, "1137": 0, "1138": 0, "1139": 0, "1140": 0, "1141": 0, "1142": 0, "1144": 0, "1145": 0, "1147": 0, "1149": 0, "1151": 0, "1152": 0, "1153": 0, "1154": 0, "1155": 0, "1161": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1169": 0, "1170": 0, "1172": 0, "1174": 0, "1175": 0, "1180": 0, "1181": 0, "1182": 0, "1183": 0, "1185": 0, "1186": 0, "1187": 0, "1188": 0, "1189": 0, "1191": 0, "1192": 0, "1193": 0, "1194": 0, "1196": 0, "1199": 0, "1201": 0, "1202": 0, "1204": 0, "1205": 0, "1206": 0, "1207": 0, "1208": 0, "1209": 0, "1210": 0, "1211": 0, "1212": 0, "1214": 0, "1216": 0, "1217": 0, "1218": 0, "1219": 0, "1221": 0, "1222": 0, "1223": 0, "1224": 0, "1227": 0, "1228": 0, "1229": 0, "1231": 0, "1232": 0, "1239": 0, "1240": 0, "1241": 0, "1242": 0, "1243": 0, "1244": 0, "1245": 0, "1246": 0, "1247": 0, "1248": 0, "1249": 0, "1251": 0, "1252": 0, "1253": 0, "1254": 0, "1256": 0, "1259": 0, "1260": 0, "1263": 0, "1264": 0, "1266": 0, "1267": 0, "1268": 0, "1269": 0, "1271": 0, "1272": 0, "1273": 0, "1274": 0, "1276": 0, "1277": 0, "1278": 0, "1279": 0, "1281": 0, "1282": 0, "1283": 0, "1284": 0, "1285": 0, "1286": 0, "1287": 0, "1289": 0, "1290": 0, "1291": 0, "1292": 0, "1294": 0, "1295": 0, "1296": 0, "1297": 0, "1298": 0, "1299": 0, "1302": 0, "1303": 0, "1304": 0, "1306": 0, "1307": 0, "1310": 0, "1311": 0, "1312": 0, "1313": 0, "1314": 0, "1315": 0, "1316": 0, "1318": 0, "1319": 0, "1320": 0, "1327": 0, "1334": 0, "1346": 0, "1347": 0, "1348": 0, "1349": 0, "1352": 0, "1353": 0, "1354": 0, "1357": 0, "1358": 0, "1359": 0, "1363": 0, "1365": 0, "1366": 0, "1369": 0, "1370": 0, "1371": 0, "1372": 0, "1377": 0, "1378": 0, "1380": 0, "1382": 0, "1383": 0, "1385": 0, "1387": 0, "1389": 0, "1394": 0, "1395": 0, "1397": 0, "1399": 0, "1400": 0, "1401": 0, "1407": 0, "1409": 0, "1410": 0, "1411": 0, "1412": 0, "1414": 0, "1415": 0, "1416": 0, "1417": 0, "1419": 0, "1422": 0, "1423": 0, "1424": 0, "1425": 0, "1426": 0, "1428": 0, "1431": 0, "1432": 0, "1433": 0, "1434": 0, "1436": 0, "1437": 0, "1438": 0, "1441": 0, "1442": 0, "1445": 0, "1446": 0, "1448": 0, "1449": 0, "1450": 0, "1451": 0, "1452": 0, "1455": 0, "1456": 0, "1457": 0, "1458": 0, "1459": 0, "1460": 0, "1462": 0, "1467": 0, "1468": 0, "1469": 0, "1470": 0, "1471": 0, "1472": 0, "1473": 0, "1474": 0, "1475": 0, "1478": 0, "1479": 0, "1480": 0, "1481": 0, "1482": 0, "1483": 0, "1484": 0, "1485": 0, "1487": 0, "1488": 0, "1494": 0, "1495": 0, "1496": 0, "1497": 0, "1498": 0, "1499": 0, "1501": 0, "1502": 0, "1503": 0, "1510": 0, "1511": 0, "1512": 0, "1514": 0, "1515": 0, "1516": 0, "1520": 0, "1521": 0, "1524": 0, "1525": 0, "1526": 0, "1528": 0, "1529": 0, "1531": 0, "1532": 0, "1534": 0, "1536": 0, "1537": 0, "1538": 0, "1539": 0, "1542": 0, "1544": 0, "1545": 0, "1546": 0, "1548": 0, "1549": 0, "1551": 0, "1552": 0, "1554": 0, "1555": 0, "1556": 0, "1558": 0, "1559": 0, "1560": 0, "1561": 0, "1562": 0, "1564": 0, "1565": 0, "1566": 0, "1567": 0, "1568": 0, "1569": 0, "1570": 0, "1571": 0, "1572": 0, "1574": 0, "1575": 0, "1577": 0, "1579": 0, "1580": 0, "1581": 0, "1582": 0, "1584": 0, "1585": 0, "1587": 0, "1588": 0, "1590": 0, "1591": 0, "1592": 0, "1593": 0, "1595": 0, "1596": 0, "1597": 0, "1598": 0, "1600": 0, "1601": 0, "1602": 0, "1604": 0, "1605": 0, "1606": 0, "1607": 0, "1609": 0, "1611": 0, "1612": 0, "1613": 0, "1614": 0, "1615": 0, "1616": 0, "1617": 0, "1618": 0, "1619": 0, "1620": 0, "1621": 0, "1626": 0, "1627": 0, "1628": 0, "1630": 0, "1632": 0, "1634": 0, "1637": 0, "1640": 0, "1643": 0, "1647": 0, "1648": 0, "1650": 0, "1657": 0, "1658": 0, "1659": 0, "1660": 0, "1661": 0, "1662": 0, "1663": 0, "1665": 0, "1666": 0, "1673": 0, "1674": 0, "1675": 0, "1676": 0, "1677": 0, "1679": 0, "1680": 0, "1681": 0, "1688": 0, "1689": 0, "1690": 0, "1692": 0, "1698": 0, "1699": 0, "1701": 0, "1703": 0, "1704": 0, "1705": 0, "1706": 0, "1707": 0, "1708": 0, "1710": 0, "1712": 0, "1714": 0, "1715": 0, "1718": 0, "1719": 0, "1720": 0, "1721": 0, "1722": 0, "1723": 0, "1724": 0, "1726": 0, "1728": 0, "1732": 0, "1737": 0, "1740": 0, "1741": 0, "1742": 0, "1743": 0, "1744": 0, "1745": 0, "1746": 0, "1747": 0, "1748": 0, "1749": 0, "1750": 0, "1751": 0, "1752": 0, "1753": 0, "1754": 0, "1755": 0, "1757": 0, "1758": 0, "1759": 0, "1760": 0, "1761": 0, "1763": 0, "1764": 0, "1766": 0, "1768": 0, "1771": 0, "1772": 0, "1773": 0, "1776": 0, "1777": 0, "1779": 0, "1782": 0, "1783": 0, "1784": 0, "1785": 0, "1787": 0, "1789": 0, "1790": 0, "1791": 0, "1792": 0, "1796": 0, "1797": 0, "1798": 0, "1799": 0, "1800": 0, "1801": 0, "1802": 0, "1803": 0, "1804": 0, "1805": 0, "1806": 0, "1807": 0, "1808": 0, "1809": 0, "1810": 0, "1811": 0, "1812": 0, "1815": 0, "1817": 0, "1818": 0, "1819": 0, "1820": 0, "1821": 0, "1828": 0, "1832": 0, "1833": 0, "1837": 0, "1838": 0, "1840": 0, "1841": 0, "1842": 0, "1844": 0, "1846": 0, "1847": 0, "1849": 0, "1850": 0, "1854": 0, "1856": 0, "1857": 0, "1858": 0, "1859": 0, "1860": 0, "1861": 0, "1862": 0, "1863": 0, "1865": 0, "1867": 0, "1869": 0, "1870": 0, "1872": 0, "1875": 0, "1876": 0, "1877": 0, "1878": 0, "1879": 0, "1880": 0, "1881": 0, "1882": 0, "1883": 0, "1884": 0, "1885": 0, "1886": 0, "1887": 0, "1888": 0, "1891": 0, "1895": 0, "1897": 0, "1898": 0, "1899": 0, "1900": 0, "1902": 0, "1903": 0, "1906": 0, "1907": 0, "1908": 0, "1909": 0, "1910": 0, "1911": 0, "1914": 0, "1915": 0, "1916": 0, "1917": 0, "1918": 0, "1919": 0, "1920": 0, "1921": 0, "1924": 0, "1926": 0, "1927": 0, "1928": 0, "1929": 0, "1930": 0, "1934": 0, "1935": 0, "1936": 0, "1937": 0, "1938": 0, "1939": 0, "1940": 0, "1941": 0, "1942": 0, "1943": 0, "1944": 0, "1946": 0, "1947": 0, "1948": 0, "1950": 0, "1951": 0, "1952": 0, "1953": 0, "1954": 0, "1956": 0, "1958": 0, "1967": 0, "1968": 0, "1969": 0, "1970": 0, "1971": 0, "1972": 0, "1973": 0, "1974": 0, "1975": 0, "1961": 0, "1962": 0, "1986": 1, "1987": 1, "1988": 1, "1989": 1, "1990": 1, "1991": 1, "1992": 1, "1993": 1, "1994": 1, "1995": 1, "1996": 1, "1997": 1, "1998": 1, "2000": 1, "2011": 1, "2022": 1, "2026": 1, "2030": 1, "2034": 1, "2123": 1, "2126": 1, "2132": 1, "2150": 1, "2159": 1, "2165": 1, "2171": 1, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2024": 0, "2028": 0, "2032": 0, "2036": 0, "2037": 0, "2039": 0, "2040": 0, "2041": 0, "2042": 0, "2043": 0, "2046": 0, "2049": 0, "2050": 0, "2052": 0, "2053": 0, "2054": 0, "2055": 0, "2056": 0, "2057": 0, "2058": 0, "2059": 0, "2060": 0, "2061": 0, "2062": 0, "2065": 0, "2066": 0, "2067": 0, "2069": 0, "2116": 0, "2118": 0, "2119": 0, "2121": 0, "2071": 0, "2103": 0, "2108": 0, "2077": 0, "2078": 0, "2079": 0, "2080": 0, "2081": 0, "2082": 0, "2083": 0, "2084": 0, "2085": 0, "2086": 0, "2089": 0, "2090": 0, "2091": 0, "2094": 0, "2095": 0, "2096": 0, "2098": 0, "2101": 0, "2104": 0, "2105": 0, "2106": 0, "2110": 0, "2111": 0, "2112": 0, "2113": 0, "2114": 0, "2124": 0, "2127": 0, "2128": 0, "2129": 0, "2130": 0, "2139": 0, "2141": 0, "2142": 0, "2143": 0, "2144": 0, "2145": 0, "2146": 0, "2147": 0, "2151": 0, "2156": 0, "2157": 0, "2160": 0, "2162": 0, "2163": 0, "2166": 0, "2168": 0, "2169": 0, "2172": 0, "2175": 0, "2176": 0, "2180": 1, "2184": 1}}
+ git checkout 5b884d45ac5b76234eca614d90c83b347294c332
Note: switching to '5b884d45ac5b76234eca614d90c83b347294c332'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 5b884d45ac Fixed #29501 -- Allowed dbshell to pass options to underlying tool.
+ git apply /root/pre_state.patch
error: unrecognized input
