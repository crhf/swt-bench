{"instance_id": "django__django-13212", "repo": "django/django", "version": "3.2", "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-13212.py\nnew file mode 100644\nindex e69de29..ad69470 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-13212.py\n@@ -0,0 +1,19 @@\n+from django.test import SimpleTestCase\n+from django.core.exceptions import ValidationError\n+from django.core.validators import EmailValidator\n+\n+class EmailValidatorTest(SimpleTestCase):\n+    def test_email_validator_includes_value_in_error(self):\n+        \"\"\"\n+        Test that the EmailValidator raises a ValidationError including\n+        the provided value in the error message.\n+        \"\"\"\n+        validator = EmailValidator(message=\"%(value)s is not a valid email address.\")\n+        invalid_email = \"invalid-email\"\n+\n+        with self.assertRaises(ValidationError) as cm:\n+            validator(invalid_email)\n+\n+        error_message = str(cm.exception)\n+        # The error message should include the invalid value.\n+        self.assertIn(invalid_email, error_message)\n"], "arch": "x86_64", "base_commit": "f4e93919e4608cfc50849a1f764fd856e0917401", "test_directives": ["test_coverup_django__django-13212"], "coverage_files": ["django/forms/fields.py", "django/core/validators.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/fields\\.py|django/core/validators\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-13212", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}