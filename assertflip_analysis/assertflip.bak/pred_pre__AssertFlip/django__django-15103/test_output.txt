+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD dd528cb2cefc0db8b91a7ff0a2bc87305b976597
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit dd528cb2cefc0db8b91a7ff0a2bc87305b976597
Author: Paolo Melchiorre <paolo@melchiorre.org>
Date:   Mon Nov 22 09:56:56 2021 +0100

    Corrected "pip install" call in coding style docs.

diff --git a/docs/internals/contributing/writing-code/coding-style.txt b/docs/internals/contributing/writing-code/coding-style.txt
index 6d0a9c27b7..7b35fdf613 100644
--- a/docs/internals/contributing/writing-code/coding-style.txt
+++ b/docs/internals/contributing/writing-code/coding-style.txt
@@ -158,7 +158,7 @@ Imports
 
   .. console::
 
-      $ python -m pip install isort >= 5.1.0
+      $ python -m pip install "isort >= 5.1.0"
       $ isort -rc .
 
   This runs ``isort`` recursively from your current directory, modifying any
+ git diff dd528cb2cefc0db8b91a7ff0a2bc87305b976597
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.3.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20211122085656) (3.9.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20211122085656) (0.5.3)
Requirement already satisfied: typing_extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from asgiref>=3.3.2->Django==4.1.dev20211122085656) (4.14.1)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-4.1.dev20211122085656-0.editable-py3-none-any.whl size=26881 sha256=0c036700f5dd228722a94cf201ef0615686cc2eaed1ae5c7ecbef6fef0d7f979
  Stored in directory: /tmp/pip-ephem-wheel-cache-p3e8lbuj/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 4.1.dev20211122085656
    Uninstalling Django-4.1.dev20211122085656:
      Successfully uninstalled Django-4.1.dev20211122085656
Successfully installed Django-4.1.dev20211122085656
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch tests/test_coverup_django__django-15103.py...
Applied patch tests/test_coverup_django__django-15103.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/template/defaultfilters\.py|django/utils/html\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15103
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/template/defaultfilters\\.py|django/utils/html\\.py)']
0.19 html.py(1): """HTML utilities suitable for global use."""
0.19 html.py(3): import html
0.19 html.py(4): import json
0.19 html.py(5): import re
0.19 html.py(6): from html.parser import HTMLParser
0.19 html.py(7): from urllib.parse import (
0.19 html.py(11): from django.utils.encoding import punycode
0.19 html.py(12): from django.utils.functional import Promise, keep_lazy, keep_lazy_text
0.19 html.py(13): from django.utils.http import RFC3986_GENDELIMS, RFC3986_SUBDELIMS
0.19 html.py(14): from django.utils.regex_helper import _lazy_re_compile
0.19 html.py(15): from django.utils.safestring import SafeData, SafeString, mark_safe
0.19 html.py(16): from django.utils.text import normalize_newlines
0.19 html.py(19): @keep_lazy(str, SafeString)
0.19 html.py(20): def escape(text):
0.19 html.py(33):     ord('\\'): '\\u005C',
0.19 html.py(34):     ord('\''): '\\u0027',
0.19 html.py(35):     ord('"'): '\\u0022',
0.19 html.py(36):     ord('>'): '\\u003E',
0.19 html.py(37):     ord('<'): '\\u003C',
0.19 html.py(38):     ord('&'): '\\u0026',
0.19 html.py(39):     ord('='): '\\u003D',
0.19 html.py(40):     ord('-'): '\\u002D',
0.19 html.py(41):     ord(';'): '\\u003B',
0.19 html.py(42):     ord('`'): '\\u0060',
0.19 html.py(43):     ord('\u2028'): '\\u2028',
0.19 html.py(44):     ord('\u2029'): '\\u2029'
0.19 html.py(32): _js_escapes = {
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(48): _js_escapes.update((ord('%c' % z), '\\u%04X' % z) for z in range(32))
0.19 html.py(51): @keep_lazy(str, SafeString)
0.19 html.py(52): def escapejs(value):
0.19 html.py(58):     ord('>'): '\\u003E',
0.19 html.py(59):     ord('<'): '\\u003C',
0.19 html.py(60):     ord('&'): '\\u0026',
0.19 html.py(57): _json_script_escapes = {
0.19 html.py(64): def json_script(value, element_id):
0.19 html.py(78): def conditional_escape(text):
0.19 html.py(93): def format_html(format_string, *args, **kwargs):
0.19 html.py(104): def format_html_join(sep, format_string, args_generator):
0.19 html.py(124): @keep_lazy_text
0.19 html.py(125): def linebreaks(value, autoescape=False):
0.19 html.py(136): class MLStripper(HTMLParser):
0.19 html.py(136): class MLStripper(HTMLParser):
0.19 html.py(137):     def __init__(self):
0.19 html.py(142):     def handle_data(self, d):
0.19 html.py(145):     def handle_entityref(self, name):
0.19 html.py(148):     def handle_charref(self, name):
0.19 html.py(151):     def get_data(self):
0.19 html.py(155): def _strip_once(value):
0.19 html.py(165): @keep_lazy_text
0.19 html.py(166): def strip_tags(value):
0.19 html.py(180): @keep_lazy_text
0.19 html.py(181): def strip_spaces_between_tags(value):
0.19 html.py(186): def smart_urlquote(url):
0.19 html.py(221): class Urlizer:
0.19 html.py(221): class Urlizer:
0.19 html.py(222):     """
0.19 html.py(230):     trailing_punctuation_chars = '.,:;!'
0.19 html.py(231):     wrapping_punctuation = [('(', ')'), ('[', ']')]
0.19 html.py(233):     simple_url_re = _lazy_re_compile(r'^https?://\[?\w', re.IGNORECASE)
0.19 html.py(234):     simple_url_2_re = _lazy_re_compile(
0.19 html.py(235):         r'^www\.|^(?!http)\w[^@]+\.(com|edu|gov|int|mil|net|org)($|/.*)$',
0.19 html.py(236):         re.IGNORECASE
0.19 html.py(234):     simple_url_2_re = _lazy_re_compile(
0.19 html.py(238):     word_split_re = _lazy_re_compile(r'''([\s<>"']+)''')
0.19 html.py(240):     mailto_template = 'mailto:{local}@{domain}'
0.19 html.py(241):     url_template = '<a href="{href}"{attrs}>{url}</a>'
0.19 html.py(243):     def __call__(self, text, trim_url_limit=None, nofollow=False, autoescape=False):
0.19 html.py(267):         self, word, *, safe_input, trim_url_limit=None, nofollow=False, autoescape=False,
0.19 html.py(266):     def handle_word(
0.19 html.py(312):     def trim_url(self, x, *, limit):
0.19 html.py(317):     def trim_punctuation(self, word):
0.19 html.py(353):     @staticmethod
0.19 html.py(354):     def is_email_simple(value):
0.19 html.py(370): urlizer = Urlizer()
0.19 html.py(373): @keep_lazy_text
0.19 html.py(374): def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):
0.19 html.py(378): def avoid_wrapping(value):
0.19 html.py(386): def html_safe(klass):
0.21 html.py(391):     if '__html__' in klass.__dict__:
0.21 html.py(396):     if '__str__' not in klass.__dict__:
0.21 html.py(401):     klass_str = klass.__str__
0.21 html.py(402):     klass.__str__ = lambda self: mark_safe(klass_str(self))
0.21 html.py(403):     klass.__html__ = lambda self: str(self)
0.21 html.py(404):     return klass
0.21 html.py(391):     if '__html__' in klass.__dict__:
0.21 html.py(396):     if '__str__' not in klass.__dict__:
0.21 html.py(401):     klass_str = klass.__str__
0.21 html.py(402):     klass.__str__ = lambda self: mark_safe(klass_str(self))
0.21 html.py(403):     klass.__html__ = lambda self: str(self)
0.21 html.py(404):     return klass
0.21 html.py(391):     if '__html__' in klass.__dict__:
0.21 html.py(396):     if '__str__' not in klass.__dict__:
0.21 html.py(401):     klass_str = klass.__str__
0.21 html.py(402):     klass.__str__ = lambda self: mark_safe(klass_str(self))
0.21 html.py(403):     klass.__html__ = lambda self: str(self)
0.21 html.py(404):     return klass
0.37 defaultfilters.py(1): """Default variable filters."""
0.37 defaultfilters.py(2): import random as random_module
0.37 defaultfilters.py(3): import re
0.37 defaultfilters.py(4): import types
0.37 defaultfilters.py(5): from decimal import ROUND_HALF_UP, Context, Decimal, InvalidOperation
0.37 defaultfilters.py(6): from functools import wraps
0.37 defaultfilters.py(7): from operator import itemgetter
0.37 defaultfilters.py(8): from pprint import pformat
0.37 defaultfilters.py(9): from urllib.parse import quote
0.37 defaultfilters.py(11): from django.utils import formats
0.37 defaultfilters.py(12): from django.utils.dateformat import format, time_format
0.37 defaultfilters.py(13): from django.utils.encoding import iri_to_uri
0.37 defaultfilters.py(14): from django.utils.html import (
0.37 defaultfilters.py(18): from django.utils.safestring import SafeData, mark_safe
0.37 defaultfilters.py(19): from django.utils.text import (
0.37 defaultfilters.py(22): from django.utils.timesince import timesince, timeuntil
0.37 defaultfilters.py(23): from django.utils.translation import gettext, ngettext
0.37 defaultfilters.py(25): from .base import Variable, VariableDoesNotExist
0.37 defaultfilters.py(26): from .library import Library
0.37 defaultfilters.py(28): register = Library()
0.37 defaultfilters.py(35): def stringfilter(func):
0.37 defaultfilters.py(60): @register.filter(is_safe=True)
0.37 defaultfilters.py(61): @stringfilter
0.37 defaultfilters.py(62): def addslashes(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(71): @register.filter(is_safe=True)
0.37 defaultfilters.py(72): @stringfilter
0.37 defaultfilters.py(73): def capfirst(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(78): @register.filter("escapejs")
0.37 defaultfilters.py(79): @stringfilter
0.37 defaultfilters.py(80): def escapejs_filter(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(85): @register.filter(is_safe=True)
0.37 defaultfilters.py(86): def json_script(value, element_id):
0.37 defaultfilters.py(94): @register.filter(is_safe=True)
0.37 defaultfilters.py(95): def floatformat(text, arg=-1):
0.37 defaultfilters.py(204): @register.filter(is_safe=True)
0.37 defaultfilters.py(205): @stringfilter
0.37 defaultfilters.py(206): def iriencode(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(211): @register.filter(is_safe=True, needs_autoescape=True)
0.37 defaultfilters.py(212): @stringfilter
0.37 defaultfilters.py(213): def linenumbers(value, autoescape=True):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(228): @register.filter(is_safe=True)
0.37 defaultfilters.py(229): @stringfilter
0.37 defaultfilters.py(230): def lower(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(235): @register.filter(is_safe=False)
0.37 defaultfilters.py(236): @stringfilter
0.37 defaultfilters.py(237): def make_list(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(247): @register.filter(is_safe=True)
0.37 defaultfilters.py(248): @stringfilter
0.37 defaultfilters.py(249): def slugify(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(258): @register.filter(is_safe=True)
0.37 defaultfilters.py(259): def stringformat(value, arg):
0.37 defaultfilters.py(277): @register.filter(is_safe=True)
0.37 defaultfilters.py(278): @stringfilter
0.37 defaultfilters.py(279): def title(value):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(285): @register.filter(is_safe=True)
0.37 defaultfilters.py(286): @stringfilter
0.37 defaultfilters.py(287): def truncatechars(value, arg):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(296): @register.filter(is_safe=True)
0.37 defaultfilters.py(297): @stringfilter
0.37 defaultfilters.py(298): def truncatechars_html(value, arg):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(310): @register.filter(is_safe=True)
0.37 defaultfilters.py(311): @stringfilter
0.37 defaultfilters.py(312): def truncatewords(value, arg):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.37 defaultfilters.py(324): @register.filter(is_safe=True)
0.37 defaultfilters.py(325): @stringfilter
0.37 defaultfilters.py(326): def truncatewords_html(value, arg):
0.37 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.37 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.37 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(338): @register.filter(is_safe=False)
0.38 defaultfilters.py(339): @stringfilter
0.38 defaultfilters.py(340): def upper(value):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(345): @register.filter(is_safe=False)
0.38 defaultfilters.py(346): @stringfilter
0.38 defaultfilters.py(347): def urlencode(value, safe=None):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(362): @register.filter(is_safe=True, needs_autoescape=True)
0.38 defaultfilters.py(363): @stringfilter
0.38 defaultfilters.py(364): def urlize(value, autoescape=True):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(369): @register.filter(is_safe=True, needs_autoescape=True)
0.38 defaultfilters.py(370): @stringfilter
0.38 defaultfilters.py(371): def urlizetrunc(value, limit, autoescape=True):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 test_json_script_without_element_id (test_coverup_django__django-15103.JsonScriptTests)
Test json_script function without providing element_id. ... FAIL

======================================================================
FAIL: test_json_script_without_element_id (test_coverup_django__django-15103.JsonScriptTests)
Test json_script function without providing element_id.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-15103.py", line 14, in test_json_script_without_element_id
    result = json_script(sample_value)
TypeError: json_script() missing 1 required positional argument: 'element_id'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-15103.py", line 16, in test_json_script_without_element_id
    self.fail("json_script raised TypeError unexpectedly!")
AssertionError: json_script raised TypeError unexpectedly!

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(381): @register.filter(is_safe=False)
0.38 defaultfilters.py(382): @stringfilter
0.38 defaultfilters.py(383): def wordcount(value):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(388): @register.filter(is_safe=True)
0.38 defaultfilters.py(389): @stringfilter
0.38 defaultfilters.py(390): def wordwrap(value, arg):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(395): @register.filter(is_safe=True)
0.38 defaultfilters.py(396): @stringfilter
0.38 defaultfilters.py(397): def ljust(value, arg):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(402): @register.filter(is_safe=True)
0.38 defaultfilters.py(403): @stringfilter
0.38 defaultfilters.py(404): def rjust(value, arg):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(409): @register.filter(is_safe=True)
0.38 defaultfilters.py(410): @stringfilter
0.38 defaultfilters.py(411): def center(value, arg):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(416): @register.filter
0.38 defaultfilters.py(417): @stringfilter
0.38 defaultfilters.py(418): def cut(value, arg):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(431): @register.filter("escape", is_safe=True)
0.38 defaultfilters.py(432): @stringfilter
0.38 defaultfilters.py(433): def escape_filter(value):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(438): @register.filter(is_safe=True)
0.38 defaultfilters.py(439): @stringfilter
0.38 defaultfilters.py(440): def force_escape(value):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(449): @register.filter("linebreaks", is_safe=True, needs_autoescape=True)
0.38 defaultfilters.py(450): @stringfilter
0.38 defaultfilters.py(451): def linebreaks_filter(value, autoescape=True):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(461): @register.filter(is_safe=True, needs_autoescape=True)
0.38 defaultfilters.py(462): @stringfilter
0.38 defaultfilters.py(463): def linebreaksbr(value, autoescape=True):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(475): @register.filter(is_safe=True)
0.38 defaultfilters.py(476): @stringfilter
0.38 defaultfilters.py(477): def safe(value):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(482): @register.filter(is_safe=True)
0.38 defaultfilters.py(483): def safeseq(value):
0.38 defaultfilters.py(492): @register.filter(is_safe=True)
0.38 defaultfilters.py(493): @stringfilter
0.38 defaultfilters.py(494): def striptags(value):
0.38 defaultfilters.py(40):     def _dec(*args, **kwargs):
0.38 defaultfilters.py(51):     _dec._decorated_function = getattr(func, '_decorated_function', func)
0.38 defaultfilters.py(53):     return wraps(func)(_dec)
0.38 defaultfilters.py(503): def _property_resolver(arg):
0.38 defaultfilters.py(529): @register.filter(is_safe=False)
0.38 defaultfilters.py(530): def dictsort(value, arg):
0.38 defaultfilters.py(541): @register.filter(is_safe=False)
0.38 defaultfilters.py(542): def dictsortreversed(value, arg):
0.38 defaultfilters.py(553): @register.filter(is_safe=False)
0.38 defaultfilters.py(554): def first(value):
0.38 defaultfilters.py(562): @register.filter(is_safe=True, needs_autoescape=True)
0.38 defaultfilters.py(563): def join(value, arg, autoescape=True):
0.38 defaultfilters.py(574): @register.filter(is_safe=True)
0.38 defaultfilters.py(575): def last(value):
0.38 defaultfilters.py(583): @register.filter(is_safe=False)
0.38 defaultfilters.py(584): def length(value):
0.38 defaultfilters.py(592): @register.filter(is_safe=False)
0.38 defaultfilters.py(593): def length_is(value, arg):
0.38 defaultfilters.py(601): @register.filter(is_safe=True)
0.38 defaultfilters.py(602): def random(value):
0.38 defaultfilters.py(607): @register.filter("slice", is_safe=True)
0.38 defaultfilters.py(608): def slice_filter(value, arg):
0.38 defaultfilters.py(625): @register.filter(is_safe=True, needs_autoescape=True)
0.38 defaultfilters.py(626): def unordered_list(value, autoescape=True):
0.38 defaultfilters.py(696): @register.filter(is_safe=False)
0.38 defaultfilters.py(697): def add(value, arg):
0.38 defaultfilters.py(708): @register.filter(is_safe=False)
0.38 defaultfilters.py(709): def get_digit(value, arg):
0.38 defaultfilters.py(733): @register.filter(expects_localtime=True, is_safe=False)
0.38 defaultfilters.py(734): def date(value, arg=None):
0.38 defaultfilters.py(747): @register.filter(expects_localtime=True, is_safe=False)
0.38 defaultfilters.py(748): def time(value, arg=None):
0.38 defaultfilters.py(761): @register.filter("timesince", is_safe=False)
0.38 defaultfilters.py(762): def timesince_filter(value, arg=None):
0.38 defaultfilters.py(774): @register.filter("timeuntil", is_safe=False)
0.38 defaultfilters.py(775): def timeuntil_filter(value, arg=None):
0.38 defaultfilters.py(789): @register.filter(is_safe=False)
0.38 defaultfilters.py(790): def default(value, arg):
0.38 defaultfilters.py(795): @register.filter(is_safe=False)
0.38 defaultfilters.py(796): def default_if_none(value, arg):
0.38 defaultfilters.py(803): @register.filter(is_safe=False)
0.38 defaultfilters.py(804): def divisibleby(value, arg):
0.38 defaultfilters.py(809): @register.filter(is_safe=False)
0.38 defaultfilters.py(810): def yesno(value, arg=None):
0.38 defaultfilters.py(847): @register.filter(is_safe=True)
0.38 defaultfilters.py(848): def filesizeformat(bytes_):
0.38 defaultfilters.py(890): @register.filter(is_safe=False)
0.38 defaultfilters.py(891): def pluralize(value, arg='s'):
0.38 defaultfilters.py(932): @register.filter("phone2numeric", is_safe=True)
0.38 defaultfilters.py(933): def phone2numeric_filter(value):
0.38 defaultfilters.py(938): @register.filter(is_safe=True)
0.38 defaultfilters.py(939): def pprint(value):
Testing against Django installed in '/testbed/django'
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
+ cat coverage.cover
{"/testbed/django/utils/html.py": {"3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "19": 1, "20": 1, "33": 1, "34": 1, "35": 1, "36": 1, "37": 1, "38": 1, "39": 1, "40": 1, "41": 1, "42": 1, "43": 1, "44": 1, "32": 1, "48": 34, "51": 1, "52": 1, "58": 1, "59": 1, "60": 1, "57": 1, "64": 1, "78": 1, "93": 1, "104": 1, "124": 1, "125": 1, "136": 2, "155": 1, "165": 1, "166": 1, "180": 1, "181": 1, "186": 1, "221": 2, "370": 1, "373": 1, "374": 1, "378": 1, "386": 1, "29": 0, "54": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "85": 0, "86": 0, "87": 0, "88": 0, "90": 0, "99": 0, "100": 0, "101": 0, "118": 0, "120": 0, "119": 0, "127": 0, "128": 0, "129": 0, "130": 0, "132": 0, "133": 0, "137": 1, "142": 1, "145": 1, "148": 1, "151": 1, "138": 0, "139": 0, "140": 0, "143": 0, "146": 0, "149": 0, "152": 0, "159": 0, "160": 0, "161": 0, "162": 0, "170": 0, "171": 0, "172": 0, "173": 0, "175": 0, "176": 0, "177": 0, "183": 0, "188": 0, "196": 0, "197": 0, "198": 0, "200": 0, "202": 0, "203": 0, "204": 0, "205": 0, "207": 0, "210": 0, "211": 0, "213": 0, "215": 0, "216": 0, "218": 0, "189": 0, "193": 0, "230": 1, "231": 1, "233": 1, "234": 2, "235": 1, "236": 1, "238": 1, "240": 1, "241": 1, "243": 1, "267": 1, "266": 1, "312": 1, "317": 1, "353": 1, "354": 1, "253": 0, "255": 0, "256": 0, "263": 0, "257": 0, "258": 0, "259": 0, "260": 0, "261": 0, "262": 0, "269": 0, "273": 0, "275": 0, "276": 0, "277": 0, "278": 0, "279": 0, "280": 0, "281": 0, "282": 0, "283": 0, "284": 0, "285": 0, "286": 0, "287": 0, "288": 0, "290": 0, "291": 0, "292": 0, "293": 0, "294": 0, "295": 0, "296": 0, "297": 0, "298": 0, "300": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "307": 0, "308": 0, "309": 0, "310": 0, "313": 0, "314": 0, "315": 0, "322": 0, "324": 0, "325": 0, "326": 0, "328": 0, "329": 0, "330": 0, "331": 0, "332": 0, "335": 0, "334": 0, "336": 0, "338": 0, "339": 0, "340": 0, "344": 0, "345": 0, "346": 0, "347": 0, "348": 0, "349": 0, "350": 0, "351": 0, "357": 0, "358": 0, "359": 0, "360": 0, "361": 0, "363": 0, "365": 0, "366": 0, "367": 0, "375": 0, "383": 0, "391": 3, "392": 0, "393": 0, "394": 0, "396": 3, "397": 0, "398": 0, "399": 0, "401": 3, "402": 3, "403": 3, "404": 3}}
{"/testbed/django/template/defaultfilters.py": {"2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "11": 1, "12": 1, "13": 1, "14": 1, "18": 1, "19": 1, "22": 1, "23": 1, "25": 1, "26": 1, "28": 1, "35": 1, "60": 1, "61": 1, "62": 1, "71": 1, "72": 1, "73": 1, "78": 1, "79": 1, "80": 1, "85": 1, "86": 1, "94": 1, "95": 1, "204": 1, "205": 1, "206": 1, "211": 1, "212": 1, "213": 1, "228": 1, "229": 1, "230": 1, "235": 1, "236": 1, "237": 1, "247": 1, "248": 1, "249": 1, "258": 1, "259": 1, "277": 1, "278": 1, "279": 1, "285": 1, "286": 1, "287": 1, "296": 1, "297": 1, "298": 1, "310": 1, "311": 1, "312": 1, "324": 1, "325": 1, "326": 1, "338": 1, "339": 1, "340": 1, "345": 1, "346": 1, "347": 1, "362": 1, "363": 1, "364": 1, "369": 1, "370": 1, "371": 1, "381": 1, "382": 1, "383": 1, "388": 1, "389": 1, "390": 1, "395": 1, "396": 1, "397": 1, "402": 1, "403": 1, "404": 1, "409": 1, "410": 1, "411": 1, "416": 1, "417": 1, "418": 1, "431": 1, "432": 1, "433": 1, "438": 1, "439": 1, "440": 1, "449": 1, "450": 1, "451": 1, "461": 1, "462": 1, "463": 1, "475": 1, "476": 1, "477": 1, "482": 1, "483": 1, "492": 1, "493": 1, "494": 1, "503": 1, "529": 1, "530": 1, "541": 1, "542": 1, "553": 1, "554": 1, "562": 1, "563": 1, "574": 1, "575": 1, "583": 1, "584": 1, "592": 1, "593": 1, "601": 1, "602": 1, "607": 1, "608": 1, "625": 1, "626": 1, "696": 1, "697": 1, "708": 1, "709": 1, "733": 1, "734": 1, "747": 1, "748": 1, "761": 1, "762": 1, "774": 1, "775": 1, "789": 1, "790": 1, "795": 1, "796": 1, "803": 1, "804": 1, "809": 1, "810": 1, "847": 1, "848": 1, "890": 1, "891": 1, "932": 1, "933": 1, "938": 1, "939": 1, "40": 29, "51": 29, "53": 29, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "68": 0, "75": 0, "82": 0, "91": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "165": 0, "166": 0, "167": 0, "168": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "178": 0, "180": 0, "181": 0, "182": 0, "183": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "208": 0, "215": 0, "218": 0, "219": 0, "220": 0, "221": 0, "223": 0, "224": 0, "225": 0, "232": 0, "244": 0, "255": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "281": 0, "282": 0, "289": 0, "290": 0, "291": 0, "292": 0, "293": 0, "303": 0, "304": 0, "305": 0, "306": 0, "307": 0, "317": 0, "318": 0, "319": 0, "320": 0, "321": 0, "331": 0, "332": 0, "333": 0, "334": 0, "335": 0, "342": 0, "356": 0, "357": 0, "358": 0, "359": 0, "366": 0, "378": 0, "385": 0, "392": 0, "399": 0, "406": 0, "413": 0, "420": 0, "421": 0, "422": 0, "423": 0, "424": 0, "435": 0, "446": 0, "457": 0, "458": 0, "468": 0, "469": 0, "470": 0, "471": 0, "472": 0, "479": 0, "489": 0, "496": 0, "521": 0, "522": 0, "523": 0, "524": 0, "526": 0, "535": 0, "536": 0, "537": 0, "538": 0, "547": 0, "548": 0, "549": 0, "550": 0, "556": 0, "557": 0, "558": 0, "559": 0, "565": 0, "566": 0, "567": 0, "568": 0, "569": 0, "570": 0, "571": 0, "577": 0, "578": 0, "579": 0, "580": 0, "586": 0, "587": 0, "588": 0, "589": 0, "595": 0, "596": 0, "597": 0, "598": 0, "604": 0, "612": 0, "613": 0, "614": 0, "615": 0, "616": 0, "618": 0, "619": 0, "621": 0, "622": 0, "647": 0, "648": 0, "650": 0, "653": 0, "677": 0, "689": 0, "651": 0, "654": 0, "655": 0, "656": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "665": 0, "666": 0, "667": 0, "669": 0, "670": 0, "671": 0, "672": 0, "673": 0, "674": 0, "675": 0, "678": 0, "679": 0, "680": 0, "681": 0, "682": 0, "683": 0, "684": 0, "685": 0, "686": 0, "687": 0, "699": 0, "700": 0, "701": 0, "702": 0, "703": 0, "704": 0, "705": 0, "716": 0, "717": 0, "718": 0, "719": 0, "720": 0, "721": 0, "722": 0, "723": 0, "724": 0, "725": 0, "726": 0, "736": 0, "737": 0, "738": 0, "739": 0, "740": 0, "741": 0, "742": 0, "743": 0, "744": 0, "750": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "756": 0, "757": 0, "758": 0, "764": 0, "765": 0, "766": 0, "767": 0, "768": 0, "769": 0, "770": 0, "771": 0, "777": 0, "778": 0, "779": 0, "780": 0, "781": 0, "782": 0, "792": 0, "798": 0, "799": 0, "800": 0, "806": 0, "825": 0, "827": 0, "828": 0, "829": 0, "830": 0, "831": 0, "832": 0, "833": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "853": 0, "854": 0, "855": 0, "856": 0, "857": 0, "859": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "868": 0, "869": 0, "870": 0, "872": 0, "873": 0, "874": 0, "875": 0, "876": 0, "877": 0, "878": 0, "879": 0, "880": 0, "881": 0, "883": 0, "885": 0, "886": 0, "887": 0, "860": 0, "913": 0, "914": 0, "915": 0, "916": 0, "917": 0, "918": 0, "920": 0, "921": 0, "922": 0, "923": 0, "924": 0, "925": 0, "926": 0, "927": 0, "928": 0, "929": 0, "935": 0, "941": 0, "942": 0, "943": 0, "944": 0}}
+ git checkout dd528cb2cefc0db8b91a7ff0a2bc87305b976597
Note: switching to 'dd528cb2cefc0db8b91a7ff0a2bc87305b976597'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at dd528cb2ce Corrected "pip install" call in coding style docs.
+ git apply /root/pre_state.patch
error: unrecognized input
