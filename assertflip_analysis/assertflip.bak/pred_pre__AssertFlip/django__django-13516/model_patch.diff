diff --git a/dev/null b/tests/test_coverup_django__django-13516.py
new file mode 100644
index e69de29..f8438e8 100644
--- /dev/null
+++ b/tests/test_coverup_django__django-13516.py
@@ -0,0 +1,44 @@
+from django.test import SimpleTestCase
+from unittest.mock import patch, MagicMock
+from django.core.management.commands.migrate import Command
+from django.core.management.base import OutputWrapper
+import sys
+
+class MigrationFlushTest(SimpleTestCase):
+    def test_migration_flush_behavior(self):
+        """
+        Test that the flush() method works correctly during migrations.
+        """
+
+        # Mock the stdout to capture its output
+        mock_stdout = MagicMock(spec=OutputWrapper)
+
+        # Patch sys.stdout to use the mock_stdout
+        with patch('sys.stdout', mock_stdout):
+            # Create an instance of the Command to access stdout
+            command_instance = Command(stdout=mock_stdout)
+
+            # Simulate the migration process
+            migration_steps = [
+                ("apply_start", "myapp.0001_initial"),
+                ("apply_success", "myapp.0001_initial"),
+                ("apply_start", "myapp.0002_auto_20200817_1030"),
+                ("apply_success", "myapp.0002_auto_20200817_1030"),
+            ]
+
+            for action, migration in migration_steps:
+                if action == "apply_start":
+                    command_instance.stdout.write(f"  Applying {migration}...", ending="")
+                    # Call flush to simulate the correct behavior
+                    command_instance.stdout.flush()
+                    # Assert that flush is called, which is the expected behavior
+                    mock_stdout.flush.assert_called()
+                elif action == "apply_success":
+                    command_instance.stdout.write(" OK\n")
+                    mock_stdout.write.assert_called_with(" OK\n")
+                    # Reset the mock for the next step
+                    mock_stdout.reset_mock()
+
+            # Ensure the test fails if the bug is present
+            self.assertTrue(mock_stdout.flush.called)
+
