{"instance_id": "django__django-14534", "repo": "django/django", "version": "4.0", "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-14534.py\nnew file mode 100644\nindex e69de29..6a4b7ae 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-14534.py\n@@ -0,0 +1,26 @@\n+from django import forms\n+from django.test import SimpleTestCase\n+\n+class TestForm(forms.Form):\n+    choices = forms.MultipleChoiceField(\n+        widget=forms.CheckboxSelectMultiple,\n+        choices=[('1', 'Option 1'), ('2', 'Option 2')]\n+    )\n+\n+class BoundWidgetIdForLabelTest(SimpleTestCase):\n+    def test_id_for_label_uses_custom_id_format(self):\n+        # Create a form with a custom auto_id format\n+        form = TestForm(auto_id='custom_id_%s')\n+        \n+        # Render the form to generate BoundWidget instances\n+        rendered_form = form.as_p()\n+        \n+        # Access the BoundWidget instances for the CheckboxSelectMultiple widget\n+        subwidgets = form['choices'].subwidgets\n+        \n+        # Iterate over the BoundWidget instances and call id_for_label\n+        for widget in subwidgets:\n+            id_for_label = widget.id_for_label\n+            \n+            # Assert that the id_for_label method returns the custom ID format\n+            self.assertTrue(id_for_label.startswith('custom_id_'))\n"], "arch": "x86_64", "base_commit": "910ecd1b8df7678f45c3d507dde6bcb1faafa243", "test_directives": ["test_coverup_django__django-14534"], "coverage_files": ["django/forms/boundfield.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.8", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/boundfield\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14534", "req_install_commands": ["conda create -n testbed python=3.8 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}