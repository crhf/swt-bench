+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 809c53c077485ca48a206cee78340389cb83b7f1
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit 809c53c077485ca48a206cee78340389cb83b7f1
Merge: 9b9786518d a02787ca26
Author: Chris Smith <smichr@gmail.com>
Date:   Thu Dec 29 18:48:08 2022 -0600

    Merge pull request #24392 from evbernardes/quaternion_norm
    
    Implemented pre-defined norm, simplifying calculations with symbolic unit quaternions

+ git diff 809c53c077485ca48a206cee78340389cb83b7f1
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.12.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.12.dev0
    Uninstalling sympy-1.12.dev0:
      Successfully uninstalled sympy-1.12.dev0
  DEPRECATION: Legacy editable install of sympy==1.12.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
<stdin>:14: trailing whitespace.
    
<stdin>:18: trailing whitespace.
    
<stdin>:21: trailing whitespace.
    
<stdin>:24: trailing whitespace.
    
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-24443.py...
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-24443.py cleanly.
warning: 4 lines add whitespace errors.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/combinatorics/homomorphisms\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-24443.p
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/combinatorics/homomorphisms\\.py)']
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        25760168
hash randomization: on (PYTHONHASHSEED=715551619)

0.46 homomorphisms.py(1): import itertools
0.46 homomorphisms.py(2): from sympy.combinatorics.fp_groups import FpGroup, FpSubgroup, simplify_presentation
0.47 homomorphisms.py(3): from sympy.combinatorics.free_groups import FreeGroup
0.47 homomorphisms.py(4): from sympy.combinatorics.perm_groups import PermutationGroup
0.47 homomorphisms.py(5): from sympy.core.numbers import igcd
0.47 homomorphisms.py(6): from sympy.ntheory.factor_ import totient
0.47 homomorphisms.py(7): from sympy.core.singleton import S
0.47 homomorphisms.py(9): class GroupHomomorphism:
0.47 homomorphisms.py(9): class GroupHomomorphism:
0.47 homomorphisms.py(10):     '''
0.47 homomorphisms.py(20):     def __init__(self, domain, codomain, images):
0.47 homomorphisms.py(28):     def _invs(self):
0.47 homomorphisms.py(63):     def invert(self, g):
0.47 homomorphisms.py(109):     def kernel(self):
0.47 homomorphisms.py(118):     def _compute_kernel(self):
0.47 homomorphisms.py(141):     def image(self):
0.47 homomorphisms.py(154):     def _apply(self, elem):
0.47 homomorphisms.py(186):     def __call__(self, elem):
0.47 homomorphisms.py(189):     def is_injective(self):
0.47 homomorphisms.py(196):     def is_surjective(self):
0.47 homomorphisms.py(208):     def is_isomorphism(self):
0.47 homomorphisms.py(215):     def is_trivial(self):
0.47 homomorphisms.py(223):     def compose(self, other):
0.47 homomorphisms.py(236):     def restrict_to(self, H):
0.47 homomorphisms.py(248):     def invert_subgroup(self, H):
0.47 homomorphisms.py(269): def homomorphism(domain, codomain, gens, images=(), check=True):
0.47 homomorphisms.py(310): def _check_homomorphism(domain, codomain, images):
0.47 homomorphisms.py(370): def orbit_homomorphism(group, omega):
0.47 homomorphisms.py(390): def block_homomorphism(group, blocks):
0.47 homomorphisms.py(426): def group_isomorphism(G, H, isomorphism=True):
0.47 homomorphisms.py(542): def is_isomorphic(G, H):
sympy/polys/tests/test_coverup_sympy__sympy-24443.py[1] 
test_check_homomorphism_with_inverted_generators 0.48 homomorphisms.py(311):     if hasattr(domain, 'relators'):
0.48 homomorphisms.py(314):         gens = domain.presentation().generators
0.48 homomorphisms.py(285):     if not isinstance(domain, (PermutationGroup, FpGroup, FreeGroup)):
0.48 homomorphisms.py(287):     if not isinstance(codomain, (PermutationGroup, FpGroup, FreeGroup)):
0.48 homomorphisms.py(290):     generators = domain.generators
0.48 homomorphisms.py(291):     if not all(g in generators for g in gens):
0.48 homomorphisms.py(291):     if not all(g in generators for g in gens):
0.48 homomorphisms.py(293):     if not all(g in codomain for g in images):
0.48 homomorphisms.py(293):     if not all(g in codomain for g in images):
0.48 homomorphisms.py(296):     if images and len(images) != len(gens):
0.48 homomorphisms.py(299):     gens = list(gens)
0.48 homomorphisms.py(300):     images = list(images)
0.48 homomorphisms.py(302):     images.extend([codomain.identity]*(len(generators)-len(images)))
0.48 homomorphisms.py(303):     gens.extend([g for g in generators if g not in gens])
0.48 homomorphisms.py(303):     gens.extend([g for g in generators if g not in gens])
0.48 homomorphisms.py(304):     images = dict(zip(gens,images))
0.48 homomorphisms.py(306):     if check and not _check_homomorphism(domain, codomain, images):
0.48 homomorphisms.py(308):     return GroupHomomorphism(domain, codomain, images)
0.48 homomorphisms.py(21):         self.domain = domain
0.48 homomorphisms.py(22):         self.codomain = codomain
0.48 homomorphisms.py(23):         self.images = images
0.48 homomorphisms.py(24):         self._inverses = None
0.48 homomorphisms.py(25):         self._kernel = None
0.48 homomorphisms.py(26):         self._image = None
0.48 homomorphisms.py(187):         return self._apply(elem)
0.48 homomorphisms.py(159):         if elem not in self.domain:
0.48 homomorphisms.py(160):             if isinstance(elem, (list, tuple)):
0.48 homomorphisms.py(161):                 return [self._apply(e) for e in elem]
0.48 homomorphisms.py(161):                 return [self._apply(e) for e in elem]
0.48 homomorphisms.py(285):     if not isinstance(domain, (PermutationGroup, FpGroup, FreeGroup)):
0.48 homomorphisms.py(287):     if not isinstance(codomain, (PermutationGroup, FpGroup, FreeGroup)):
0.48 homomorphisms.py(290):     generators = domain.generators
0.48 homomorphisms.py(291):     if not all(g in generators for g in gens):
0.48 homomorphisms.py(291):     if not all(g in generators for g in gens):
0.48 homomorphisms.py(291):     if not all(g in generators for g in gens):
0.48 homomorphisms.py(291):     if not all(g in generators for g in gens):
0.48 homomorphisms.py(293):     if not all(g in codomain for g in images):
0.48 homomorphisms.py(293):     if not all(g in codomain for g in images):
0.48 homomorphisms.py(293):     if not all(g in codomain for g in images):
0.48 homomorphisms.py(293):     if not all(g in codomain for g in images):
0.48 homomorphisms.py(296):     if images and len(images) != len(gens):
0.48 homomorphisms.py(299):     gens = list(gens)
0.48 homomorphisms.py(300):     images = list(images)
0.48 homomorphisms.py(302):     images.extend([codomain.identity]*(len(generators)-len(images)))
0.48 homomorphisms.py(303):     gens.extend([g for g in generators if g not in gens])
0.48 homomorphisms.py(303):     gens.extend([g for g in generators if g not in gens])
0.48 homomorphisms.py(303):     gens.extend([g for g in generators if g not in gens])
0.48 homomorphisms.py(303):     gens.extend([g for g in generators if g not in gens])
0.48 homomorphisms.py(304):     images = dict(zip(gens,images))
0.48 homomorphisms.py(306):     if check and not _check_homomorphism(domain, codomain, images):
0.48 homomorphisms.py(311):     if hasattr(domain, 'relators'):
0.48 homomorphisms.py(312):         rels = domain.relators
0.48 homomorphisms.py(316):     identity = codomain.identity
0.48 homomorphisms.py(318):     def _image(r):
0.48 homomorphisms.py(348):     for r in rels:
0.48 homomorphisms.py(368):     return True
0.48 homomorphisms.py(308):     return GroupHomomorphism(domain, codomain, images)
0.48 homomorphisms.py(21):         self.domain = domain
0.48 homomorphisms.py(22):         self.codomain = codomain
0.48 homomorphisms.py(23):         self.images = images
0.48 homomorphisms.py(24):         self._inverses = None
0.48 homomorphisms.py(25):         self._kernel = None
0.48 homomorphisms.py(26):         self._image = None
0.48 homomorphisms.py(187):         return self._apply(elem)
0.48 homomorphisms.py(159):         if elem not in self.domain:
0.48 homomorphisms.py(163):         if elem.is_identity:
0.48 homomorphisms.py(166):             images = self.images
0.48 homomorphisms.py(167):             value = self.codomain.identity
0.48 homomorphisms.py(168):             if isinstance(self.domain, PermutationGroup):
0.48 homomorphisms.py(176):                 i = 0
0.48 homomorphisms.py(177):                 for _, p in elem.array_form:
0.48 homomorphisms.py(178):                     if p < 0:
0.48 homomorphisms.py(179):                         g = elem[i]**-1
0.48 homomorphisms.py(182):                     value = value*images[g]**p
0.48 homomorphisms.py(183):                     i += abs(p)
0.48 homomorphisms.py(177):                 for _, p in elem.array_form:
0.48 homomorphisms.py(184):         return value
0.48 homomorphisms.py(187):         return self._apply(elem)
0.48 homomorphisms.py(159):         if elem not in self.domain:
0.48 homomorphisms.py(163):         if elem.is_identity:
0.48 homomorphisms.py(166):             images = self.images
0.48 homomorphisms.py(167):             value = self.codomain.identity
0.48 homomorphisms.py(168):             if isinstance(self.domain, PermutationGroup):
0.48 homomorphisms.py(176):                 i = 0
0.48 homomorphisms.py(177):                 for _, p in elem.array_form:
0.48 homomorphisms.py(178):                     if p < 0:
0.48 homomorphisms.py(181):                         g = elem[i]
0.48 homomorphisms.py(182):                     value = value*images[g]**p
0.48 homomorphisms.py(183):                     i += abs(p)
0.48 homomorphisms.py(177):                 for _, p in elem.array_form:
0.48 homomorphisms.py(184):         return value
0.49 homomorphisms.py(187):         return self._apply(elem)
0.49 homomorphisms.py(159):         if elem not in self.domain:
0.49 homomorphisms.py(163):         if elem.is_identity:
0.49 homomorphisms.py(166):             images = self.images
0.49 homomorphisms.py(167):             value = self.codomain.identity
0.49 homomorphisms.py(168):             if isinstance(self.domain, PermutationGroup):
0.49 homomorphisms.py(176):                 i = 0
0.49 homomorphisms.py(177):                 for _, p in elem.array_form:
0.49 homomorphisms.py(178):                     if p < 0:
0.49 homomorphisms.py(181):                         g = elem[i]
0.49 homomorphisms.py(182):                     value = value*images[g]**p
0.49 homomorphisms.py(183):                     i += abs(p)
0.49 homomorphisms.py(177):                 for _, p in elem.array_form:
0.49 homomorphisms.py(178):                     if p < 0:
0.49 homomorphisms.py(179):                         g = elem[i]**-1
0.49 homomorphisms.py(182):                     value = value*images[g]**p
0.49 homomorphisms.py(183):                     i += abs(p)
0.49 homomorphisms.py(177):                 for _, p in elem.array_form:
0.49 homomorphisms.py(178):                     if p < 0:
0.49 homomorphisms.py(179):                         g = elem[i]**-1
0.49 homomorphisms.py(182):                     value = value*images[g]**p
0.49 homomorphisms.py(183):                     i += abs(p)
0.49 homomorphisms.py(177):                 for _, p in elem.array_form:
0.49 homomorphisms.py(184):         return value
0.53 homomorphisms.py(187):         return self._apply(elem)
0.53 homomorphisms.py(159):         if elem not in self.domain:
0.53 homomorphisms.py(163):         if elem.is_identity:
0.53 homomorphisms.py(166):             images = self.images
0.53 homomorphisms.py(167):             value = self.codomain.identity
0.53 homomorphisms.py(168):             if isinstance(self.domain, PermutationGroup):
0.53 homomorphisms.py(176):                 i = 0
0.53 homomorphisms.py(177):                 for _, p in elem.array_form:
0.53 homomorphisms.py(178):                     if p < 0:
0.53 homomorphisms.py(179):                         g = elem[i]**-1
0.53 homomorphisms.py(182):                     value = value*images[g]**p
0.53 homomorphisms.py(183):                     i += abs(p)
0.53 homomorphisms.py(177):                 for _, p in elem.array_form:
0.53 homomorphisms.py(178):                     if p < 0:
0.53 homomorphisms.py(179):                         g = elem[i]**-1
0.53 homomorphisms.py(182):                     value = value*images[g]**p
0.53 homomorphisms.py(183):                     i += abs(p)
0.53 homomorphisms.py(177):                 for _, p in elem.array_form:
0.53 homomorphisms.py(178):                     if p < 0:
0.53 homomorphisms.py(181):                         g = elem[i]
0.53 homomorphisms.py(182):                     value = value*images[g]**p
0.53 homomorphisms.py(183):                     i += abs(p)
0.53 homomorphisms.py(177):                 for _, p in elem.array_form:
0.53 homomorphisms.py(184):         return value
0.62 homomorphisms.py(187):         return self._apply(elem)
0.62 homomorphisms.py(159):         if elem not in self.domain:
0.62 homomorphisms.py(163):         if elem.is_identity:
0.62 homomorphisms.py(166):             images = self.images
0.62 homomorphisms.py(167):             value = self.codomain.identity
0.62 homomorphisms.py(168):             if isinstance(self.domain, PermutationGroup):
0.62 homomorphisms.py(176):                 i = 0
0.62 homomorphisms.py(177):                 for _, p in elem.array_form:
0.62 homomorphisms.py(178):                     if p < 0:
0.62 homomorphisms.py(181):                         g = elem[i]
0.62 homomorphisms.py(182):                     value = value*images[g]**p
0.62 homomorphisms.py(183):                     i += abs(p)
0.62 homomorphisms.py(177):                 for _, p in elem.array_form:
0.62 homomorphisms.py(178):                     if p < 0:
0.62 homomorphisms.py(181):                         g = elem[i]
0.62 homomorphisms.py(182):                     value = value*images[g]**p
0.62 homomorphisms.py(183):                     i += abs(p)
0.62 homomorphisms.py(177):                 for _, p in elem.array_form:
0.62 homomorphisms.py(178):                     if p < 0:
0.62 homomorphisms.py(179):                         g = elem[i]**-1
0.62 homomorphisms.py(182):                     value = value*images[g]**p
0.62 homomorphisms.py(183):                     i += abs(p)
0.62 homomorphisms.py(177):                 for _, p in elem.array_form:
0.62 homomorphisms.py(178):                     if p < 0:
0.62 homomorphisms.py(181):                         g = elem[i]
0.62 homomorphisms.py(182):                     value = value*images[g]**p
0.62 homomorphisms.py(183):                     i += abs(p)
0.62 homomorphisms.py(177):                 for _, p in elem.array_form:
0.62 homomorphisms.py(184):         return value
0.91 homomorphisms.py(315):         rels = domain.presentation().relators
0.91 homomorphisms.py(316):     identity = codomain.identity
0.91 homomorphisms.py(318):     def _image(r):
0.91 homomorphisms.py(348):     for r in rels:
0.91 homomorphisms.py(349):         if isinstance(codomain, FpGroup):
0.91 homomorphisms.py(365):             s = _image(r).is_identity
0.91 homomorphisms.py(319):         if r.is_identity:
0.91 homomorphisms.py(322):             w = identity
0.91 homomorphisms.py(323):             r_arr = r.array_form
0.91 homomorphisms.py(324):             i = 0
0.91 homomorphisms.py(325):             j = 0
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(335):                 power = r_arr[j][1]
0.91 homomorphisms.py(336):                 if isinstance(domain, PermutationGroup) and r[i] in gens:
0.91 homomorphisms.py(337):                     s = domain.generators[gens.index(r[i])]
0.91 homomorphisms.py(340):                 if s in images:
0.91 homomorphisms.py(341):                     w = w*images[s]**power
0.91 homomorphisms.py(344):                 i += abs(power)
0.91 homomorphisms.py(345):                 j += 1
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(346):             return w
0.91 homomorphisms.py(366):         if not s:
0.91 homomorphisms.py(348):     for r in rels:
0.91 homomorphisms.py(349):         if isinstance(codomain, FpGroup):
0.91 homomorphisms.py(365):             s = _image(r).is_identity
0.91 homomorphisms.py(319):         if r.is_identity:
0.91 homomorphisms.py(322):             w = identity
0.91 homomorphisms.py(323):             r_arr = r.array_form
0.91 homomorphisms.py(324):             i = 0
0.91 homomorphisms.py(325):             j = 0
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(335):                 power = r_arr[j][1]
0.91 homomorphisms.py(336):                 if isinstance(domain, PermutationGroup) and r[i] in gens:
0.91 homomorphisms.py(337):                     s = domain.generators[gens.index(r[i])]
0.91 homomorphisms.py(340):                 if s in images:
0.91 homomorphisms.py(341):                     w = w*images[s]**power
0.91 homomorphisms.py(344):                 i += abs(power)
0.91 homomorphisms.py(345):                 j += 1
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(346):             return w
0.91 homomorphisms.py(366):         if not s:
0.91 homomorphisms.py(348):     for r in rels:
0.91 homomorphisms.py(349):         if isinstance(codomain, FpGroup):
0.91 homomorphisms.py(365):             s = _image(r).is_identity
0.91 homomorphisms.py(319):         if r.is_identity:
0.91 homomorphisms.py(322):             w = identity
0.91 homomorphisms.py(323):             r_arr = r.array_form
0.91 homomorphisms.py(324):             i = 0
0.91 homomorphisms.py(325):             j = 0
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(335):                 power = r_arr[j][1]
0.91 homomorphisms.py(336):                 if isinstance(domain, PermutationGroup) and r[i] in gens:
0.91 homomorphisms.py(337):                     s = domain.generators[gens.index(r[i])]
0.91 homomorphisms.py(340):                 if s in images:
0.91 homomorphisms.py(341):                     w = w*images[s]**power
0.91 homomorphisms.py(344):                 i += abs(power)
0.91 homomorphisms.py(345):                 j += 1
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(335):                 power = r_arr[j][1]
0.91 homomorphisms.py(336):                 if isinstance(domain, PermutationGroup) and r[i] in gens:
0.91 homomorphisms.py(337):                     s = domain.generators[gens.index(r[i])]
0.91 homomorphisms.py(340):                 if s in images:
0.91 homomorphisms.py(341):                     w = w*images[s]**power
0.91 homomorphisms.py(344):                 i += abs(power)
0.91 homomorphisms.py(345):                 j += 1
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(335):                 power = r_arr[j][1]
0.91 homomorphisms.py(336):                 if isinstance(domain, PermutationGroup) and r[i] in gens:
0.91 homomorphisms.py(339):                     s = r[i]
0.91 homomorphisms.py(340):                 if s in images:
0.91 homomorphisms.py(342):                 elif s**-1 in images:
0.91 homomorphisms.py(344):                 i += abs(power)
0.91 homomorphisms.py(345):                 j += 1
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(335):                 power = r_arr[j][1]
0.91 homomorphisms.py(336):                 if isinstance(domain, PermutationGroup) and r[i] in gens:
0.91 homomorphisms.py(337):                     s = domain.generators[gens.index(r[i])]
0.91 homomorphisms.py(340):                 if s in images:
0.91 homomorphisms.py(341):                     w = w*images[s]**power
0.91 homomorphisms.py(344):                 i += abs(power)
0.91 homomorphisms.py(345):                 j += 1
0.91 homomorphisms.py(334):             while i < len(r):
0.91 homomorphisms.py(346):             return w
0.91 homomorphisms.py(366):         if not s:
0.91 homomorphisms.py(367):             return False
F                        [FAIL]


________________________________________________________________________________
 sympy/polys/tests/test_coverup_sympy__sympy-24443.py:test_check_homomorphism_with_inverted_generators 
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_coverup_sympy__sympy-24443.py", line 20, in test_check_homomorphism_with_inverted_generators
    assert _check_homomorphism(D3, D3, images) is True
AssertionError

============= tests finished: 0 passed, 1 failed, in 0.55 seconds ==============
DO *NOT* COMMIT!
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/combinatorics/homomorphisms\\.py)']
+ cat coverage.cover
{"/testbed/sympy/combinatorics/homomorphisms.py": {"1": 1, "2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "7": 1, "9": 2, "269": 1, "310": 1, "370": 1, "390": 1, "426": 1, "542": 1, "20": 1, "28": 1, "63": 1, "109": 1, "118": 1, "141": 1, "154": 1, "186": 1, "189": 1, "196": 1, "208": 1, "215": 1, "223": 1, "236": 1, "248": 1, "21": 2, "22": 2, "23": 2, "24": 2, "25": 2, "26": 2, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "53": 0, "54": 0, "55": 0, "56": 0, "58": 0, "59": 0, "61": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "90": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "104": 0, "105": 0, "106": 0, "107": 0, "114": 0, "115": 0, "116": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "138": 0, "139": 0, "146": 0, "147": 0, "148": 0, "149": 0, "151": 0, "152": 0, "159": 6, "160": 1, "161": 2, "162": 0, "163": 5, "164": 0, "166": 5, "167": 5, "168": 5, "169": 0, "170": 0, "171": 0, "172": 0, "174": 0, "176": 5, "177": 17, "178": 12, "179": 6, "181": 6, "182": 12, "183": 12, "184": 5, "187": 6, "194": 0, "201": 0, "202": 0, "203": 0, "204": 0, "206": 0, "213": 0, "221": 0, "230": 0, "231": 0, "233": 0, "234": 0, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "254": 0, "255": 0, "256": 0, "257": 0, "258": 0, "259": 0, "260": 0, "261": 0, "262": 0, "263": 0, "264": 0, "265": 0, "266": 0, "267": 0, "285": 2, "286": 0, "287": 2, "288": 0, "290": 2, "291": 6, "292": 0, "293": 6, "294": 0, "296": 2, "297": 0, "299": 2, "300": 2, "302": 2, "303": 6, "304": 2, "306": 2, "307": 0, "308": 2, "311": 2, "312": 1, "314": 1, "315": 1, "316": 2, "318": 2, "348": 4, "349": 3, "350": 0, "351": 0, "355": 0, "356": 0, "357": 0, "358": 0, "365": 3, "366": 3, "367": 1, "368": 1, "319": 3, "320": 0, "322": 3, "323": 3, "324": 3, "325": 3, "334": 9, "335": 6, "336": 6, "337": 5, "339": 1, "340": 6, "341": 5, "342": 1, "343": 0, "344": 6, "345": 6, "346": 3, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "387": 0, "388": 0, "399": 0, "400": 0, "402": 0, "408": 0, "409": 0, "410": 0, "411": 0, "412": 0, "413": 0, "414": 0, "415": 0, "416": 0, "417": 0, "419": 0, "421": 0, "422": 0, "423": 0, "424": 0, "482": 0, "483": 0, "484": 0, "485": 0, "487": 0, "488": 0, "489": 0, "492": 0, "493": 0, "494": 0, "495": 0, "498": 0, "499": 0, "500": 0, "502": 0, "503": 0, "505": 0, "506": 0, "507": 0, "508": 0, "510": 0, "511": 0, "512": 0, "513": 0, "515": 0, "518": 0, "519": 0, "520": 0, "523": 0, "524": 0, "525": 0, "526": 0, "527": 0, "528": 0, "529": 0, "530": 0, "531": 0, "532": 0, "534": 0, "535": 0, "536": 0, "538": 0, "539": 0, "540": 0, "560": 0}}
+ git checkout 809c53c077485ca48a206cee78340389cb83b7f1
Note: switching to '809c53c077485ca48a206cee78340389cb83b7f1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 809c53c077 Merge pull request #24392 from evbernardes/quaternion_norm
+ git apply /root/pre_state.patch
error: unrecognized input
