{"instance_id": "django__django-11551", "repo": "django/django", "version": "3.0", "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27", "patch_list": ["diff --git a/dev/null b/tests/test_coverup_django__django-11551.py\nnew file mode 100644\nindex e69de29..22c37a5 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11551.py\n@@ -0,0 +1,37 @@\n+from django.test import SimpleTestCase\n+from django.contrib import admin\n+from django.core import checks\n+from django.db import models\n+\n+# Mock PositionField for testing purposes\n+class MockPositionField(models.Field):\n+    def __init__(self, *args, **kwargs):\n+        super().__init__(*args, **kwargs)\n+\n+class Thing(models.Model):\n+    number = models.IntegerField(default=0)\n+    order = MockPositionField()\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+class ThingAdmin(admin.ModelAdmin):\n+    list_display = ['number', 'order']\n+\n+class ThingAdminCheckTests(SimpleTestCase):\n+    def test_list_display_with_mock_position_field(self):\n+        \"\"\"\n+        Test that a ModelAdmin with a MockPositionField in list_display does not raise admin.E108.\n+        This test should fail when the bug is present and pass when the bug is fixed.\n+        \"\"\"\n+        # Register the model with the admin site\n+        admin.site.register(Thing, ThingAdmin)\n+\n+        # Run admin checks\n+        errors = checks.run_checks()\n+\n+        # Assert that admin.E108 is raised\n+        self.assertTrue(\n+            any(error.id == 'admin.E108' for error in errors),\n+            \"admin.E108 error should be raised due to MockPositionField in list_display\"\n+        )\n"], "arch": "x86_64", "base_commit": "7991111af12056ec9a856f35935d273526338c1f", "test_directives": ["test_coverup_django__django-11551"], "coverage_files": ["django/contrib/admin/checks.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_pre__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/admin/checks\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11551", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref ~= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow != 5.4.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}