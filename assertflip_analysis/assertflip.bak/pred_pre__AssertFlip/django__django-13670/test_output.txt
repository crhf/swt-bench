+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD c448e614c60cc97c6194c62052363f4f501e0953
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit c448e614c60cc97c6194c62052363f4f501e0953
Author: Hasan Ramezani <hasan.r67@gmail.com>
Date:   Thu Nov 12 10:06:04 2020 +0100

    Fixed #32187 -- Removed unnecessary select_related in queries doc.

diff --git a/docs/topics/db/queries.txt b/docs/topics/db/queries.txt
index 637975bb2e..d29882e342 100644
--- a/docs/topics/db/queries.txt
+++ b/docs/topics/db/queries.txt
@@ -1283,7 +1283,7 @@ table. Example::
     >>> b = Blog.objects.get(pk=1)
 
     # Update all the headlines belonging to this Blog.
-    >>> Entry.objects.select_related().filter(blog=b).update(headline='Everything is the same')
+    >>> Entry.objects.filter(blog=b).update(headline='Everything is the same')
 
 Be aware that the ``update()`` method is converted directly to an SQL
 statement. It is a bulk operation for direct updates. It doesn't run any
+ git diff c448e614c60cc97c6194c62052363f4f501e0953
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2.10 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (2025.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2.10->Django==3.2) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.2
    Uninstalling Django-3.2:
      Successfully uninstalled Django-3.2
  Running setup.py develop for Django
Successfully installed Django-3.2
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git apply -v -
<stdin>:15: trailing whitespace.
        
<stdin>:18: trailing whitespace.
        
Checking patch tests/test_coverup_django__django-13670.py...
Applied patch tests/test_coverup_django__django-13670.py cleanly.
warning: 2 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/utils/dateformat\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-13670
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/utils/dateformat\\.py)']
0.19 dateformat.py(12): """
0.19 dateformat.py(13): import calendar
0.19 dateformat.py(14): import datetime
0.19 dateformat.py(15): import time
0.19 dateformat.py(16): from email.utils import format_datetime as format_datetime_rfc5322
0.19 dateformat.py(18): from django.utils.dates import (
0.19 dateformat.py(21): from django.utils.regex_helper import _lazy_re_compile
0.19 dateformat.py(22): from django.utils.timezone import (
0.19 dateformat.py(25): from django.utils.translation import gettext as _
0.19 dateformat.py(27): re_formatchars = _lazy_re_compile(r'(?<!\\)([aAbcdDeEfFgGhHiIjlLmMnNoOPrsStTUuwWyYzZ])')
0.19 dateformat.py(28): re_escaped = _lazy_re_compile(r'\\(.)')
0.19 dateformat.py(31): class Formatter:
0.19 dateformat.py(31): class Formatter:
0.19 dateformat.py(32):     def format(self, formatstr):
0.19 dateformat.py(47): class TimeFormat(Formatter):
0.19 dateformat.py(47): class TimeFormat(Formatter):
0.19 dateformat.py(49):     def __init__(self, obj):
0.19 dateformat.py(62):     def a(self):
0.19 dateformat.py(68):     def A(self):
0.19 dateformat.py(74):     def e(self):
0.19 dateformat.py(90):     def f(self):
0.19 dateformat.py(101):     def g(self):
0.19 dateformat.py(109):     def G(self):
0.19 dateformat.py(113):     def h(self):
0.19 dateformat.py(117):     def H(self):
0.19 dateformat.py(121):     def i(self):
0.19 dateformat.py(125):     def O(self):  # NOQA: E743, E741
0.19 dateformat.py(141):     def P(self):
0.19 dateformat.py(154):     def s(self):
0.19 dateformat.py(158):     def T(self):
0.19 dateformat.py(179):     def u(self):
0.19 dateformat.py(183):     def Z(self):
0.19 dateformat.py(209): class DateFormat(TimeFormat):
0.19 dateformat.py(209): class DateFormat(TimeFormat):
0.19 dateformat.py(210):     def b(self):
0.19 dateformat.py(214):     def c(self):
0.19 dateformat.py(221):     def d(self):
0.19 dateformat.py(225):     def D(self):
0.19 dateformat.py(229):     def E(self):
0.19 dateformat.py(233):     def F(self):
0.19 dateformat.py(237):     def I(self):  # NOQA: E743, E741
0.19 dateformat.py(250):     def j(self):
0.19 dateformat.py(254):     def l(self):  # NOQA: E743, E741
0.19 dateformat.py(258):     def L(self):
0.19 dateformat.py(262):     def m(self):
0.19 dateformat.py(266):     def M(self):
0.19 dateformat.py(270):     def n(self):
0.19 dateformat.py(274):     def N(self):
0.19 dateformat.py(278):     def o(self):
0.19 dateformat.py(282):     def r(self):
0.19 dateformat.py(295):     def S(self):
0.19 dateformat.py(308):     def t(self):
0.19 dateformat.py(312):     def U(self):
0.19 dateformat.py(319):     def w(self):
0.19 dateformat.py(323):     def W(self):
0.19 dateformat.py(327):     def y(self):
0.19 dateformat.py(331):     def Y(self):
0.19 dateformat.py(335):     def z(self):
0.19 dateformat.py(340): def format(value, format_string):
0.19 dateformat.py(346): def time_format(value, format_string):
Testing against Django installed in '/testbed/django'
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
test_year_format_bug (test_coverup_django__django-13670.DateFormatYearTest) ... FAIL

======================================================================
FAIL: test_year_format_bug (test_coverup_django__django-13670.DateFormatYearTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./tests/test_coverup_django__django-13670.py", line 14, in test_year_format_bug
    self.assertEqual(formatted_year, '23')
AssertionError: '3' != '23'
- 3
+ 23
? +


----------------------------------------------------------------------
Ran 1 test in 0.027s

FAILED (failures=1)
0.63 dateformat.py(342):     df = DateFormat(value)
0.63 dateformat.py(50):         self.data = obj
0.63 dateformat.py(51):         self.timezone = None
0.63 dateformat.py(56):         if isinstance(obj, datetime.datetime):
0.63 dateformat.py(57):             if is_naive(obj):
0.63 dateformat.py(58):                 self.timezone = get_default_timezone()
0.65 dateformat.py(343):     return df.format(format_string)
0.65 dateformat.py(33):         pieces = []
0.65 dateformat.py(34):         for i, piece in enumerate(re_formatchars.split(str(formatstr))):
0.65 dateformat.py(35):             if i % 2:
0.65 dateformat.py(42):             elif piece:
0.65 dateformat.py(34):         for i, piece in enumerate(re_formatchars.split(str(formatstr))):
0.65 dateformat.py(35):             if i % 2:
0.65 dateformat.py(36):                 if type(self.data) is datetime.date and hasattr(TimeFormat, piece):
0.65 dateformat.py(41):                 pieces.append(str(getattr(self, piece)()))
0.65 dateformat.py(329):         return str(self.data.year)[2:]
0.65 dateformat.py(34):         for i, piece in enumerate(re_formatchars.split(str(formatstr))):
0.65 dateformat.py(35):             if i % 2:
0.65 dateformat.py(42):             elif piece:
0.65 dateformat.py(34):         for i, piece in enumerate(re_formatchars.split(str(formatstr))):
0.65 dateformat.py(44):         return ''.join(pieces)
+ cat coverage.cover
{"/testbed/django/utils/dateformat.py": {"13": 1, "14": 1, "15": 1, "16": 1, "18": 1, "21": 1, "22": 1, "25": 1, "27": 1, "28": 1, "31": 2, "47": 2, "209": 2, "340": 1, "346": 1, "32": 1, "33": 1, "34": 4, "35": 3, "36": 1, "37": 0, "38": 0, "39": 0, "41": 1, "42": 2, "43": 0, "44": 1, "49": 1, "62": 1, "68": 1, "74": 1, "90": 1, "101": 1, "109": 1, "113": 1, "117": 1, "121": 1, "125": 1, "141": 1, "154": 1, "158": 1, "179": 1, "183": 1, "50": 1, "51": 1, "56": 1, "57": 1, "58": 1, "60": 0, "64": 0, "65": 0, "66": 0, "70": 0, "71": 0, "72": 0, "80": 0, "81": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "97": 0, "98": 0, "99": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "111": 0, "115": 0, "119": 0, "123": 0, "131": 0, "132": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "156": 0, "164": 0, "165": 0, "167": 0, "168": 0, "169": 0, "170": 0, "174": 0, "175": 0, "176": 0, "177": 0, "181": 0, "191": 0, "192": 0, "194": 0, "195": 0, "196": 0, "200": 0, "206": 0, "210": 1, "214": 1, "221": 1, "225": 1, "229": 1, "233": 1, "237": 1, "250": 1, "254": 1, "258": 1, "262": 1, "266": 1, "270": 1, "274": 1, "278": 1, "282": 1, "295": 1, "308": 1, "312": 1, "319": 1, "323": 1, "327": 1, "331": 1, "335": 1, "212": 0, "219": 0, "223": 0, "227": 0, "231": 0, "235": 0, "239": 0, "240": 0, "241": 0, "243": 0, "244": 0, "248": 0, "252": 0, "256": 0, "260": 0, "264": 0, "268": 0, "272": 0, "276": 0, "280": 0, "284": 0, "285": 0, "286": 0, "289": 0, "290": 0, "292": 0, "293": 0, "297": 0, "298": 0, "299": 0, "300": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "310": 0, "314": 0, "315": 0, "317": 0, "321": 0, "325": 0, "329": 1, "333": 0, "337": 0, "342": 1, "343": 1, "348": 0, "349": 0}}
+ git checkout c448e614c60cc97c6194c62052363f4f501e0953
Note: switching to 'c448e614c60cc97c6194c62052363f4f501e0953'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at c448e614c6 Fixed #32187 -- Removed unnecessary select_related in queries doc.
+ git apply /root/pre_state.patch
error: unrecognized input
