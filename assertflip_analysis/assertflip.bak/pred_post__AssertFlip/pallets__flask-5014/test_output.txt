+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 7ee9ceb71e868944a46e1ff00b506772a53a4f1d
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 7ee9ceb71e868944a46e1ff00b506772a53a4f1d
Merge: 2f67e0fe cac56a2b
Author: David Lord <davidism@gmail.com>
Date:   Sat Mar 11 08:23:08 2023 -0800

    Merge branch '2.2.x'

diff --cc CHANGES.rst
index 8159ea45,a8762477..498d5e51
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@@ -1,42 -1,11 +1,50 @@@
 +Version 2.3.0
 +-------------
 +
 +Unreleased
 +
 +-   Remove previously deprecated code. :pr:`4995`
 +
 +    -   The ``push`` and ``pop`` methods of the deprecated ``_app_ctx_stack`` and
 +        ``_request_ctx_stack`` objects are removed. ``top`` still exists to give
 +        extensions more time to update, but it will be removed.
 +    -   The ``FLASK_ENV`` environment variable, ``ENV`` config key, and ``app.env``
 +        property are removed.
 +    -   The ``session_cookie_name``, ``send_file_max_age_default``, ``use_x_sendfile``,
 +        ``propagate_exceptions``, and ``templates_auto_reload`` properties on ``app``
 +        are removed.
 +    -   The ``JSON_AS_ASCII``, ``JSON_SORT_KEYS``, ``JSONIFY_MIMETYPE``, and
 +        ``JSONIFY_PRETTYPRINT_REGULAR`` config keys are removed.
 +    -   The ``app.before_first_request`` and ``bp.before_app_first_request`` decorators
 +        are removed.
 +    -   ``json_encoder`` and ``json_decoder`` attributes on app and blueprint, and the
 +        corresponding ``json.JSONEncoder`` and ``JSONDecoder`` classes, are removed.
 +    -   The ``json.htmlsafe_dumps`` and ``htmlsafe_dump`` functions are removed.
 +    -   Calling setup methods on blueprints after registration is an error instead of a
 +        warning. :pr:`4997`
 +
 +-   Importing ``escape`` and ``Markup`` from ``flask`` is deprecated. Import them
 +    directly from ``markupsafe`` instead. :pr:`4996`
 +-   The ``app.got_first_request`` property is deprecated. :pr:`4997`
 +-   The ``locked_cached_property`` decorator is deprecated. Use a lock inside the
 +    decorated function if locking is needed. :issue:`4993`
 +-   Remove uses of locks that could cause requests to block each other very briefly.
 +    :issue:`4993`
 +-   Use modern packaging metadata with ``pyproject.toml`` instead of ``setup.cfg``.
 +    :pr:`4947`
 +-   Ensure subdomains are applied with nested blueprints. :issue:`4834`
 +-   ``config.from_file`` can use ``text=False`` to indicate that the parser wants a
 +    binary file instead. :issue:`4989`
 +
 +
+ Version 2.2.4
+ -------------
+ 
+ Unreleased
+ 
+ -   Update for compatibility with Werkzeug 2.3.
+ 
+ 
  Version 2.2.3
  -------------
  
diff --cc src/flask/app.py
index 0070de89,d904d6ba..3bbe1bb2
--- a/src/flask/app.py
+++ b/src/flask/app.py
@@@ -8,7 -9,9 +8,8 @@@ import weakre
  from collections.abc import Iterator as _abc_Iterator
  from datetime import timedelta
  from itertools import chain
 -from threading import Lock
  from types import TracebackType
+ from urllib.parse import quote as _url_quote
  
  import click
  from werkzeug.datastructures import Headers
@@@ -25,8 -28,6 +26,7 @@@ from werkzeug.routing import RequestRed
  from werkzeug.routing import RoutingException
  from werkzeug.routing import Rule
  from werkzeug.serving import is_running_from_reloader
- from werkzeug.urls import url_quote
 +from werkzeug.utils import cached_property
  from werkzeug.utils import redirect as _wz_redirect
  from werkzeug.wrappers import Response as BaseResponse
  
+ git diff 7ee9ceb71e868944a46e1ff00b506772a53a4f1d
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: Werkzeug>=2.2.2 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Flask==2.3.0.dev0) (2.3.7)
Requirement already satisfied: Jinja2>=3.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Flask==2.3.0.dev0) (3.1.2)
Requirement already satisfied: itsdangerous>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Flask==2.3.0.dev0) (2.1.2)
Requirement already satisfied: click>=8.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Flask==2.3.0.dev0) (8.1.3)
Requirement already satisfied: MarkupSafe>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Jinja2>=3.0->Flask==2.3.0.dev0) (2.1.1)
Building wheels for collected packages: Flask
  Building editable for Flask (pyproject.toml): started
  Building editable for Flask (pyproject.toml): finished with status 'done'
  Created wheel for Flask: filename=flask-2.3.0.dev0-0.editable-py3-none-any.whl size=3962 sha256=6865742e40c2aac07a09c8059ecf9415d5bb3e3e0c514b548bb3d34b8298d245
  Stored in directory: /tmp/pip-ephem-wheel-cache-15n9f4zw/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built Flask
Installing collected packages: Flask
  Attempting uninstall: Flask
    Found existing installation: Flask 2.3.0.dev0
    Uninstalling Flask-2.3.0.dev0:
      Successfully uninstalled Flask-2.3.0.dev0
Successfully installed Flask-2.3.0.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch src/flask/blueprints.py...
Applied patch src/flask/blueprints.py cleanly.
+ git apply -v -
Checking patch tests/test_coverup_pallets__flask-5014.py...
Applied patch tests/test_coverup_pallets__flask-5014.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(src/flask/blueprints\.py)' -m pytest --no-header -rA -p no:cacheprovider tests/test_coverup_pallets__flask-5014.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(src/flask/blueprints\\.py)']
============================= test session starts ==============================
collected 1 item

tests/test_coverup_pallets__flask-5014.py F                              [100%]

=================================== FAILURES ===================================
__________________________ test_blueprint_empty_name ___________________________

    def test_blueprint_empty_name():
        # Attempt to create a Blueprint with an empty name
        with pytest.raises(ValueError, match="Blueprint name must not be empty"):
>           Blueprint("", __name__)

tests/test_coverup_pallets__flask-5014.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'Blueprint' object has no attribute 'name'") raised in repr()] Blueprint object at 0x7f6127da6c90>
name = '', import_name = 'test_coverup_pallets__flask-5014'
static_folder = None, static_url_path = None, template_folder = None
url_prefix = None, subdomain = None, url_defaults = None, root_path = None
cli_group = <object object at 0x7f61299254b0>

    def __init__(
        self,
        name: str,
        import_name: str,
        static_folder: t.Optional[t.Union[str, os.PathLike]] = None,
        static_url_path: t.Optional[str] = None,
        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,
        url_prefix: t.Optional[str] = None,
        subdomain: t.Optional[str] = None,
        url_defaults: t.Optional[dict] = None,
        root_path: t.Optional[str] = None,
        cli_group: t.Optional[str] = _sentinel,  # type: ignore
    ):
        super().__init__(
            import_name=import_name,
            static_folder=static_folder,
            static_url_path=static_url_path,
            template_folder=template_folder,
            root_path=root_path,
        )
    
        if not name:
>           raise ValueError("'name' may not be empty.")
E           ValueError: 'name' may not be empty.

src/flask/blueprints.py:194: ValueError

During handling of the above exception, another exception occurred:

    def test_blueprint_empty_name():
        # Attempt to create a Blueprint with an empty name
>       with pytest.raises(ValueError, match="Blueprint name must not be empty"):
E       AssertionError: Regex pattern did not match.
E        Regex: 'Blueprint name must not be empty'
E        Input: "'name' may not be empty."

tests/test_coverup_pallets__flask-5014.py:6: AssertionError
----------------------------- Captured stdout call -----------------------------
0.24 blueprints.py(185):         super().__init__(
0.24 blueprints.py(186):             import_name=import_name,
0.24 blueprints.py(187):             static_folder=static_folder,
0.24 blueprints.py(188):             static_url_path=static_url_path,
0.24 blueprints.py(189):             template_folder=template_folder,
0.24 blueprints.py(190):             root_path=root_path,
0.24 blueprints.py(185):         super().__init__(
0.24 blueprints.py(193):         if not name:
0.24 blueprints.py(194):             raise ValueError("'name' may not be empty.")
=========================== short test summary info ============================
FAILED tests/test_coverup_pallets__flask-5014.py::test_blueprint_empty_name
============================== 1 failed in 0.05s ===============================
+ cat coverage.cover
{"/testbed/src/flask/blueprints.py": {"0": 0, "1": 1, "2": 1, "3": 1, "4": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "12": 1, "13": 0, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 2, "21": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 2, "28": 1, "32": 2, "117": 2, "39": 6, "41": 1, "42": 1, "43": 1, "44": 1, "45": 1, "88": 2, "89": 2, "85": 6, "87": 1, "90": 1, "91": 1, "47": 0, "50": 0, "54": 0, "60": 0, "62": 0, "63": 0, "64": 0, "68": 0, "70": 0, "71": 0, "72": 0, "75": 0, "77": 0, "78": 0, "82": 0, "83": 0, "96": 0, "97": 0, "98": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "170": 1, "176": 2, "177": 2, "178": 2, "179": 2, "180": 2, "181": 2, "182": 2, "183": 2, "172": 11, "174": 1, "175": 1, "211": 1, "221": 2, "222": 2, "230": 2, "231": 2, "245": 4, "244": 5, "246": 1, "253": 2, "254": 2, "271": 1, "407": 2, "411": 2, "412": 2, "413": 2, "408": 8, "410": 1, "414": 1, "415": 1, "438": 2, "440": 2, "439": 4, "441": 1, "455": 2, "457": 3, "456": 5, "458": 1, "472": 2, "474": 2, "473": 4, "475": 1, "491": 2, "493": 3, "492": 5, "494": 1, "510": 2, "512": 2, "511": 4, "513": 1, "529": 2, "531": 3, "530": 5, "532": 1, "548": 2, "549": 2, "558": 2, "559": 2, "568": 2, "569": 2, "578": 2, "579": 4, "580": 1, "581": 1, "590": 2, "591": 4, "592": 1, "593": 1, "604": 2, "605": 4, "606": 1, "607": 1, "616": 2, "617": 2, "185": 2, "186": 1, "187": 1, "188": 1, "189": 1, "190": 1, "193": 1, "194": 1, "196": 0, "197": 0, "199": 0, "200": 0, "201": 0, "202": 0, "204": 0, "205": 0, "207": 0, "208": 0, "209": 0, "212": 0, "213": 0, "214": 0, "215": 0, "228": 0, "238": 0, "242": 0, "239": 0, "240": 0, "251": 0, "267": 0, "268": 0, "269": 0, "300": 0, "301": 0, "302": 0, "304": 0, "305": 0, "306": 0, "308": 0, "309": 0, "310": 0, "314": 0, "315": 0, "317": 0, "318": 0, "319": 0, "321": 0, "322": 0, "323": 0, "324": 0, "325": 0, "329": 0, "331": 0, "336": 0, "337": 0, "338": 0, "339": 0, "340": 0, "344": 0, "347": 0, "349": 0, "350": 0, "352": 0, "353": 0, "354": 0, "355": 0, "356": 0, "358": 0, "359": 0, "360": 0, "362": 0, "363": 0, "365": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "374": 0, "375": 0, "377": 0, "378": 0, "379": 0, "380": 0, "382": 0, "383": 0, "385": 0, "386": 0, "387": 0, "388": 0, "389": 0, "390": 0, "392": 0, "393": 0, "395": 0, "397": 0, "396": 0, "399": 0, "400": 0, "401": 0, "402": 0, "404": 0, "405": 0, "332": 0, "333": 0, "334": 0, "341": 0, "342": 0, "422": 0, "423": 0, "425": 0, "426": 0, "428": 0, "429": 0, "430": 0, "431": 0, "432": 0, "433": 0, "434": 0, "449": 0, "453": 0, "450": 0, "451": 0, "467": 0, "470": 0, "468": 0, "485": 0, "489": 0, "486": 0, "487": 0, "505": 0, "508": 0, "506": 0, "523": 0, "527": 0, "524": 0, "525": 0, "543": 0, "546": 0, "544": 0, "553": 0, "554": 0, "556": 0, "563": 0, "564": 0, "566": 0, "573": 0, "574": 0, "576": 0, "585": 0, "586": 0, "588": 0, "598": 0, "602": 0, "599": 0, "600": 0, "611": 0, "612": 0, "614": 0, "621": 0, "622": 0, "624": 0}}
+ git checkout 7ee9ceb71e868944a46e1ff00b506772a53a4f1d
Note: switching to '7ee9ceb71e868944a46e1ff00b506772a53a4f1d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 7ee9ceb7 Merge branch '2.2.x'
M	src/flask/blueprints.py
+ git apply /root/pre_state.patch
error: unrecognized input
