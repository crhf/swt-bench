{"instance_id": "sympy__sympy-13551", "repo": "sympy/sympy", "version": "1.1", "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3", "patch_list": ["diff --git a/sympy/concrete/products.py b/sympy/concrete/products.py\n--- a/sympy/concrete/products.py\n+++ b/sympy/concrete/products.py\n@@ -282,8 +282,8 @@ def _eval_product(self, term, limits):\n                 # There is expression, which couldn't change by\n                 # as_numer_denom(). E.g. n**(2/3) + 1 --> (n**(2/3) + 1, 1).\n                 # We have to catch this case.\n-\n-                p = sum([self._eval_product(i, (k, a, n)) for i in p.as_coeff_Add()])\n+                from sympy.concrete.summations import Sum\n+                p = exp(Sum(log(p), (k, a, n)))\n             else:\n                 p = self._eval_product(p, (k, a, n))\n             return p / q\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-13551.py\nnew file mode 100644\nindex e69de29..de89a90 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-13551.py\n@@ -0,0 +1,13 @@\n+from sympy import Product, simplify, symbols\n+\n+n, k = symbols('n k')\n+\n+def test_product_bug_exposure():\n+    # Create the Product object with the expression and limits\n+    p = Product(n + 1 / 2**k, (k, 0, n-1)).doit()\n+    \n+    # Simplify the result for comparison\n+    result = simplify(p.subs(n, 2))\n+    \n+    # Assert the correct result to expose the bug\n+    assert result == 15/2  # This is the correct expected result\n"], "arch": "x86_64", "base_commit": "9476425b9e34363c2d9ac38e9f04aa75ae54a775", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-13551.py"], "coverage_files": ["sympy/concrete/products.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/concrete/products\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-13551.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}