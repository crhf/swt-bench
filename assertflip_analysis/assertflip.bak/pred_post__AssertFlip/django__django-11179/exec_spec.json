{"instance_id": "django__django-11179", "repo": "django/django", "version": "3.0", "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27", "patch_list": ["diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -277,6 +277,7 @@ def delete(self):\n             if self.can_fast_delete(instance):\n                 with transaction.mark_for_rollback_on_error():\n                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)\n+                setattr(instance, model._meta.pk.attname, None)\n                 return count, {model._meta.label: count}\n \n         with transaction.atomic(using=self.using, savepoint=False):\n", "diff --git a/dev/null b/tests/test_coverup_django__django-11179.py\nnew file mode 100644\nindex e69de29..5f868d9 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11179.py\n@@ -0,0 +1,27 @@\n+from django.test import TestCase\n+from django.db import models, connection\n+\n+# Define a simple model for testing\n+class SimpleModel(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+class DeleteModelTestCase(TestCase):\n+    def setUp(self):\n+        # Create the table for SimpleModel\n+        with connection.cursor() as cursor:\n+            cursor.execute('CREATE TABLE IF NOT EXISTS test_app_simplemodel (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(100));')\n+        # Create and save a model instance\n+        self.instance = SimpleModel.objects.create(name=\"Test Name\")\n+\n+    def test_delete_model_pk_not_none_after_delete(self):\n+        # Ensure the instance has a primary key before deletion\n+        self.assertIsNotNone(self.instance.pk)\n+\n+        # Delete the instance\n+        self.instance.delete()\n+\n+        # Check that the primary key is None after deletion\n+        self.assertIsNone(self.instance.pk)  # The PK should be None after deletion\n"], "arch": "x86_64", "base_commit": "19fc6376ce67d01ca37a91ef2f55ef769f50513a", "test_directives": ["test_coverup_django__django-11179"], "coverage_files": ["django/db/models/deletion.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/deletion\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11179", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref ~= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow != 5.4.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}