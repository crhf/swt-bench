+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 18759b2209ff556aed7f20d83cbf23e3d234e41c
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 18759b2209ff556aed7f20d83cbf23e3d234e41c
Author: Hasan Ramezani <hasan.r67@gmail.com>
Date:   Mon May 25 16:41:24 2020 +0200

    Fixed #31616 -- Added hint about middleware ordering for SessionMiddleware admin check.

diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py
index 5e4b785c33..a18ba22b46 100644
--- a/django/contrib/admin/checks.py
+++ b/django/contrib/admin/checks.py
@@ -132,6 +132,12 @@ def check_dependencies(**kwargs):
         errors.append(checks.Error(
             "'django.contrib.sessions.middleware.SessionMiddleware' must "
             "be in MIDDLEWARE in order to use the admin application.",
+            hint=(
+                "Insert "
+                "'django.contrib.sessions.middleware.SessionMiddleware' "
+                "before "
+                "'django.contrib.auth.middleware.AuthenticationMiddleware'."
+            ),
             id='admin.E410',
         ))
     return errors
diff --git a/tests/admin_checks/tests.py b/tests/admin_checks/tests.py
index 52f2188c9f..5744dc1b39 100644
--- a/tests/admin_checks/tests.py
+++ b/tests/admin_checks/tests.py
@@ -214,6 +214,12 @@ class SystemChecksTestCase(SimpleTestCase):
             checks.Error(
                 "'django.contrib.sessions.middleware.SessionMiddleware' "
                 "must be in MIDDLEWARE in order to use the admin application.",
+                hint=(
+                    "Insert "
+                    "'django.contrib.sessions.middleware.SessionMiddleware' "
+                    "before "
+                    "'django.contrib.auth.middleware.AuthenticationMiddleware'."
+                ),
                 id='admin.E410',
             ),
         ]
+ git diff 18759b2209ff556aed7f20d83cbf23e3d234e41c
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (2025.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2->Django==3.2) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.2
    Uninstalling Django-3.2:
      Successfully uninstalled Django-3.2
  Running setup.py develop for Django
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Successfully installed Django-3.2
+ git apply -v -
Checking patch django/db/migrations/autodetector.py...
Applied patch django/db/migrations/autodetector.py cleanly.
+ git apply -v -
Checking patch tests/test_coverup_django__django-12754.py...
Applied patch tests/test_coverup_django__django-12754.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/autodetector\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-12754
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_migration_order (test_coverup_django__django-12754.MigrationTestCase) ... ['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/db/migrations/autodetector\\.py)']
Testing against Django installed in '/testbed/django'
Skipping setup of unused database(s): other.
0.59 autodetector.py(1): import functools
0.59 autodetector.py(2): import re
0.59 autodetector.py(3): from itertools import chain
0.59 autodetector.py(5): from django.conf import settings
0.59 autodetector.py(6): from django.db import models
0.59 autodetector.py(7): from django.db.migrations import operations
0.59 autodetector.py(8): from django.db.migrations.migration import Migration
0.59 autodetector.py(9): from django.db.migrations.operations.models import AlterModelOptions
0.59 autodetector.py(10): from django.db.migrations.optimizer import MigrationOptimizer
0.59 autodetector.py(11): from django.db.migrations.questioner import MigrationQuestioner
0.60 autodetector.py(12): from django.db.migrations.utils import (
0.60 autodetector.py(15): from django.utils.topological_sort import stable_topological_sort
0.60 autodetector.py(18): class MigrationAutodetector:
0.60 autodetector.py(18): class MigrationAutodetector:
0.60 autodetector.py(29):     """
0.60 autodetector.py(31):     def __init__(self, from_state, to_state, questioner=None):
0.60 autodetector.py(37):     def changes(self, graph, trim_to_apps=None, convert_apps=None, migration_name=None):
0.60 autodetector.py(49):     def deep_deconstruct(self, obj):
0.60 autodetector.py(89):     def only_relation_agnostic_fields(self, fields):
0.60 autodetector.py(103):     def _detect_changes(self, convert_apps=None, graph=None):
0.60 autodetector.py(200):     def _prepare_field_lists(self):
0.60 autodetector.py(224):     def _generate_through_model_map(self):
0.60 autodetector.py(239):     @staticmethod
0.60 autodetector.py(250):     def _build_migration_list(self, graph=None):
0.60 autodetector.py(337):     def _sort_migrations(self):
0.60 autodetector.py(358):     def _optimize_migrations(self):
0.60 autodetector.py(374):     def check_dependency(self, operation, dependency):
0.60 autodetector.py(437):     def add_operation(self, app_label, operation, dependencies=None, beginning=False):
0.60 autodetector.py(445):     def swappable_first_key(self, item):
0.60 autodetector.py(465):     def generate_renamed_models(self):
0.60 autodetector.py(511):     def generate_created_models(self):
0.60 autodetector.py(686):     def generate_created_proxies(self):
0.60 autodetector.py(719):     def generate_deleted_models(self):
0.60 autodetector.py(808):     def generate_deleted_proxies(self):
0.60 autodetector.py(821):     def generate_renamed_fields(self):
0.60 autodetector.py(859):     def generate_added_fields(self):
0.60 autodetector.py(864):     def _generate_added_field(self, app_label, model_name, field_name):
0.60 autodetector.py(895):     def generate_removed_fields(self):
0.60 autodetector.py(900):     def _generate_removed_field(self, app_label, model_name, field_name):
0.60 autodetector.py(916):     def generate_altered_fields(self):
0.60 autodetector.py(999):     def create_altered_indexes(self):
0.60 autodetector.py(1017):     def generate_added_indexes(self):
0.60 autodetector.py(1028):     def generate_removed_indexes(self):
0.60 autodetector.py(1039):     def create_altered_constraints(self):
0.60 autodetector.py(1057):     def generate_added_constraints(self):
0.60 autodetector.py(1068):     def generate_removed_constraints(self):
0.60 autodetector.py(1079):     def _get_dependencies_for_foreign_key(self, field):
0.60 autodetector.py(1098):     def _generate_altered_foo_together(self, operation):
0.60 autodetector.py(1135):     def generate_altered_unique_together(self):
0.60 autodetector.py(1138):     def generate_altered_index_together(self):
0.60 autodetector.py(1141):     def generate_altered_db_table(self):
0.60 autodetector.py(1158):     def generate_altered_options(self):
0.60 autodetector.py(1194):     def generate_altered_order_with_respect_to(self):
0.60 autodetector.py(1221):     def generate_altered_managers(self):
0.60 autodetector.py(1235):     def arrange_for_graph(self, changes, graph, migration_name=None):
0.60 autodetector.py(1284):     def _trim_to_apps(self, changes, app_labels):
0.60 autodetector.py(1309):     @classmethod
0.60 autodetector.py(1330):     @classmethod
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
FAIL

======================================================================
FAIL: test_migration_order (test_coverup_django__django-12754.MigrationTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "./tests/test_coverup_django__django-12754.py", line 62, in test_migration_order
    ['RemoveField', 'CreateModel']
AssertionError: Lists differ: ['CreateModel', 'RemoveField'] != ['RemoveField', 'CreateModel']

First differing element 0:
'CreateModel'
'RemoveField'

- ['CreateModel', 'RemoveField']
+ ['RemoveField', 'CreateModel']

----------------------------------------------------------------------
Ran 1 test in 0.002s

FAILED (failures=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
+ cat coverage.cover
{"/testbed/django/db/migrations/autodetector.py": {"1": 1, "2": 1, "3": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "15": 1, "18": 2, "31": 1, "37": 1, "49": 1, "89": 1, "103": 1, "200": 1, "224": 1, "239": 1, "250": 1, "337": 1, "358": 1, "374": 1, "437": 1, "445": 1, "465": 1, "511": 1, "686": 1, "719": 1, "808": 1, "821": 1, "859": 1, "864": 1, "895": 1, "900": 1, "916": 1, "999": 1, "1017": 1, "1028": 1, "1039": 1, "1057": 1, "1068": 1, "1079": 1, "1098": 1, "1135": 1, "1138": 1, "1141": 1, "1158": 1, "1194": 1, "1221": 1, "1235": 1, "1284": 1, "1309": 1, "1330": 1, "32": 0, "33": 0, "34": 0, "35": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "62": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "71": 0, "72": 0, "73": 0, "74": 0, "76": 0, "77": 0, "79": 0, "80": 0, "81": 0, "83": 0, "87": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "122": 0, "123": 0, "124": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "144": 0, "146": 0, "147": 0, "148": 0, "149": 0, "151": 0, "152": 0, "154": 0, "155": 0, "157": 0, "160": 0, "163": 0, "164": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "177": 0, "178": 0, "180": 0, "181": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "194": 0, "195": 0, "196": 0, "198": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "212": 0, "218": 0, "220": 0, "213": 0, "214": 0, "215": 0, "221": 0, "226": 0, "227": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "234": 0, "235": 0, "237": 0, "245": 0, "246": 0, "247": 0, "248": 0, "261": 0, "262": 0, "263": 0, "264": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "277": 0, "282": 0, "283": 0, "284": 0, "287": 0, "288": 0, "289": 0, "290": 0, "291": 0, "292": 0, "294": 0, "295": 0, "296": 0, "297": 0, "301": 0, "305": 0, "306": 0, "308": 0, "310": 0, "311": 0, "312": 0, "313": 0, "314": 0, "316": 0, "318": 0, "319": 0, "320": 0, "321": 0, "322": 0, "323": 0, "324": 0, "325": 0, "326": 0, "328": 0, "329": 0, "330": 0, "331": 0, "332": 0, "334": 0, "335": 0, "342": 0, "344": 0, "345": 0, "346": 0, "349": 0, "350": 0, "351": 0, "352": 0, "353": 0, "356": 0, "360": 0, "361": 0, "362": 0, "365": 0, "366": 0, "367": 0, "370": 0, "371": 0, "372": 0, "380": 0, "382": 0, "383": 0, "386": 0, "389": 0, "390": 0, "391": 0, "394": 0, "395": 0, "396": 0, "400": 0, "402": 0, "403": 0, "404": 0, "407": 0, "409": 0, "410": 0, "413": 0, "415": 0, "416": 0, "417": 0, "420": 0, "422": 0, "423": 0, "424": 0, "427": 0, "429": 0, "430": 0, "431": 0, "435": 0, "439": 0, "440": 0, "441": 0, "443": 0, "450": 0, "451": 0, "452": 0, "453": 0, "455": 0, "456": 0, "457": 0, "458": 0, "460": 0, "461": 0, "462": 0, "463": 0, "471": 0, "472": 0, "473": 0, "474": 0, "475": 0, "476": 0, "478": 0, "479": 0, "480": 0, "481": 0, "482": 0, "483": 0, "484": 0, "485": 0, "486": 0, "487": 0, "488": 0, "489": 0, "490": 0, "491": 0, "492": 0, "493": 0, "494": 0, "496": 0, "498": 0, "499": 0, "500": 0, "501": 0, "503": 0, "504": 0, "505": 0, "507": 0, "508": 0, "509": 0, "521": 0, "522": 0, "523": 0, "524": 0, "525": 0, "526": 0, "528": 0, "529": 0, "530": 0, "532": 0, "533": 0, "534": 0, "535": 0, "536": 0, "537": 0, "538": 0, "539": 0, "540": 0, "543": 0, "544": 0, "545": 0, "546": 0, "547": 0, "548": 0, "549": 0, "550": 0, "552": 0, "553": 0, "554": 0, "555": 0, "556": 0, "559": 0, "562": 0, "563": 0, "564": 0, "565": 0, "568": 0, "569": 0, "570": 0, "571": 0, "572": 0, "573": 0, "574": 0, "575": 0, "577": 0, "578": 0, "579": 0, "580": 0, "581": 0, "582": 0, "585": 0, "586": 0, "587": 0, "588": 0, "589": 0, "590": 0, "591": 0, "592": 0, "594": 0, "595": 0, "599": 0, "600": 0, "603": 0, "604": 0, "606": 0, "608": 0, "609": 0, "610": 0, "611": 0, "612": 0, "613": 0, "615": 0, "619": 0, "620": 0, "622": 0, "623": 0, "624": 0, "625": 0, "626": 0, "627": 0, "628": 0, "630": 0, "632": 0, "633": 0, "634": 0, "635": 0, "636": 0, "637": 0, "639": 0, "641": 0, "642": 0, "643": 0, "644": 0, "645": 0, "646": 0, "648": 0, "650": 0, "651": 0, "652": 0, "653": 0, "654": 0, "655": 0, "657": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "667": 0, "668": 0, "674": 0, "675": 0, "676": 0, "677": 0, "678": 0, "679": 0, "680": 0, "681": 0, "683": 0, "692": 0, "693": 0, "694": 0, "695": 0, "698": 0, "701": 0, "702": 0, "703": 0, "704": 0, "706": 0, "707": 0, "708": 0, "709": 0, "710": 0, "711": 0, "712": 0, "713": 0, "716": 0, "729": 0, "730": 0, "731": 0, "732": 0, "733": 0, "734": 0, "735": 0, "737": 0, "738": 0, "739": 0, "740": 0, "741": 0, "744": 0, "745": 0, "746": 0, "747": 0, "748": 0, "749": 0, "750": 0, "751": 0, "753": 0, "754": 0, "755": 0, "756": 0, "757": 0, "758": 0, "759": 0, "760": 0, "763": 0, "764": 0, "765": 0, "766": 0, "767": 0, "768": 0, "772": 0, "773": 0, "774": 0, "775": 0, "776": 0, "777": 0, "784": 0, "785": 0, "786": 0, "787": 0, "788": 0, "789": 0, "790": 0, "791": 0, "793": 0, "794": 0, "796": 0, "797": 0, "798": 0, "800": 0, "801": 0, "802": 0, "803": 0, "805": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "817": 0, "823": 0, "824": 0, "825": 0, "826": 0, "827": 0, "829": 0, "830": 0, "831": 0, "832": 0, "833": 0, "834": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "843": 0, "844": 0, "845": 0, "846": 0, "847": 0, "848": 0, "849": 0, "850": 0, "851": 0, "854": 0, "855": 0, "856": 0, "857": 0, "861": 0, "862": 0, "865": 0, "867": 0, "868": 0, "869": 0, "872": 0, "874": 0, "875": 0, "876": 0, "878": 0, "879": 0, "880": 0, "881": 0, "883": 0, "884": 0, "885": 0, "886": 0, "887": 0, "888": 0, "889": 0, "890": 0, "892": 0, "897": 0, "898": 0, "901": 0, "902": 0, "903": 0, "904": 0, "905": 0, "911": 0, "912": 0, "921": 0, "923": 0, "924": 0, "925": 0, "926": 0, "927": 0, "930": 0, "932": 0, "933": 0, "935": 0, "936": 0, "938": 0, "939": 0, "940": 0, "941": 0, "945": 0, "946": 0, "948": 0, "949": 0, "950": 0, "951": 0, "952": 0, "953": 0, "955": 0, "956": 0, "957": 0, "959": 0, "960": 0, "962": 0, "963": 0, "965": 0, "966": 0, "967": 0, "968": 0, "969": 0, "970": 0, "971": 0, "972": 0, "974": 0, "975": 0, "976": 0, "977": 0, "978": 0, "979": 0, "980": 0, "981": 0, "983": 0, "984": 0, "985": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "992": 0, "996": 0, "997": 0, "1000": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1006": 0, "1007": 0, "1008": 0, "1009": 0, "1011": 0, "1012": 0, "1013": 0, "1018": 0, "1019": 0, "1020": 0, "1021": 0, "1022": 0, "1023": 0, "1024": 0, "1029": 0, "1030": 0, "1031": 0, "1032": 0, "1033": 0, "1034": 0, "1035": 0, "1040": 0, "1041": 0, "1042": 0, "1043": 0, "1044": 0, "1046": 0, "1047": 0, "1048": 0, "1049": 0, "1051": 0, "1052": 0, "1053": 0, "1058": 0, "1059": 0, "1060": 0, "1061": 0, "1062": 0, "1063": 0, "1064": 0, "1069": 0, "1070": 0, "1071": 0, "1072": 0, "1073": 0, "1074": 0, "1075": 0, "1081": 0, "1082": 0, "1083": 0, "1084": 0, "1086": 0, "1087": 0, "1088": 0, "1089": 0, "1090": 0, "1091": 0, "1092": 0, "1093": 0, "1094": 0, "1096": 0, "1099": 0, "1100": 0, "1101": 0, "1102": 0, "1103": 0, "1106": 0, "1113": 0, "1115": 0, "1116": 0, "1118": 0, "1119": 0, "1120": 0, "1121": 0, "1122": 0, "1123": 0, "1124": 0, "1126": 0, "1127": 0, "1128": 0, "1129": 0, "1130": 0, "1132": 0, "1107": 0, "1112": 0, "1109": 0, "1110": 0, "1136": 0, "1139": 0, "1142": 0, "1143": 0, "1144": 0, "1145": 0, "1146": 0, "1147": 0, "1148": 0, "1149": 0, "1150": 0, "1151": 0, "1152": 0, "1153": 0, "1154": 0, "1164": 0, "1165": 0, "1166": 0, "1168": 0, "1170": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1177": 0, "1178": 0, "1181": 0, "1182": 0, "1185": 0, "1186": 0, "1187": 0, "1188": 0, "1189": 0, "1190": 0, "1179": 0, "1183": 0, "1195": 0, "1196": 0, "1197": 0, "1198": 0, "1199": 0, "1200": 0, "1203": 0, "1204": 0, "1205": 0, "1206": 0, "1207": 0, "1208": 0, "1209": 0, "1212": 0, "1213": 0, "1214": 0, "1215": 0, "1216": 0, "1218": 0, "1222": 0, "1223": 0, "1224": 0, "1225": 0, "1226": 0, "1227": 0, "1228": 0, "1229": 0, "1230": 0, "1231": 0, "1241": 0, "1242": 0, "1243": 0, "1244": 0, "1245": 0, "1247": 0, "1248": 0, "1249": 0, "1250": 0, "1251": 0, "1253": 0, "1255": 0, "1256": 0, "1257": 0, "1258": 0, "1260": 0, "1261": 0, "1263": 0, "1265": 0, "1266": 0, "1267": 0, "1268": 0, "1269": 0, "1271": 0, "1272": 0, "1273": 0, "1275": 0, "1276": 0, "1277": 0, "1279": 0, "1280": 0, "1281": 0, "1282": 0, "1292": 0, "1293": 0, "1294": 0, "1295": 0, "1296": 0, "1297": 0, "1299": 0, "1300": 0, "1301": 0, "1302": 0, "1304": 0, "1305": 0, "1306": 0, "1307": 0, "1316": 0, "1317": 0, "1318": 0, "1319": 0, "1320": 0, "1321": 0, "1322": 0, "1323": 0, "1324": 0, "1325": 0, "1326": 0, "1327": 0, "1328": 0, "1336": 0, "1337": 0, "1338": 0, "1339": 0}}
+ git checkout 18759b2209ff556aed7f20d83cbf23e3d234e41c
Note: switching to '18759b2209ff556aed7f20d83cbf23e3d234e41c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 18759b2209 Fixed #31616 -- Added hint about middleware ordering for SessionMiddleware admin check.
M	django/db/migrations/autodetector.py
+ git apply /root/pre_state.patch
error: unrecognized input
