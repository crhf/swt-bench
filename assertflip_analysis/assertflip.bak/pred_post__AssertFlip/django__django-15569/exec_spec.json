{"instance_id": "django__django-15569", "repo": "django/django", "version": "4.1", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9", "patch_list": ["diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py\n--- a/django/db/models/query_utils.py\n+++ b/django/db/models/query_utils.py\n@@ -217,6 +217,7 @@ def _unregister_lookup(cls, lookup, lookup_name=None):\n         if lookup_name is None:\n             lookup_name = lookup.lookup_name\n         del cls.class_lookups[lookup_name]\n+        cls._clear_cached_lookups()\n \n \n def select_related_descend(field, restricted, requested, load_fields, reverse=False):\n", "diff --git a/dev/null b/tests/test_coverup_django__django-15569.py\nnew file mode 100644\nindex e69de29..75f76fd 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15569.py\n@@ -0,0 +1,22 @@\n+from django.test import SimpleTestCase\n+from django.db.models.query_utils import RegisterLookupMixin\n+\n+class MockLookup:\n+    lookup_name = 'mock_lookup'\n+\n+class TestRegisterLookupMixin(SimpleTestCase):\n+    def test_unregister_lookup_clears_cache(self):\n+        class TestClass(RegisterLookupMixin):\n+            pass\n+\n+        # Register the mock lookup\n+        TestClass.register_lookup(MockLookup)\n+        \n+        # Verify the lookup is cached\n+        self.assertIn('mock_lookup', TestClass.get_lookups())\n+        \n+        # Unregister the lookup\n+        TestClass._unregister_lookup(MockLookup)\n+        \n+        # The lookup should not be retrievable after unregistering\n+        self.assertNotIn('mock_lookup', TestClass.get_lookups())\n"], "arch": "x86_64", "base_commit": "884b4c27f506b3c29d58509fc83a35c30ea10d94", "test_directives": ["test_coverup_django__django-15569"], "coverage_files": ["django/db/models/query_utils.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/query_utils\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15569", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.4.1\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}