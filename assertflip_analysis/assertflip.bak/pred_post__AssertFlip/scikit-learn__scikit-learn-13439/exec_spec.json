{"instance_id": "scikit-learn__scikit-learn-13439", "repo": "scikit-learn/scikit-learn", "version": "0.21", "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6", "patch_list": ["diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -199,6 +199,12 @@ def _iter(self, with_final=True):\n             if trans is not None and trans != 'passthrough':\n                 yield idx, name, trans\n \n+    def __len__(self):\n+        \"\"\"\n+        Returns the length of the Pipeline\n+        \"\"\"\n+        return len(self.steps)\n+\n     def __getitem__(self, ind):\n         \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n \n", "diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-13439.py\nnew file mode 100644\nindex e69de29..2dd0beb 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-13439.py\n@@ -0,0 +1,25 @@\n+import pytest\n+from sklearn import svm\n+from sklearn.datasets import make_classification\n+from sklearn.feature_selection import SelectKBest, f_regression\n+from sklearn.pipeline import Pipeline\n+\n+def test_pipeline_len_bug():\n+    # Generate some data to play with\n+    X, y = make_classification(n_informative=5, n_redundant=0, random_state=42)\n+\n+    # Create a non-empty pipeline with steps\n+    anova_filter = SelectKBest(f_regression, k=5)\n+    clf = svm.SVC(kernel='linear')\n+    pipe = Pipeline([('anova', anova_filter), ('svc', clf)])\n+\n+    # Test len on non-empty pipeline\n+    length = len(pipe)\n+    assert length == 2, \"len(pipe) should return 2, but it returned: {}\".format(length)\n+\n+    # Create a single-step pipeline\n+    single_step_pipe = Pipeline([('anova', anova_filter)])\n+\n+    # Test len on single-step pipeline\n+    length = len(single_step_pipe)\n+    assert length == 1, \"len(single_step_pipe) should return 1, but it returned: {}\".format(length)\n"], "arch": "x86_64", "base_commit": "a62775e99f2a5ea3d51db7160fad783f6cd8a4c5", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-13439.py"], "coverage_files": ["sklearn/pipeline.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/pipeline\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-13439.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}