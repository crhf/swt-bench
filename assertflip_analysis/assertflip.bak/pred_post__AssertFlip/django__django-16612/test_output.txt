+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 55bcbd8d172b689811fae17cde2f09218dd74e9c
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 55bcbd8d172b689811fae17cde2f09218dd74e9c
Author: Ekaterina Vahrusheva <lajilit@gmail.com>
Date:   Thu Mar 2 21:38:05 2023 +0300

    Fixed #34378 -- Made QuerySet.in_bulk() not clear odering when id_list is passed.
    
    This reverts 340eaded4e30cf25bcd4e9781d33a617fe9c0f84.

diff --git a/django/db/models/query.py b/django/db/models/query.py
index 71bb088679..6ac2a4cb10 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1108,9 +1108,9 @@ class QuerySet(AltersData):
                 qs = ()
                 for offset in range(0, len(id_list), batch_size):
                     batch = id_list[offset : offset + batch_size]
-                    qs += tuple(self.filter(**{filter_key: batch}).order_by())
+                    qs += tuple(self.filter(**{filter_key: batch}))
             else:
-                qs = self.filter(**{filter_key: id_list}).order_by()
+                qs = self.filter(**{filter_key: id_list})
         else:
             qs = self._chain()
         return {getattr(obj, field_name): obj for obj in qs}
diff --git a/tests/lookup/tests.py b/tests/lookup/tests.py
index 53eb76d174..9778eaa5c5 100644
--- a/tests/lookup/tests.py
+++ b/tests/lookup/tests.py
@@ -246,6 +246,35 @@ class LookupTests(TestCase):
         with self.assertRaisesMessage(ValueError, msg):
             Article.objects.in_bulk([self.au1], field_name="author")
 
+    @skipUnlessDBFeature("can_distinct_on_fields")
+    def test_in_bulk_preserve_ordering(self):
+        articles = (
+            Article.objects.order_by("author_id", "-pub_date")
+            .distinct("author_id")
+            .in_bulk([self.au1.id, self.au2.id], field_name="author_id")
+        )
+        self.assertEqual(
+            articles,
+            {self.au1.id: self.a4, self.au2.id: self.a5},
+        )
+
+    @skipUnlessDBFeature("can_distinct_on_fields")
+    def test_in_bulk_preserve_ordering_with_batch_size(self):
+        old_max_query_params = connection.features.max_query_params
+        connection.features.max_query_params = 1
+        try:
+            articles = (
+                Article.objects.order_by("author_id", "-pub_date")
+                .distinct("author_id")
+                .in_bulk([self.au1.id, self.au2.id], field_name="author_id")
+            )
+            self.assertEqual(
+                articles,
+                {self.au1.id: self.a4, self.au2.id: self.a5},
+            )
+        finally:
+            connection.features.max_query_params = old_max_query_params
+
     @skipUnlessDBFeature("can_distinct_on_fields")
     def test_in_bulk_distinct_field(self):
         self.assertEqual(
+ git diff 55bcbd8d172b689811fae17cde2f09218dd74e9c
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.6.0 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230303050010) (3.9.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.11/site-packages (from Django==5.0.dev20230303050010) (0.5.3)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-5.0.dev20230303050010-0.editable-py3-none-any.whl size=27423 sha256=1ccb04a33f7d282d6ea8f00d10417f70ae5012ec35e903c9fb4601c2bad73592
  Stored in directory: /tmp/pip-ephem-wheel-cache-qdnsm689/wheels/49/5f/4f/01b7d31ea6ddac9643da788242d33e5fd3467d95d17b032c6b
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 5.0.dev20230303050010
    Uninstalling Django-5.0.dev20230303050010:
      Successfully uninstalled Django-5.0.dev20230303050010
Successfully installed Django-5.0.dev20230303050010
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch django/contrib/admin/sites.py...
Applied patch django/contrib/admin/sites.py cleanly.
+ git apply -v -
<stdin>:23: trailing whitespace.
        
<stdin>:30: trailing whitespace.
        
<stdin>:37: trailing whitespace.
            
<stdin>:40: trailing whitespace.
            
Checking patch tests/test_coverup_django__django-16612.py...
Applied patch tests/test_coverup_django__django-16612.py cleanly.
warning: 4 lines add whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/admin/sites\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16612
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/contrib/admin/sites\\.py)']
Testing against Django installed in '/testbed/django'
0.54 sites.py(1): from functools import update_wrapper
0.54 sites.py(2): from weakref import WeakSet
0.54 sites.py(4): from django.apps import apps
0.54 sites.py(5): from django.conf import settings
0.54 sites.py(6): from django.contrib.admin import ModelAdmin, actions
0.54 sites.py(7): from django.contrib.admin.views.autocomplete import AutocompleteJsonView
0.54 sites.py(8): from django.contrib.auth import REDIRECT_FIELD_NAME
0.54 sites.py(9): from django.core.exceptions import ImproperlyConfigured
0.54 sites.py(10): from django.db.models.base import ModelBase
0.54 sites.py(11): from django.http import Http404, HttpResponsePermanentRedirect, HttpResponseRedirect
0.54 sites.py(12): from django.template.response import TemplateResponse
0.54 sites.py(13): from django.urls import NoReverseMatch, Resolver404, resolve, reverse
0.54 sites.py(14): from django.utils.decorators import method_decorator
0.54 sites.py(15): from django.utils.functional import LazyObject
0.54 sites.py(16): from django.utils.module_loading import import_string
0.54 sites.py(17): from django.utils.text import capfirst
0.54 sites.py(18): from django.utils.translation import gettext as _
0.54 sites.py(19): from django.utils.translation import gettext_lazy
0.54 sites.py(20): from django.views.decorators.cache import never_cache
0.54 sites.py(21): from django.views.decorators.common import no_append_slash
0.54 sites.py(22): from django.views.decorators.csrf import csrf_protect
0.54 sites.py(23): from django.views.i18n import JavaScriptCatalog
0.54 sites.py(25): all_sites = WeakSet()
0.54 sites.py(28): class AlreadyRegistered(Exception):
0.54 sites.py(28): class AlreadyRegistered(Exception):
0.54 sites.py(29):     pass
0.54 sites.py(32): class NotRegistered(Exception):
0.54 sites.py(32): class NotRegistered(Exception):
0.54 sites.py(33):     pass
0.54 sites.py(36): class AdminSite:
0.54 sites.py(36): class AdminSite:
0.54 sites.py(37):     """
0.54 sites.py(46):     site_title = gettext_lazy("Django site admin")
0.54 sites.py(49):     site_header = gettext_lazy("Django administration")
0.54 sites.py(52):     index_title = gettext_lazy("Site administration")
0.54 sites.py(55):     site_url = "/"
0.54 sites.py(57):     enable_nav_sidebar = True
0.54 sites.py(59):     empty_value_display = "-"
0.54 sites.py(61):     login_form = None
0.54 sites.py(62):     index_template = None
0.54 sites.py(63):     app_index_template = None
0.54 sites.py(64):     login_template = None
0.54 sites.py(65):     logout_template = None
0.54 sites.py(66):     password_change_template = None
0.54 sites.py(67):     password_change_done_template = None
0.54 sites.py(69):     final_catch_all_view = True
0.54 sites.py(71):     def __init__(self, name="admin"):
0.54 sites.py(78):     def __repr__(self):
0.54 sites.py(81):     def check(self, app_configs):
0.54 sites.py(99):     def register(self, model_or_iterable, admin_class=None, **options):
0.54 sites.py(150):     def unregister(self, model_or_iterable):
0.54 sites.py(163):     def is_registered(self, model):
0.54 sites.py(169):     def add_action(self, action, name=None):
0.54 sites.py(177):     def disable_action(self, name):
0.54 sites.py(183):     def get_action(self, name):
0.54 sites.py(190):     @property
0.54 sites.py(191):     def actions(self):
0.54 sites.py(190):     @property
0.54 sites.py(191):     def actions(self):
0.54 sites.py(197):     def has_permission(self, request):
0.54 sites.py(204):     def admin_view(self, view, cacheable=False):
0.54 sites.py(251):     def get_urls(self):
0.54 sites.py(315):     @property
0.54 sites.py(316):     def urls(self):
0.54 sites.py(315):     @property
0.54 sites.py(316):     def urls(self):
0.54 sites.py(319):     def each_context(self, request):
0.54 sites.py(342):     def password_change(self, request, extra_context=None):
0.54 sites.py(360):     def password_change_done(self, request, extra_context=None):
0.54 sites.py(374):     def i18n_javascript(self, request, extra_context=None):
0.54 sites.py(383):     def logout(self, request, extra_context=None):
0.54 sites.py(405):     @method_decorator(never_cache)
0.54 sites.py(406):     def login(self, request, extra_context=None):
0.54 sites.py(405):     @method_decorator(never_cache)
0.54 sites.py(406):     def login(self, request, extra_context=None):
0.54 sites.py(443):     def autocomplete_view(self, request):
0.54 sites.py(446):     @no_append_slash
0.54 sites.py(447):     def catch_all_view(self, request, url):
0.54 sites.py(446):     @no_append_slash
0.54 sites.py(447):     def catch_all_view(self, request, url):
0.54 sites.py(461):     def _build_app_dict(self, request, label=None):
0.54 sites.py(533):     def get_app_list(self, request, app_label=None):
0.54 sites.py(549):     def index(self, request, extra_context=None):
0.54 sites.py(570):     def app_index(self, request, app_label, extra_context=None):
0.54 sites.py(594):     def get_log_entries(self, request):
0.54 sites.py(600): class DefaultAdminSite(LazyObject):
0.54 sites.py(600): class DefaultAdminSite(LazyObject):
0.54 sites.py(601):     def _setup(self):
0.54 sites.py(605):     def __repr__(self):
0.54 sites.py(613): site = DefaultAdminSite()
Found 1 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
test_catch_all_view_drops_query_string (test_coverup_django__django-16612.CatchAllViewTest.test_catch_all_view_drops_query_string) ... FAIL

======================================================================
FAIL: test_catch_all_view_drops_query_string (test_coverup_django__django-16612.CatchAllViewTest.test_catch_all_view_drops_query_string)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-16612.py", line 30, in test_catch_all_view_drops_query_string
    response = self.admin_site.catch_all_view(request, 'auth/foo')
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/views/decorators/common.py", line 14, in wrapper_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/testbed/django/contrib/admin/sites.py", line 459, in catch_all_view
    raise Http404
django.http.response.Http404

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/./tests/test_coverup_django__django-16612.py", line 39, in test_catch_all_view_drops_query_string
    self.fail("Http404 was raised, indicating the bug is present.")
AssertionError: Http404 was raised, indicating the bug is present.

----------------------------------------------------------------------
Ran 1 test in 0.002s

FAILED (failures=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
0.72 sites.py(72):         self._registry = {}  # model_class class -> admin_class instance
0.72 sites.py(73):         self.name = name
0.72 sites.py(74):         self._actions = {"delete_selected": actions.delete_selected}
0.72 sites.py(75):         self._global_actions = self._actions.copy()
0.72 sites.py(76):         all_sites.add(self)
0.72 sites.py(448):         if settings.APPEND_SLASH and not url.endswith("/"):
0.72 sites.py(449):             urlconf = getattr(request, "urlconf", None)
0.72 sites.py(450):             try:
0.72 sites.py(451):                 match = resolve("%s/" % request.path_info, urlconf)
0.72 sites.py(452):             except Resolver404:
0.72 sites.py(453):                 pass
0.72 sites.py(459):         raise Http404
+ cat coverage.cover
{"/testbed/django/contrib/admin/sites.py": {"0": 0, "1": 1, "2": 1, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "23": 1, "25": 1, "28": 2, "32": 2, "36": 2, "600": 2, "613": 1, "29": 1, "33": 1, "46": 1, "49": 1, "52": 1, "55": 1, "57": 1, "59": 1, "61": 1, "62": 1, "63": 1, "64": 1, "65": 1, "66": 1, "67": 1, "69": 1, "71": 1, "78": 1, "81": 1, "99": 1, "150": 1, "163": 1, "169": 1, "177": 1, "183": 1, "190": 2, "191": 2, "197": 1, "204": 1, "251": 1, "315": 2, "316": 2, "319": 1, "342": 1, "360": 1, "374": 1, "383": 1, "405": 2, "406": 2, "443": 1, "446": 2, "447": 2, "461": 1, "533": 1, "549": 1, "570": 1, "594": 1, "72": 1, "73": 1, "74": 1, "75": 1, "76": 1, "79": 0, "86": 0, "87": 0, "88": 0, "90": 0, "91": 0, "92": 0, "94": 0, "95": 0, "96": 0, "97": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "123": 0, "124": 0, "125": 0, "126": 0, "128": 0, "130": 0, "131": 0, "135": 0, "138": 0, "142": 0, "143": 0, "144": 0, "148": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "167": 0, "173": 0, "174": 0, "175": 0, "181": 0, "188": 0, "195": 0, "202": 0, "228": 0, "243": 0, "244": 0, "247": 0, "248": 0, "249": 0, "229": 0, "230": 0, "231": 0, "232": 0, "235": 0, "237": 0, "238": 0, "239": 0, "241": 0, "255": 0, "256": 0, "258": 0, "267": 0, "268": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "275": 0, "276": 0, "277": 0, "278": 0, "280": 0, "281": 0, "282": 0, "283": 0, "284": 0, "285": 0, "266": 0, "291": 0, "292": 0, "293": 0, "294": 0, "295": 0, "296": 0, "299": 0, "300": 0, "304": 0, "305": 0, "306": 0, "307": 0, "310": 0, "311": 0, "313": 0, "259": 0, "262": 0, "263": 0, "260": 0, "317": 0, "327": 0, "329": 0, "328": 0, "332": 0, "333": 0, "334": 0, "335": 0, "336": 0, "337": 0, "338": 0, "339": 0, "331": 0, "346": 0, "347": 0, "349": 0, "351": 0, "352": 0, "353": 0, "350": 0, "355": 0, "356": 0, "357": 0, "358": 0, "364": 0, "367": 0, "366": 0, "369": 0, "370": 0, "371": 0, "372": 0, "381": 0, "389": 0, "392": 0, "393": 0, "396": 0, "397": 0, "391": 0, "400": 0, "401": 0, "402": 0, "403": 0, "410": 0, "412": 0, "413": 0, "418": 0, "419": 0, "421": 0, "422": 0, "423": 0, "424": 0, "425": 0, "426": 0, "429": 0, "430": 0, "432": 0, "433": 0, "436": 0, "437": 0, "438": 0, "435": 0, "440": 0, "441": 0, "444": 0, "448": 1, "449": 1, "450": 1, "451": 1, "455": 0, "456": 0, "457": 0, "452": 1, "453": 1, "459": 1, "466": 0, "468": 0, "469": 0, "471": 0, "475": 0, "477": 0, "478": 0, "480": 0, "481": 0, "482": 0, "484": 0, "488": 0, "489": 0, "491": 0, "493": 0, "494": 0, "495": 0, "496": 0, "497": 0, "498": 0, "492": 0, "500": 0, "501": 0, "502": 0, "503": 0, "504": 0, "506": 0, "507": 0, "508": 0, "509": 0, "510": 0, "511": 0, "513": 0, "514": 0, "516": 0, "517": 0, "520": 0, "521": 0, "522": 0, "523": 0, "524": 0, "525": 0, "527": 0, "528": 0, "519": 0, "531": 0, "472": 0, "470": 0, "538": 0, "541": 0, "544": 0, "545": 0, "547": 0, "554": 0, "556": 0, "557": 0, "558": 0, "559": 0, "560": 0, "561": 0, "564": 0, "566": 0, "567": 0, "571": 0, "573": 0, "574": 0, "576": 0, "577": 0, "578": 0, "579": 0, "580": 0, "581": 0, "582": 0, "585": 0, "587": 0, "588": 0, "589": 0, "590": 0, "591": 0, "595": 0, "597": 0, "601": 1, "605": 1, "602": 0, "603": 0, "606": 0}}
+ git checkout 55bcbd8d172b689811fae17cde2f09218dd74e9c
Note: switching to '55bcbd8d172b689811fae17cde2f09218dd74e9c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 55bcbd8d17 Fixed #34378 -- Made QuerySet.in_bulk() not clear odering when id_list is passed.
M	django/contrib/admin/sites.py
+ git apply /root/pre_state.patch
error: unrecognized input
