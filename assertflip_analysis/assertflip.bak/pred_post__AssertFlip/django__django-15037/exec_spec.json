{"instance_id": "django__django-15037", "repo": "django/django", "version": "4.1", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9", "patch_list": ["diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py\n--- a/django/core/management/commands/inspectdb.py\n+++ b/django/core/management/commands/inspectdb.py\n@@ -116,13 +116,17 @@ def table2model(table_name):\n                         extra_params['unique'] = True\n \n                     if is_relation:\n+                        ref_db_column, ref_db_table = relations[column_name]\n                         if extra_params.pop('unique', False) or extra_params.get('primary_key'):\n                             rel_type = 'OneToOneField'\n                         else:\n                             rel_type = 'ForeignKey'\n+                            ref_pk_column = connection.introspection.get_primary_key_column(cursor, ref_db_table)\n+                            if ref_pk_column and ref_pk_column != ref_db_column:\n+                                extra_params['to_field'] = ref_db_column\n                         rel_to = (\n-                            \"self\" if relations[column_name][1] == table_name\n-                            else table2model(relations[column_name][1])\n+                            'self' if ref_db_table == table_name\n+                            else table2model(ref_db_table)\n                         )\n                         if rel_to in known_models:\n                             field_type = '%s(%s' % (rel_type, rel_to)\n", "diff --git a/dev/null b/tests/test_coverup_django__django-15037.py\nnew file mode 100644\nindex e69de29..7d11ca0 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15037.py\n@@ -0,0 +1,34 @@\n+from django.test import TestCase\n+from django.db import connection\n+from django.core.management import call_command\n+from io import StringIO\n+\n+class InspectDBForeignKeyTest(TestCase):\n+    def setUp(self):\n+        with connection.cursor() as cursor:\n+            cursor.execute(\"\"\"\n+                CREATE TABLE foo (\n+                    id serial PRIMARY KEY,\n+                    other_id int UNIQUE\n+                );\n+            \"\"\")\n+            cursor.execute(\"\"\"\n+                CREATE TABLE bar (\n+                    id serial PRIMARY KEY,\n+                    other_id int,\n+                    CONSTRAINT myconst FOREIGN KEY(other_id) REFERENCES foo(other_id)\n+                );\n+            \"\"\")\n+\n+    def tearDown(self):\n+        with connection.cursor() as cursor:\n+            cursor.execute(\"DROP TABLE bar;\")\n+            cursor.execute(\"DROP TABLE foo;\")\n+\n+    def test_inspectdb_foreign_key_to_specific_field(self):\n+        out = StringIO()\n+        call_command('inspectdb', stdout=out)\n+        output = out.getvalue()\n+\n+        # Check that the generated model for 'bar' has 'other_id' as a ForeignKey to 'foo(other_id)'\n+        self.assertIn(\"other_id = models.ForeignKey(foo, to_field='other_id', on_delete=models.DO_NOTHING)\", output)\n"], "arch": "x86_64", "base_commit": "dab48b7482295956973879d15bfd4d3bb0718772", "test_directives": ["test_coverup_django__django-15037"], "coverage_files": ["django/core/management/commands/inspectdb.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/core/management/commands/inspectdb\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15037", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.4.1\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}