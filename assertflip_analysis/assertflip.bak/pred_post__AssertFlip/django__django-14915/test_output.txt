+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4
Author: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Date:   Thu Sep 30 11:26:17 2021 +0200

    Fixed #33159 -- Reverted "Fixed #32970 -- Changed WhereNode.clone() to create a shallow copy of children."
    
    This reverts commit e441847ecae99dd1ccd0d9ce76dbcff51afa863c.
    
    A shallow copy is not enough because querysets can be reused and
    evaluated in nested nodes, which shouldn't mutate JOIN aliases.
    
    Thanks Michal Čihař for the report.

diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py
index 160d5733b8..50ff13be75 100644
--- a/django/db/models/sql/where.py
+++ b/django/db/models/sql/where.py
@@ -148,7 +148,11 @@ class WhereNode(tree.Node):
         clone = self.__class__._new_instance(
             children=None, connector=self.connector, negated=self.negated,
         )
-        clone.children = self.children[:]
+        for child in self.children:
+            if hasattr(child, 'clone'):
+                clone.children.append(child.clone())
+            else:
+                clone.children.append(child)
         return clone
 
     def relabeled_clone(self, change_map):
diff --git a/tests/queries/tests.py b/tests/queries/tests.py
index fa87e7859c..9c1b41a395 100644
--- a/tests/queries/tests.py
+++ b/tests/queries/tests.py
@@ -1663,6 +1663,12 @@ class Queries5Tests(TestCase):
             'bar %s'
         )
 
+    def test_queryset_reuse(self):
+        # Using querysets doesn't mutate aliases.
+        authors = Author.objects.filter(Q(name='a1') | Q(name='nonexistent'))
+        self.assertEqual(Ranking.objects.filter(author__in=authors).get(), self.rank3)
+        self.assertEqual(authors.count(), 1)
+
 
 class SelectRelatedTests(TestCase):
     def test_tickets_3045_3288(self):
+ git diff 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.3.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20210930092617) (3.9.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20210930092617) (0.5.3)
Requirement already satisfied: typing_extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from asgiref>=3.3.2->Django==4.1.dev20210930092617) (4.14.1)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-4.1.dev20210930092617-0.editable-py3-none-any.whl size=26772 sha256=7c07fc180d7b3061bd8ea810439c840e60a960af19145037a88ea2868b37ff00
  Stored in directory: /tmp/pip-ephem-wheel-cache-5jxh6ovi/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 4.1.dev20210930092617
    Uninstalling Django-4.1.dev20210930092617:
      Successfully uninstalled Django-4.1.dev20210930092617
Successfully installed Django-4.1.dev20210930092617
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch django/forms/models.py...
Applied patch django/forms/models.py cleanly.
+ git apply -v -
<stdin>:16: trailing whitespace.
        
Checking patch tests/test_coverup_django__django-14915.py...
Applied patch tests/test_coverup_django__django-14915.py cleanly.
warning: 1 line adds whitespace errors.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/models\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14915
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(django/forms/models\\.py)']
0.21 models.py(1): """
0.21 models.py(5): from itertools import chain
0.21 models.py(7): from django.core.exceptions import (
0.21 models.py(10): from django.forms.fields import ChoiceField, Field
0.21 models.py(11): from django.forms.forms import BaseForm, DeclarativeFieldsMetaclass
0.21 models.py(12): from django.forms.formsets import BaseFormSet, formset_factory
0.21 models.py(13): from django.forms.utils import ErrorList
0.21 models.py(14): from django.forms.widgets import (
0.21 models.py(17): from django.utils.text import capfirst, get_text_list
0.21 models.py(18): from django.utils.translation import gettext, gettext_lazy as _
0.21 models.py(20): __all__ = (
0.21 models.py(27): ALL_FIELDS = '__all__'
0.21 models.py(30): def construct_instance(form, instance, fields=None, exclude=None):
0.21 models.py(71): def model_to_dict(instance, fields=None, exclude=None):
0.21 models.py(96): def apply_limit_choices_to_to_formfield(formfield):
0.21 models.py(112): def fields_for_model(model, fields=None, exclude=None, widgets=None,
0.21 models.py(115):                      field_classes=None, *, apply_limit_choices_to=True):
0.21 models.py(112): def fields_for_model(model, fields=None, exclude=None, widgets=None,
0.21 models.py(201): class ModelFormOptions:
0.21 models.py(201): class ModelFormOptions:
0.21 models.py(202):     def __init__(self, options=None):
0.21 models.py(214): class ModelFormMetaclass(DeclarativeFieldsMetaclass):
0.21 models.py(214): class ModelFormMetaclass(DeclarativeFieldsMetaclass):
0.21 models.py(215):     def __new__(mcs, name, bases, attrs):
0.21 models.py(286): class BaseModelForm(BaseForm):
0.21 models.py(286): class BaseModelForm(BaseForm):
0.21 models.py(287):     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,
0.21 models.py(288):                  initial=None, error_class=ErrorList, label_suffix=None,
0.21 models.py(289):                  empty_permitted=False, instance=None, use_required_attribute=None,
0.21 models.py(290):                  renderer=None):
0.21 models.py(287):     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,
0.21 models.py(316):     def _get_validation_exclusions(self):
0.21 models.py(357):     def clean(self):
0.21 models.py(361):     def _update_errors(self, errors):
0.21 models.py(389):     def _post_clean(self):
0.21 models.py(419):     def validate_unique(self):
0.21 models.py(430):     def _save_m2m(self):
0.21 models.py(451):     def save(self, commit=True):
0.21 models.py(474):     save.alters_data = True
0.21 models.py(477): class ModelForm(BaseModelForm, metaclass=ModelFormMetaclass):
0.21 models.py(477): class ModelForm(BaseModelForm, metaclass=ModelFormMetaclass):
0.21 models.py(478):     pass
0.21 models.py(216):         base_formfield_callback = None
0.21 models.py(217):         for b in bases:
0.21 models.py(218):             if hasattr(b, 'Meta') and hasattr(b.Meta, 'formfield_callback'):
0.21 models.py(217):         for b in bases:
0.21 models.py(222):         formfield_callback = attrs.pop('formfield_callback', base_formfield_callback)
0.21 models.py(224):         new_class = super().__new__(mcs, name, bases, attrs)
0.21 models.py(226):         if bases == (BaseModelForm,):
0.21 models.py(227):             return new_class
0.21 models.py(481): def modelform_factory(model, form=ModelForm, fields=None, exclude=None,
0.21 models.py(482):                       formfield_callback=None, widgets=None, localized_fields=None,
0.21 models.py(483):                       labels=None, help_texts=None, error_messages=None,
0.21 models.py(484):                       field_classes=None):
0.21 models.py(481): def modelform_factory(model, form=ModelForm, fields=None, exclude=None,
0.21 models.py(566): class BaseModelFormSet(BaseFormSet):
0.21 models.py(566): class BaseModelFormSet(BaseFormSet):
0.21 models.py(567):     """
0.21 models.py(570):     model = None
0.21 models.py(573):     unique_fields = set()
0.21 models.py(575):     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,
0.21 models.py(576):                  queryset=None, *, initial=None, **kwargs):
0.21 models.py(575):     def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,
0.21 models.py(581):     def initial_form_count(self):
0.21 models.py(587):     def _existing_object(self, pk):
0.21 models.py(592):     def _get_to_python(self, field):
0.21 models.py(601):     def _construct_form(self, i, **kwargs):
0.21 models.py(635):     def get_queryset(self):
0.21 models.py(654):     def save_new(self, form, commit=True):
0.21 models.py(658):     def save_existing(self, form, instance, commit=True):
0.21 models.py(662):     def delete_existing(self, obj, commit=True):
0.21 models.py(667):     def save(self, commit=True):
0.21 models.py(681):     save.alters_data = True
0.21 models.py(683):     def clean(self):
0.21 models.py(686):     def validate_unique(self):
0.21 models.py(765):     def get_unique_error_message(self, unique_check):
0.21 models.py(775):     def get_date_error_message(self, date_check):
0.21 models.py(785):     def get_form_error(self):
0.21 models.py(788):     def save_existing_objects(self, commit=True):
0.21 models.py(814):     def save_new_objects(self, commit=True):
0.21 models.py(828):     def add_fields(self, form, index):
0.21 models.py(872): def modelformset_factory(model, form=ModelForm, formfield_callback=None,
0.21 models.py(873):                          formset=BaseModelFormSet, extra=1, can_delete=False,
0.21 models.py(874):                          can_order=False, max_num=None, fields=None, exclude=None,
0.21 models.py(875):                          widgets=None, validate_max=False, localized_fields=None,
0.21 models.py(876):                          labels=None, help_texts=None, error_messages=None,
0.21 models.py(877):                          min_num=None, validate_min=False, field_classes=None,
0.21 models.py(878):                          absolute_max=None, can_delete_extra=True, renderer=None):
0.21 models.py(872): def modelformset_factory(model, form=ModelForm, formfield_callback=None,
0.21 models.py(904): class BaseInlineFormSet(BaseModelFormSet):
0.21 models.py(904): class BaseInlineFormSet(BaseModelFormSet):
0.21 models.py(905):     """A formset for child objects related to a parent."""
0.21 models.py(906):     def __init__(self, data=None, files=None, instance=None,
0.21 models.py(929):     def initial_form_count(self):
0.21 models.py(934):     def _construct_form(self, i, **kwargs):
0.21 models.py(957):     @classmethod
0.21 models.py(958):     def get_default_prefix(cls):
0.21 models.py(961):     def save_new(self, form, commit=True):
0.21 models.py(968):     def add_fields(self, form, index):
0.21 models.py(999):     def get_unique_error_message(self, unique_check):
0.21 models.py(1004): def _get_foreign_key(parent_model, model, fk_name=None, can_fail=False):
0.21 models.py(1072): def inlineformset_factory(parent_model, model, form=ModelForm,
0.21 models.py(1073):                           formset=BaseInlineFormSet, fk_name=None,
0.21 models.py(1074):                           fields=None, exclude=None, extra=3, can_order=False,
0.21 models.py(1075):                           can_delete=True, max_num=None, formfield_callback=None,
0.21 models.py(1076):                           widgets=None, validate_max=False, localized_fields=None,
0.21 models.py(1077):                           labels=None, help_texts=None, error_messages=None,
0.21 models.py(1078):                           min_num=None, validate_min=False, field_classes=None,
0.21 models.py(1079):                           absolute_max=None, can_delete_extra=True, renderer=None):
0.21 models.py(1072): def inlineformset_factory(parent_model, model, form=ModelForm,
0.21 models.py(1120): class InlineForeignKeyField(Field):
0.21 models.py(1120): class InlineForeignKeyField(Field):
0.21 models.py(1121):     """
0.21 models.py(1125):     widget = HiddenInput
0.21 test_model_choice_iterator_value_unhashable (test_coverup_django__django-14915.ModelChoiceIteratorValueHashableTest)
Test that using ModelChoiceIteratorValue as a dictionary key does not raise TypeError. ... ok

----------------------------------------------------------------------
Ran 1 test in 0.000s

OK
models.py(1127):         'invalid_choice': _('The inline value did not match the parent instance.'),
0.21 models.py(1126):     default_error_messages = {
0.21 models.py(1130):     def __init__(self, parent_instance, *args, pk_field=False, to_field=None, **kwargs):
0.21 models.py(1142):     def clean(self, value):
0.21 models.py(1157):     def has_changed(self, initial, data):
0.21 models.py(1161): class ModelChoiceIteratorValue:
0.21 models.py(1161): class ModelChoiceIteratorValue:
0.21 models.py(1162):     def __init__(self, value, instance):
0.21 models.py(1166):     def __str__(self):
0.21 models.py(1169):     def __hash__(self):
0.21 models.py(1172):     def __eq__(self, other):
0.21 models.py(1178): class ModelChoiceIterator:
0.21 models.py(1178): class ModelChoiceIterator:
0.21 models.py(1179):     def __init__(self, field):
0.21 models.py(1183):     def __iter__(self):
0.21 models.py(1193):     def __len__(self):
0.21 models.py(1199):     def __bool__(self):
0.21 models.py(1202):     def choice(self, obj):
0.21 models.py(1209): class ModelChoiceField(ChoiceField):
0.21 models.py(1209): class ModelChoiceField(ChoiceField):
0.21 models.py(1210):     """A ChoiceField whose choices are a model QuerySet."""
0.21 models.py(1214):         'invalid_choice': _('Select a valid choice. That choice is not one of'
0.21 models.py(1213):     default_error_messages = {
0.21 models.py(1217):     iterator = ModelChoiceIterator
0.21 models.py(1219):     def __init__(self, queryset, *, empty_label="---------",
0.21 models.py(1220):                  required=True, widget=None, label=None, initial=None,
0.21 models.py(1221):                  help_text='', to_field_name=None, limit_choices_to=None,
0.21 models.py(1222):                  blank=False, **kwargs):
0.21 models.py(1219):     def __init__(self, queryset, *, empty_label="---------",
0.21 models.py(1240):     def get_limit_choices_to(self):
0.21 models.py(1250):     def __deepcopy__(self, memo):
0.21 models.py(1257):     def _get_queryset(self):
0.21 models.py(1260):     def _set_queryset(self, queryset):
0.21 models.py(1264):     queryset = property(_get_queryset, _set_queryset)
0.21 models.py(1268):     def label_from_instance(self, obj):
0.21 models.py(1276):     def _get_choices(self):
0.21 models.py(1291):     choices = property(_get_choices, ChoiceField._set_choices)
0.21 models.py(1293):     def prepare_value(self, value):
0.21 models.py(1301):     def to_python(self, value):
0.21 models.py(1317):     def validate(self, value):
0.21 models.py(1320):     def has_changed(self, initial, data):
0.21 models.py(1328): class ModelMultipleChoiceField(ModelChoiceField):
0.21 models.py(1328): class ModelMultipleChoiceField(ModelChoiceField):
0.21 models.py(1329):     """A MultipleChoiceField whose choices are a model QuerySet."""
0.21 models.py(1330):     widget = SelectMultiple
0.21 models.py(1331):     hidden_widget = MultipleHiddenInput
0.21 models.py(1333):         'invalid_list': _('Enter a list of values.'),
0.21 models.py(1334):         'invalid_choice': _('Select a valid choice. %(value)s is not one of the'
0.21 models.py(1336):         'invalid_pk_value': _('“%(pk)s” is not a valid value.')
0.21 models.py(1332):     default_error_messages = {
0.21 models.py(1339):     def __init__(self, queryset, **kwargs):
0.21 models.py(1342):     def to_python(self, value):
0.21 models.py(1347):     def clean(self, value):
0.21 models.py(1364):     def _check_values(self, value):
0.21 models.py(1401):     def prepare_value(self, value):
0.21 models.py(1409):     def has_changed(self, initial, data):
0.21 models.py(1423): def modelform_defines_fields(form_class):
Testing against Django installed in '/testbed/django'
Found 1 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
0.60 models.py(1163):         self.value = value
0.60 models.py(1164):         self.instance = instance
0.60 models.py(1170):         return hash(self.value)
+ cat coverage.cover
{"/testbed/django/forms/models.py": {"5": 1, "7": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "17": 1, "18": 1, "20": 1, "27": 1, "30": 1, "71": 1, "96": 1, "112": 2, "115": 1, "201": 2, "214": 2, "286": 2, "477": 2, "481": 2, "482": 1, "483": 1, "484": 1, "566": 2, "872": 2, "873": 1, "874": 1, "875": 1, "876": 1, "877": 1, "878": 1, "904": 2, "1004": 1, "1072": 2, "1073": 1, "1074": 1, "1075": 1, "1076": 1, "1077": 1, "1078": 1, "1079": 1, "1120": 2, "1161": 2, "1178": 2, "1209": 2, "1328": 2, "1423": 1, "35": 0, "36": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "51": 0, "50": 0, "52": 0, "53": 0, "55": 0, "58": 0, "59": 0, "61": 0, "63": 0, "64": 0, "66": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "107": 0, "108": 0, "146": 0, "147": 0, "148": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "180": 0, "181": 0, "182": 0, "183": 0, "185": 0, "187": 0, "188": 0, "189": 0, "190": 0, "192": 0, "193": 0, "194": 0, "195": 0, "198": 0, "196": 0, "202": 1, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "215": 1, "216": 1, "217": 2, "218": 1, "219": 0, "220": 0, "222": 1, "224": 1, "226": 1, "227": 1, "229": 0, "234": 0, "235": 0, "236": 0, "237": 0, "239": 0, "240": 0, "241": 0, "238": 0, "243": 0, "245": 0, "247": 0, "248": 0, "249": 0, "251": 0, "254": 0, "257": 0, "259": 0, "260": 0, "261": 0, "262": 0, "264": 0, "268": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "277": 0, "279": 0, "281": 0, "283": 0, "287": 2, "288": 1, "289": 1, "290": 1, "316": 1, "357": 1, "361": 1, "389": 1, "419": 1, "430": 1, "451": 1, "474": 1, "291": 0, "292": 0, "293": 0, "294": 0, "296": 0, "297": 0, "299": 0, "300": 0, "302": 0, "303": 0, "307": 0, "308": 0, "309": 0, "310": 0, "311": 0, "313": 0, "314": 0, "321": 0, "324": 0, "325": 0, "328": 0, "329": 0, "334": 0, "335": 0, "336": 0, "337": 0, "341": 0, "342": 0, "351": 0, "352": 0, "353": 0, "354": 0, "355": 0, "358": 0, "359": 0, "364": 0, "368": 0, "369": 0, "371": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "380": 0, "382": 0, "383": 0, "384": 0, "385": 0, "387": 0, "390": 0, "392": 0, "401": 0, "402": 0, "403": 0, "405": 0, "406": 0, "407": 0, "408": 0, "410": 0, "411": 0, "412": 0, "413": 0, "416": 0, "417": 0, "424": 0, "425": 0, "426": 0, "427": 0, "428": 0, "434": 0, "435": 0, "436": 0, "437": 0, "441": 0, "442": 0, "443": 0, "444": 0, "445": 0, "446": 0, "447": 0, "448": 0, "449": 0, "457": 0, "458": 0, "459": 0, "460": 0, "461": 0, "464": 0, "466": 0, "467": 0, "471": 0, "472": 0, "478": 1, "520": 0, "521": 0, "522": 0, "523": 0, "524": 0, "525": 0, "526": 0, "527": 0, "528": 0, "529": 0, "530": 0, "531": 0, "532": 0, "533": 0, "534": 0, "535": 0, "536": 0, "540": 0, "541": 0, "542": 0, "543": 0, "545": 0, "549": 0, "550": 0, "548": 0, "553": 0, "554": 0, "555": 0, "556": 0, "561": 0, "570": 1, "573": 1, "575": 2, "576": 1, "581": 1, "587": 1, "592": 1, "601": 1, "635": 1, "654": 1, "658": 1, "662": 1, "667": 1, "681": 1, "683": 1, "686": 1, "765": 1, "775": 1, "785": 1, "788": 1, "814": 1, "828": 1, "577": 0, "578": 0, "579": 0, "583": 0, "584": 0, "585": 0, "588": 0, "589": 0, "590": 0, "597": 0, "598": 0, "599": 0, "602": 0, "603": 0, "604": 0, "605": 0, "606": 0, "607": 0, "608": 0, "611": 0, "613": 0, "614": 0, "615": 0, "616": 0, "619": 0, "621": 0, "623": 0, "624": 0, "626": 0, "627": 0, "628": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "636": 0, "637": 0, "638": 0, "640": 0, "645": 0, "646": 0, "651": 0, "652": 0, "656": 0, "660": 0, "664": 0, "665": 0, "672": 0, "673": 0, "675": 0, "678": 0, "679": 0, "676": 0, "677": 0, "684": 0, "688": 0, "689": 0, "690": 0, "691": 0, "692": 0, "693": 0, "694": 0, "695": 0, "696": 0, "698": 0, "700": 0, "701": 0, "702": 0, "704": 0, "706": 0, "709": 0, "713": 0, "715": 0, "717": 0, "720": 0, "721": 0, "722": 0, "723": 0, "726": 0, "727": 0, "728": 0, "730": 0, "732": 0, "733": 0, "734": 0, "735": 0, "737": 0, "738": 0, "740": 0, "741": 0, "742": 0, "746": 0, "747": 0, "749": 0, "752": 0, "753": 0, "754": 0, "755": 0, "758": 0, "760": 0, "762": 0, "763": 0, "705": 0, "710": 0, "712": 0, "766": 0, "767": 0, "768": 0, "771": 0, "772": 0, "776": 0, "777": 0, "780": 0, "781": 0, "782": 0, "779": 0, "786": 0, "789": 0, "790": 0, "791": 0, "792": 0, "794": 0, "795": 0, "796": 0, "797": 0, "802": 0, "803": 0, "804": 0, "805": 0, "806": 0, "807": 0, "808": 0, "809": 0, "810": 0, "811": 0, "812": 0, "815": 0, "816": 0, "817": 0, "818": 0, "821": 0, "822": 0, "823": 0, "824": 0, "825": 0, "826": 0, "830": 0, "831": 0, "838": 0, "845": 0, "846": 0, "850": 0, "852": 0, "853": 0, "854": 0, "856": 0, "857": 0, "858": 0, "859": 0, "860": 0, "862": 0, "863": 0, "864": 0, "865": 0, "867": 0, "868": 0, "869": 0, "840": 0, "841": 0, "842": 0, "839": 0, "880": 0, "881": 0, "882": 0, "883": 0, "884": 0, "888": 0, "889": 0, "890": 0, "891": 0, "892": 0, "893": 0, "894": 0, "895": 0, "896": 0, "897": 0, "898": 0, "899": 0, "906": 1, "929": 1, "934": 1, "957": 1, "958": 1, "961": 1, "968": 1, "999": 1, "908": 0, "909": 0, "911": 0, "912": 0, "913": 0, "914": 0, "915": 0, "916": 0, "918": 0, "919": 0, "920": 0, "924": 0, "925": 0, "926": 0, "927": 0, "930": 0, "931": 0, "932": 0, "935": 0, "936": 0, "937": 0, "939": 0, "940": 0, "943": 0, "945": 0, "946": 0, "947": 0, "950": 0, "951": 0, "952": 0, "953": 0, "954": 0, "955": 0, "959": 0, "965": 0, "966": 0, "969": 0, "970": 0, "971": 0, "972": 0, "976": 0, "978": 0, "977": 0, "984": 0, "985": 0, "989": 0, "990": 0, "991": 0, "993": 0, "994": 0, "995": 0, "997": 0, "1000": 0, "1001": 0, "1013": 0, "1014": 0, "1015": 0, "1016": 0, "1017": 0, "1018": 0, "1019": 0, "1020": 0, "1022": 0, "1023": 0, "1026": 0, "1027": 0, "1028": 0, "1030": 0, "1031": 0, "1033": 0, "1034": 0, "1035": 0, "1039": 0, "1040": 0, "1041": 0, "1050": 0, "1051": 0, "1052": 0, "1053": 0, "1054": 0, "1055": 0, "1056": 0, "1057": 0, "1058": 0, "1062": 0, "1063": 0, "1065": 0, "1066": 0, "1064": 0, "1069": 0, "1042": 0, "1043": 0, "1044": 0, "1045": 0, "1046": 0, "1086": 0, "1088": 0, "1089": 0, "1091": 0, "1092": 0, "1093": 0, "1094": 0, "1095": 0, "1096": 0, "1097": 0, "1098": 0, "1099": 0, "1100": 0, "1101": 0, "1102": 0, "1103": 0, "1104": 0, "1105": 0, "1106": 0, "1107": 0, "1108": 0, "1109": 0, "1110": 0, "1111": 0, "1090": 0, "1113": 0, "1114": 0, "1115": 0, "1125": 1, "1127": 1, "1126": 1, "1130": 1, "1142": 1, "1157": 1, "1131": 0, "1132": 0, "1133": 0, "1134": 0, "1135": 0, "1136": 0, "1138": 0, "1139": 0, "1140": 0, "1143": 0, "1144": 0, "1145": 0, "1147": 0, "1149": 0, "1150": 0, "1152": 0, "1153": 0, "1154": 0, "1155": 0, "1158": 0, "1162": 1, "1166": 1, "1169": 1, "1172": 1, "1163": 1, "1164": 1, "1167": 0, "1170": 1, "1173": 0, "1174": 0, "1175": 0, "1179": 1, "1183": 1, "1193": 1, "1199": 1, "1202": 1, "1180": 0, "1181": 0, "1184": 0, "1185": 0, "1186": 0, "1188": 0, "1189": 0, "1190": 0, "1191": 0, "1197": 0, "1200": 0, "1204": 0, "1205": 0, "1203": 0, "1214": 1, "1213": 1, "1217": 1, "1219": 2, "1220": 1, "1221": 1, "1222": 1, "1240": 1, "1250": 1, "1257": 1, "1260": 1, "1264": 1, "1268": 1, "1276": 1, "1291": 1, "1293": 1, "1301": 1, "1317": 1, "1320": 1, "1225": 0, "1226": 0, "1227": 0, "1230": 0, "1229": 0, "1231": 0, "1233": 0, "1235": 0, "1236": 0, "1237": 0, "1238": 0, "1246": 0, "1247": 0, "1248": 0, "1251": 0, "1253": 0, "1254": 0, "1255": 0, "1258": 0, "1261": 0, "1262": 0, "1274": 0, "1279": 0, "1280": 0, "1289": 0, "1294": 0, "1295": 0, "1296": 0, "1298": 0, "1299": 0, "1302": 0, "1303": 0, "1304": 0, "1305": 0, "1306": 0, "1307": 0, "1308": 0, "1309": 0, "1310": 0, "1311": 0, "1312": 0, "1313": 0, "1315": 0, "1318": 0, "1321": 0, "1322": 0, "1323": 0, "1324": 0, "1325": 0, "1330": 1, "1331": 1, "1333": 1, "1334": 1, "1336": 1, "1332": 1, "1339": 1, "1342": 1, "1347": 1, "1364": 1, "1401": 1, "1409": 1, "1340": 0, "1343": 0, "1344": 0, "1345": 0, "1348": 0, "1349": 0, "1350": 0, "1351": 0, "1352": 0, "1353": 0, "1354": 0, "1355": 0, "1356": 0, "1358": 0, "1361": 0, "1362": 0, "1370": 0, "1373": 0, "1374": 0, "1375": 0, "1377": 0, "1378": 0, "1379": 0, "1381": 0, "1382": 0, "1383": 0, "1384": 0, "1385": 0, "1386": 0, "1387": 0, "1388": 0, "1390": 0, "1391": 0, "1392": 0, "1393": 0, "1394": 0, "1395": 0, "1396": 0, "1397": 0, "1399": 0, "1402": 0, "1403": 0, "1404": 0, "1405": 0, "1406": 0, "1407": 0, "1410": 0, "1411": 0, "1412": 0, "1413": 0, "1414": 0, "1415": 0, "1416": 0, "1417": 0, "1418": 0, "1419": 0, "1420": 0, "1424": 0, "1425": 0, "1426": 0}}
+ git checkout 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4
Note: switching to '903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 903aaa35e5 Fixed #33159 -- Reverted "Fixed #32970 -- Changed WhereNode.clone() to create a shallow copy of children."
M	django/forms/models.py
+ git apply /root/pre_state.patch
error: unrecognized input
