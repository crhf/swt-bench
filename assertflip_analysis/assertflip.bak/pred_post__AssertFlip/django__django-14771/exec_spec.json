{"instance_id": "django__django-14771", "repo": "django/django", "version": "4.1", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9", "patch_list": ["diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -220,6 +220,11 @@ def get_child_arguments():\n     py_script = Path(sys.argv[0])\n \n     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]\n+    if sys.implementation.name == 'cpython':\n+        args.extend(\n+            f'-X{key}' if value is True else f'-X{key}={value}'\n+            for key, value in sys._xoptions.items()\n+        )\n     # __spec__ is set when the server was started with the `-m` option,\n     # see https://docs.python.org/3/reference/import.html#main-spec\n     # __spec__ may not exist, e.g. when running in a Conda env.\n", "diff --git a/dev/null b/tests/test_coverup_django__django-14771.py\nnew file mode 100644\nindex e69de29..69f07a0 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-14771.py\n@@ -0,0 +1,55 @@\n+from django.test import SimpleTestCase\n+import subprocess\n+import os\n+import time\n+\n+class AutoReloaderXOptionsTest(SimpleTestCase):\n+    def test_auto_reloader_x_options(self):\n+        \"\"\"\n+        Test that the auto-reloader correctly passes the -X utf8 option on Windows.\n+        The test should fail if the bug is present, indicating incorrect behavior.\n+        \"\"\"\n+        # Create a temporary manage.py file with a print statement for the encoding\n+        manage_py_content = \"\"\"\n+import sys\n+with open(__file__, mode=\"r\") as stream:\n+    print(\"=== %s\" % stream.encoding)\n+\"\"\"\n+        with open('manage.py', 'w') as f:\n+            f.write(manage_py_content)\n+\n+        # Run the Django server with the -X utf8 option and auto-reloader enabled\n+        process = subprocess.Popen(\n+            ['python', '-X', 'utf8', 'manage.py', 'runserver', '0.0.0.0:8005', '-v3'],\n+            stdout=subprocess.PIPE,\n+            stderr=subprocess.PIPE,\n+            text=True\n+        )\n+\n+        # Allow some time for the server to start\n+        time.sleep(5)\n+\n+        # Capture the initial output\n+        stdout, stderr = process.communicate(timeout=10)\n+\n+        # Check if the initial output contains 'UTF-8'\n+        initial_encoding = '=== utf-8' in stdout\n+\n+        # Modify the manage.py file to trigger the auto-reloader\n+        with open('manage.py', 'a') as f:\n+            f.write(\"# Trigger reload\\n\")\n+\n+        # Allow some time for the reload to occur\n+        time.sleep(5)\n+\n+        # Capture the output after reload\n+        stdout, stderr = process.communicate(timeout=10)\n+\n+        # Check if the output after reload contains 'utf-8', which indicates the bug is present\n+        reload_encoding_bug = '=== utf-8' in stdout\n+\n+        # Assert that the encoding does not remain 'utf-8', indicating the bug\n+        self.assertFalse(initial_encoding and reload_encoding_bug)\n+\n+        # Cleanup: remove the manage.py file\n+        os.remove('manage.py')\n"], "arch": "x86_64", "base_commit": "4884a87e022056eda10534c13d74e49b8cdda632", "test_directives": ["test_coverup_django__django-14771"], "coverage_files": ["django/utils/autoreload.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/utils/autoreload\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14771", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.4.1\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}