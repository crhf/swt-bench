{"instance_id": "pytest-dev__pytest-5262", "repo": "pytest-dev/pytest", "version": "4.5", "environment_setup_commit": "693c3b7f61d4d32f8927a74f34ce8ac56d63958e", "patch_list": ["diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -447,6 +447,10 @@ def name(self):\n         \"\"\"Ensure that file.name is a string.\"\"\"\n         return repr(self.buffer)\n \n+    @property\n+    def mode(self):\n+        return self.buffer.mode.replace(\"b\", \"\")\n+\n     def __getattr__(self, name):\n         return getattr(object.__getattribute__(self, \"buffer\"), name)\n \n", "diff --git a/dev/null b/testing/test_coverup_pytest-dev__pytest-5262.py\nnew file mode 100644\nindex e69de29..f42407e 100644\n--- /dev/null\n+++ b/testing/test_coverup_pytest-dev__pytest-5262.py\n@@ -0,0 +1,19 @@\n+import pytest\n+from _pytest.capture import EncodedFile\n+import six\n+\n+def test_encoded_file_write_bytes():\n+    # Create a mock buffer to simulate the file\n+    class MockBuffer:\n+        def write(self, obj):\n+            # Simulate writing to a buffer\n+            pass\n+\n+    # Create an instance of EncodedFile with a mock buffer\n+    buffer = MockBuffer()\n+    encoded_file = EncodedFile(buffer, 'utf-8')\n+\n+    # Attempt to write bytes to the EncodedFile\n+    # This should raise an exception due to the bug\n+    with pytest.raises(TypeError, match=\"write() argument must be str, not bytes\"):\n+        encoded_file.write(b\"test bytes\")\n"], "arch": "x86_64", "base_commit": "58e6a09db49f34886ff13f3b7520dd0bcd7063cd", "test_directives": ["testing/test_coverup_pytest-dev__pytest-5262.py"], "coverage_files": ["src/_pytest/capture.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "install": "python -m pip install -e .", "pip_packages": ["atomicwrites==1.4.1", "attrs==23.1.0", "more-itertools==10.1.0", "pluggy==0.11.0", "py==1.11.0", "setuptools==68.0.0", "six==1.16.0", "wcwidth==0.2.6"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(src/_pytest/capture\\.py)' -m pytest -rA testing/test_coverup_pytest-dev__pytest-5262.py", "req_install_commands": ["conda create -n testbed python=3.9  -y"]}