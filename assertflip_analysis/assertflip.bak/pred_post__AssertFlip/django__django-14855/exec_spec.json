{"instance_id": "django__django-14855", "repo": "django/django", "version": "4.0", "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4", "patch_list": ["diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py\n--- a/django/contrib/admin/helpers.py\n+++ b/django/contrib/admin/helpers.py\n@@ -209,7 +209,11 @@ def get_admin_url(self, remote_field, remote_obj):\n             remote_field.model._meta.model_name,\n         )\n         try:\n-            url = reverse(url_name, args=[quote(remote_obj.pk)])\n+            url = reverse(\n+                url_name,\n+                args=[quote(remote_obj.pk)],\n+                current_app=self.model_admin.admin_site.name,\n+            )\n             return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n         except NoReverseMatch:\n             return str(remote_obj)\n", "diff --git a/dev/null b/tests/test_coverup_django__django-14855.py\nnew file mode 100644\nindex e69de29..6bdedd3 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-14855.py\n@@ -0,0 +1,66 @@\n+from django.test import SimpleTestCase\n+from django.contrib.admin.sites import AdminSite\n+from django.contrib.admin import ModelAdmin\n+from django.contrib.admin.helpers import AdminReadonlyField\n+from django.urls import reverse, NoReverseMatch\n+from django.utils.html import format_html\n+from django.db import models\n+from django import forms\n+\n+# Define the models within the test app\n+class RelatedModel(models.Model):\n+    name = models.CharField(max_length=100)\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+class MainModel(models.Model):\n+    related = models.ForeignKey(RelatedModel, on_delete=models.CASCADE)\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+# ModelAdmin for MainModel\n+class MainModelAdmin(ModelAdmin):\n+    readonly_fields = ['related']\n+\n+# Custom Admin Site\n+class CustomAdminSite(AdminSite):\n+    site_header = 'Custom Admin'\n+    name = 'custom-admin'\n+\n+# Dummy form to pass to AdminReadonlyField\n+class DummyForm(forms.ModelForm):\n+    class Meta:\n+        model = MainModel\n+        fields = '__all__'\n+\n+# Test case\n+class AdminURLTest(SimpleTestCase):\n+    def setUp(self):\n+        self.site = CustomAdminSite()\n+        self.site.register(MainModel, MainModelAdmin)\n+        self.related_instance = RelatedModel(name='Related')\n+        self.main_instance = MainModel(related=self.related_instance)\n+        self.model_admin = self.site._registry[MainModel]\n+        self.form = DummyForm(instance=self.main_instance)\n+\n+    def test_get_admin_url_for_readonly_foreignkey(self):\n+        # Create an AdminReadonlyField instance\n+        field = AdminReadonlyField(\n+            form=self.form,\n+            field='related',\n+            is_first=False,\n+            model_admin=self.model_admin\n+        )\n+        \n+        # Simulate the get_admin_url method\n+        url_name = 'admin:%s_%s_change' % (RelatedModel._meta.app_label, RelatedModel._meta.model_name)\n+        try:\n+            url = reverse(url_name, args=[self.related_instance.pk], current_app=self.model_admin.admin_site.name)\n+            url = format_html('<a href=\"{}\">{}</a>', url, self.related_instance)\n+        except NoReverseMatch:\n+            url = '/admin/'  # Simulate the incorrect behavior\n+        \n+        # Assert the URL starts with '/custom-admin/' which is the correct behavior\n+        self.assertTrue(url.startswith('/custom-admin/'))\n"], "arch": "x86_64", "base_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4", "test_directives": ["test_coverup_django__django-14855"], "coverage_files": ["django/contrib/admin/helpers.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.8", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/contrib/admin/helpers\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14855", "req_install_commands": ["conda create -n testbed python=3.8 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}