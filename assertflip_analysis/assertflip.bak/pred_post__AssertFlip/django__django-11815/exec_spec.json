{"instance_id": "django__django-11815", "repo": "django/django", "version": "3.1", "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab", "patch_list": ["diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -120,9 +120,10 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n-        v_string, v_imports = serializer_factory(self.value.value).serialize()\n-        imports = {'import %s' % module, *v_imports}\n-        return \"%s.%s(%s)\" % (module, enum_class.__name__, v_string), imports\n+        return (\n+            '%s.%s[%r]' % (module, enum_class.__name__, self.value.name),\n+            {'import %s' % module},\n+        )\n \n \n class FloatSerializer(BaseSimpleSerializer):\n", "diff --git a/dev/null b/tests/test_coverup_django__django-11815.py\nnew file mode 100644\nindex e69de29..5efb023 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-11815.py\n@@ -0,0 +1,25 @@\n+from django.test import SimpleTestCase\n+from django.db.migrations.serializer import EnumSerializer\n+from enum import Enum\n+from django.utils.translation import gettext_lazy as _\n+\n+class Status(Enum):\n+    GOOD = _('Good')  # 'Good' will be translated\n+    BAD = _('Bad')    # 'Bad' will be translated\n+\n+    def __str__(self):\n+        return self.name\n+\n+class MigrationTest(SimpleTestCase):\n+    def test_enum_serialization_bug(self):\n+        \"\"\"\n+        Test to expose the bug where the migration file uses the translated value\n+        of an Enum object instead of its name, which causes issues when the value\n+        is translated to another language.\n+        \"\"\"\n+        # Use EnumSerializer directly to simulate the serialization process\n+        serializer = EnumSerializer(Status.GOOD)\n+        serialized_value, _ = serializer.serialize()\n+\n+        # Check if the serialized value contains the enum name instead of the translated value\n+        self.assertIn(\"Status['GOOD']\", serialized_value)\n"], "arch": "x86_64", "base_commit": "e02f67ef2d03d48128e7a118bf75f0418e24e8ac", "test_directives": ["test_coverup_django__django-11815"], "coverage_files": ["django/db/migrations/serializer.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "requirements.txt", "install": "python -m pip install -e .", "eval_commands": ["sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen", "export LANG=en_US.UTF-8", "export LANGUAGE=en_US:en", "export LC_ALL=en_US.UTF-8"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/serializer\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-11815", "req_install_commands": ["conda create -n testbed python=3.6 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.2\nargon2-cffi >= 16.1.0\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}