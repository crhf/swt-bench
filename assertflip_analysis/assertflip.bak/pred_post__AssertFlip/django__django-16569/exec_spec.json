{"instance_id": "django__django-16569", "repo": "django/django", "version": "5.0", "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7", "patch_list": ["diff --git a/django/forms/formsets.py b/django/forms/formsets.py\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -490,7 +490,9 @@ def add_fields(self, form, index):\n                     required=False,\n                     widget=self.get_ordering_widget(),\n                 )\n-        if self.can_delete and (self.can_delete_extra or index < initial_form_count):\n+        if self.can_delete and (\n+            self.can_delete_extra or (index is not None and index < initial_form_count)\n+        ):\n             form.fields[DELETION_FIELD_NAME] = BooleanField(\n                 label=_(\"Delete\"),\n                 required=False,\n", "diff --git a/dev/null b/tests/test_coverup_django__django-16569.py\nnew file mode 100644\nindex e69de29..09b3f53 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-16569.py\n@@ -0,0 +1,32 @@\n+from django import forms\n+from django.test import SimpleTestCase\n+from django.conf import settings\n+from django.forms import formset_factory\n+\n+# Ensure settings are configured only once\n+if not settings.configured:\n+    settings.configure(\n+        DEBUG=True,\n+        MIDDLEWARE_CLASSES=[],\n+        ROOT_URLCONF=__name__,\n+    )\n+\n+class MyForm(forms.Form):\n+    my_field = forms.CharField()\n+\n+class FormsetAddFieldsTest(SimpleTestCase):\n+    def test_add_fields_with_none_index(self):\n+        # Create a FormSet with can_delete=True and can_delete_extra=False\n+        MyFormSet = formset_factory(\n+            form=MyForm,\n+            can_delete=True,\n+            can_delete_extra=False,\n+        )\n+        my_formset = MyFormSet(initial=None)\n+\n+        try:\n+            # Access the empty_form property to trigger the bug\n+            _ = my_formset.empty_form\n+        except TypeError as e:\n+            # If a TypeError is raised, the test should fail\n+            self.fail(\"TypeError raised: \" + str(e))\n"], "arch": "x86_64", "base_commit": "278881e37619278789942513916acafaa88d26f3", "test_directives": ["test_coverup_django__django-16569"], "coverage_files": ["django/forms/formsets.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.11", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/formsets\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-16569", "req_install_commands": ["conda create -n testbed python=3.11 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.7.0\nargon2-cffi >= 19.2.0\nbcrypt\nblack\ndocutils\ngeoip2; python_version < '3.12'\njinja2 >= 2.11.0\nnumpy; python_version < '3.12'\nPillow >= 6.2.1; sys.platform != 'win32' or python_version < '3.12'\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.4.0\nselenium >= 4.8.0\nsqlparse >= 0.3.1\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}