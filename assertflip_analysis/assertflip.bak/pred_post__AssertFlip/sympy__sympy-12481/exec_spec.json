{"instance_id": "sympy__sympy-12481", "repo": "sympy/sympy", "version": "1.0", "environment_setup_commit": "50b81f9f6be151014501ffac44e5dc6b2416938f", "patch_list": ["diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py\n--- a/sympy/combinatorics/permutations.py\n+++ b/sympy/combinatorics/permutations.py\n@@ -895,12 +895,8 @@ def __new__(cls, *args, **kwargs):\n         # counting starts from 1.\n \n         temp = flatten(args)\n-        if has_dups(temp):\n-            if is_cycle:\n-                raise ValueError('there were repeated elements; to resolve '\n-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))\n-            else:\n-                raise ValueError('there were repeated elements.')\n+        if has_dups(temp) and not is_cycle:\n+            raise ValueError('there were repeated elements.')\n         temp = set(temp)\n \n         if not is_cycle and \\\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-12481.py\nnew file mode 100644\nindex e69de29..9bcc853 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-12481.py\n@@ -0,0 +1,8 @@\n+from sympy.combinatorics.permutations import Permutation\n+\n+def test_permutation_non_disjoint_cycles_bug():\n+    # Test for non-disjoint cycles in Permutation constructor\n+    # The expected behavior is to construct the identity permutation\n+\n+    p = Permutation([[0, 1], [0, 1]])\n+    assert p.array_form == [0, 1]  # This should construct an identity permutation\n"], "arch": "x86_64", "base_commit": "c807dfe7569692cad24f02a08477b70c1679a4dd", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-12481.py"], "coverage_files": ["sympy/combinatorics/permutations.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/combinatorics/permutations\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-12481.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}