+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD 5f7a3a74aab1625c2bb65f643197ee885e3da576
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
nothing to commit, working tree clean
+ git show
commit 5f7a3a74aab1625c2bb65f643197ee885e3da576
Author: Cory Benfield <lukasaoz@gmail.com>
Date:   Tue Dec 15 15:29:27 2015 +0000

    v2.9.0

diff --git a/HISTORY.rst b/HISTORY.rst
index 825cd274..d2bbdd91 100644
--- a/HISTORY.rst
+++ b/HISTORY.rst
@@ -3,8 +3,8 @@
 Release History
 ---------------
 
-dev (XXXX)
-++++++++++
+2.9.0 (2015-12-15)
+++++++++++++++++++
 
 **Minor Improvements** (Backwards compatible)
 
diff --git a/requests/__init__.py b/requests/__init__.py
index f7924dc8..35987f95 100644
--- a/requests/__init__.py
+++ b/requests/__init__.py
@@ -42,8 +42,8 @@ is at <http://python-requests.org>.
 """
 
 __title__ = 'requests'
-__version__ = '2.8.1'
-__build__ = 0x020801
+__version__ = '2.9.0'
+__build__ = 0x020900
 __author__ = 'Kenneth Reitz'
 __license__ = 'Apache 2.0'
 __copyright__ = 'Copyright 2015 Kenneth Reitz'
+ git diff 5f7a3a74aab1625c2bb65f643197ee885e3da576
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install .
Processing /testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Building wheels for collected packages: requests
  DEPRECATION: Building 'requests' using the legacy setup.py bdist_wheel mechanism, which will be removed in a future version. pip 25.3 will enforce this behaviour change. A possible replacement is to use the standardized build interface by setting the `--use-pep517` option, (possibly combined with `--no-build-isolation`), or adding a `pyproject.toml` file to the source tree of 'requests'. Discussion can be found at https://github.com/pypa/pip/issues/6334
  Building wheel for requests (setup.py): started
  Building wheel for requests (setup.py): finished with status 'done'
  Created wheel for requests: filename=requests-2.9.0-py2.py3-none-any.whl size=491766 sha256=18a061c8d496201af80c186dfe9afda8666ad55a6653462e2301f18f9f60597d
  Stored in directory: /tmp/pip-ephem-wheel-cache-lulmylrc/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built requests
Installing collected packages: requests
  Attempting uninstall: requests
    Found existing installation: requests 2.9.0
    Uninstalling requests-2.9.0:
      Successfully uninstalled requests-2.9.0
Successfully installed requests-2.9.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch requests/models.py...
Applied patch requests/models.py cleanly.
+ git apply -v -
Checking patch test_coverup_psf__requests-2931.py...
Applied patch test_coverup_psf__requests-2931.py cleanly.
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(requests/models\.py)' -m pytest --no-header -rA -p no:cacheprovider test_coverup_psf__requests-2931.py
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(requests/models\\.py)']
============================= test session starts ==============================
collected 1 item

test_coverup_psf__requests-2931.py .                                     [100%]

=============================== warnings summary ===============================
requests/packages/urllib3/connectionpool.py:99
  /testbed/requests/packages/urllib3/connectionpool.py:99: DeprecationWarning: invalid escape sequence \*
    """

requests/packages/urllib3/connectionpool.py:439
  /testbed/requests/packages/urllib3/connectionpool.py:439: DeprecationWarning: invalid escape sequence \*
    """

requests/packages/urllib3/connectionpool.py:795
  /testbed/requests/packages/urllib3/connectionpool.py:795: DeprecationWarning: invalid escape sequence \*
    """

requests/packages/urllib3/_collections.py:2
requests/packages/urllib3/_collections.py:2
  /testbed/requests/packages/urllib3/_collections.py:2: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
    from collections import Mapping, MutableMapping

requests/packages/urllib3/poolmanager.py:33
  /testbed/requests/packages/urllib3/poolmanager.py:33: DeprecationWarning: invalid escape sequence \*
    """

requests/models.py:786
  /testbed/requests/models.py:786: DeprecationWarning: invalid escape sequence \*
    """Returns the json-encoded content of a response, if any.

requests/api.py:57
  /testbed/requests/api.py:57: DeprecationWarning: invalid escape sequence \*
    """Sends a GET request.

requests/api.py:71
  /testbed/requests/api.py:71: DeprecationWarning: invalid escape sequence \*
    """Sends a OPTIONS request.

requests/api.py:84
  /testbed/requests/api.py:84: DeprecationWarning: invalid escape sequence \*
    """Sends a HEAD request.

requests/api.py:97
  /testbed/requests/api.py:97: DeprecationWarning: invalid escape sequence \*
    """Sends a POST request.

requests/api.py:111
  /testbed/requests/api.py:111: DeprecationWarning: invalid escape sequence \*
    """Sends a PUT request.

requests/api.py:124
  /testbed/requests/api.py:124: DeprecationWarning: invalid escape sequence \*
    """Sends a PATCH request.

requests/api.py:137
  /testbed/requests/api.py:137: DeprecationWarning: invalid escape sequence \*
    """Sends a DELETE request.

requests/sessions.py:473
  /testbed/requests/sessions.py:473: DeprecationWarning: invalid escape sequence \*
    """Sends a GET request. Returns :class:`Response` object.

requests/sessions.py:483
  /testbed/requests/sessions.py:483: DeprecationWarning: invalid escape sequence \*
    """Sends a OPTIONS request. Returns :class:`Response` object.

requests/sessions.py:493
  /testbed/requests/sessions.py:493: DeprecationWarning: invalid escape sequence \*
    """Sends a HEAD request. Returns :class:`Response` object.

requests/sessions.py:503
  /testbed/requests/sessions.py:503: DeprecationWarning: invalid escape sequence \*
    """Sends a POST request. Returns :class:`Response` object.

requests/sessions.py:514
  /testbed/requests/sessions.py:514: DeprecationWarning: invalid escape sequence \*
    """Sends a PUT request. Returns :class:`Response` object.

requests/sessions.py:524
  /testbed/requests/sessions.py:524: DeprecationWarning: invalid escape sequence \*
    """Sends a PATCH request. Returns :class:`Response` object.

requests/sessions.py:534
  /testbed/requests/sessions.py:534: DeprecationWarning: invalid escape sequence \*
    """Sends a DELETE request. Returns :class:`Response` object.

test_coverup_psf__requests-2931.py::test_put_request_with_binary_payload
  /testbed/requests/models.py:168: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
    if isinstance(hook, collections.Callable):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
_____________________ test_put_request_with_binary_payload _____________________
----------------------------- Captured stdout call -----------------------------
0.21 models.py(213):         data = [] if data is None else data
0.21 models.py(214):         files = [] if files is None else files
0.21 models.py(215):         headers = {} if headers is None else headers
0.21 models.py(216):         params = {} if params is None else params
0.21 models.py(217):         hooks = {} if hooks is None else hooks
0.21 models.py(219):         self.hooks = default_hooks()
0.21 models.py(220):         for (k, v) in list(hooks.items()):
0.21 models.py(223):         self.method = method
0.21 models.py(224):         self.url = url
0.21 models.py(225):         self.headers = headers
0.21 models.py(226):         self.files = files
0.21 models.py(227):         self.data = data
0.21 models.py(228):         self.json = json
0.21 models.py(229):         self.params = params
0.21 models.py(230):         self.auth = auth
0.21 models.py(231):         self.cookies = cookies
0.21 models.py(275):         self.method = None
0.21 models.py(277):         self.url = None
0.21 models.py(279):         self.headers = None
0.21 models.py(282):         self._cookies = None
0.21 models.py(284):         self.body = None
0.21 models.py(286):         self.hooks = default_hooks()
0.21 models.py(292):         self.prepare_method(method)
0.21 models.py(320):         self.method = method
0.21 models.py(321):         if self.method is not None:
0.21 models.py(322):             self.method = to_native_string(self.method.upper())
0.21 models.py(293):         self.prepare_url(url, params)
0.21 models.py(331):         if isinstance(url, bytes):
0.21 models.py(334):             url = unicode(url) if is_py2 else str(url)
0.21 models.py(339):         if ':' in url and not url.lower().startswith('http'):
0.21 models.py(344):         try:
0.21 models.py(345):             scheme, auth, host, port, path, query, fragment = parse_url(url)
0.21 models.py(349):         if not scheme:
0.21 models.py(355):         if not host:
0.21 models.py(359):         try:
0.21 models.py(360):             host = host.encode('idna').decode('utf-8')
0.21 models.py(365):         netloc = auth or ''
0.21 models.py(366):         if netloc:
0.21 models.py(368):         netloc += host
0.21 models.py(369):         if port:
0.21 models.py(373):         if not path:
0.21 models.py(376):         if is_py2:
0.21 models.py(388):         if isinstance(params, (str, bytes)):
0.21 models.py(391):         enc_params = self._encode_params(params)
0.21 models.py(83):         if isinstance(data, (str, bytes)):
0.21 models.py(85):         elif hasattr(data, 'read'):
0.21 models.py(87):         elif hasattr(data, '__iter__'):
0.21 models.py(88):             result = []
0.21 models.py(89):             for k, vs in to_key_val_list(data):
0.21 models.py(97):             return urlencode(result, doseq=True)
0.21 models.py(392):         if enc_params:
0.21 models.py(398):         url = requote_uri(urlunparse([scheme, netloc, path, None, query, fragment]))
0.21 models.py(399):         self.url = url
0.21 models.py(294):         self.prepare_headers(headers)
0.21 models.py(404):         if headers:
0.21 models.py(405):             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
0.21 models.py(405):             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
0.21 models.py(405):             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
0.21 models.py(405):             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
0.21 models.py(405):             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
0.21 models.py(405):             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
0.21 models.py(295):         self.prepare_cookies(cookies)
0.21 models.py(509):         if isinstance(cookies, cookielib.CookieJar):
0.21 models.py(510):             self._cookies = cookies
0.21 models.py(514):         cookie_header = get_cookie_header(self._cookies, self)
0.21 models.py(515):         if cookie_header is not None:
0.21 models.py(296):         self.prepare_body(data, files, json)
0.21 models.py(416):         body = None
0.21 models.py(417):         content_type = None
0.21 models.py(418):         length = None
0.21 models.py(420):         if not data and json is not None:
0.21 models.py(424):         is_stream = all([
0.21 models.py(425):             hasattr(data, '__iter__'),
0.21 models.py(426):             not isinstance(data, (basestring, list, tuple, dict))
0.21 models.py(424):         is_stream = all([
0.21 models.py(429):         try:
0.21 models.py(430):             length = super_len(data)
0.21 models.py(434):         if is_stream:
0.21 models.py(446):             if files:
0.21 models.py(449):                 if data:
0.21 models.py(450):                     body = self._encode_params(data)
0.21 models.py(83):         if isinstance(data, (str, bytes)):
0.21 models.py(84):             return data
0.21 models.py(451):                     if isinstance(data, basestring) or hasattr(data, 'read'):
0.21 models.py(452):                         content_type = None
0.21 models.py(456):             self.prepare_content_length(body)
0.21 models.py(465):         if hasattr(body, 'seek') and hasattr(body, 'tell'):
0.21 models.py(469):         elif body is not None:
0.21 models.py(470):             l = super_len(body)
0.21 models.py(471):             if l:
0.21 models.py(472):                 self.headers['Content-Length'] = builtin_str(l)
0.21 models.py(459):             if content_type and ('content-type' not in self.headers):
0.21 models.py(462):         self.body = body
0.21 models.py(297):         self.prepare_auth(auth, url)
0.21 models.py(480):         if auth is None:
0.21 models.py(481):             url_auth = get_auth_from_url(self.url)
0.21 models.py(482):             auth = url_auth if any(url_auth) else None
0.21 models.py(484):         if auth:
0.21 models.py(303):         self.prepare_hooks(hooks)
0.21 models.py(523):         hooks = hooks or []
0.21 models.py(524):         for event in hooks:
0.21 models.py(525):             self.register_hook(event, hooks[event])
0.21 models.py(165):         if event not in self.hooks:
0.21 models.py(168):         if isinstance(hook, collections.Callable):
0.21 models.py(170):         elif hasattr(hook, '__iter__'):
0.21 models.py(171):             self.hooks[event].extend(h for h in hook if isinstance(h, collections.Callable))
0.21 models.py(171):             self.hooks[event].extend(h for h in hook if isinstance(h, collections.Callable))
0.21 models.py(524):         for event in hooks:
0.21 models.py(57):         url = []
0.21 models.py(59):         p = urlsplit(self.url)
0.21 models.py(61):         path = p.path
0.21 models.py(62):         if not path:
0.21 models.py(65):         url.append(path)
0.21 models.py(67):         query = p.query
0.21 models.py(68):         if query:
0.21 models.py(72):         return ''.join(url)
0.81 models.py(539):         super(Response, self).__init__()
0.81 models.py(541):         self._content = False
0.81 models.py(542):         self._content_consumed = False
0.81 models.py(545):         self.status_code = None
0.81 models.py(550):         self.headers = CaseInsensitiveDict()
0.81 models.py(555):         self.raw = None
0.81 models.py(558):         self.url = None
0.81 models.py(561):         self.encoding = None
0.81 models.py(566):         self.history = []
0.81 models.py(569):         self.reason = None
0.81 models.py(572):         self.cookies = cookiejar_from_dict({})
0.81 models.py(580):         self.elapsed = datetime.timedelta(0)
0.81 models.py(584):         self.request = None
0.81 models.py(633):         return ('location' in self.headers and self.status_code in REDIRECT_STATI)
0.81 models.py(727):         if self._content is False:
0.81 models.py(729):             try:
0.81 models.py(730):                 if self._content_consumed:
0.81 models.py(734):                 if self.status_code == 0:
0.81 models.py(737):                     self._content = bytes().join(self.iter_content(CONTENT_CHUNK_SIZE)) or bytes()
0.81 models.py(656):         def generate():
0.81 models.py(678):         if self._content_consumed and isinstance(self._content, bool):
0.81 models.py(681):         reused_chunks = iter_slices(self._content, chunk_size)
0.81 models.py(683):         stream_chunks = generate()
0.81 models.py(685):         chunks = reused_chunks if self._content_consumed else stream_chunks
0.81 models.py(687):         if decode_unicode:
0.81 models.py(690):         return chunks
0.81 models.py(658):             if hasattr(self.raw, 'stream'):
0.81 models.py(659):                 try:
0.81 models.py(660):                     for chunk in self.raw.stream(chunk_size, decode_content=True):
0.82 models.py(661):                         yield chunk
0.82 models.py(660):                     for chunk in self.raw.stream(chunk_size, decode_content=True):
0.82 models.py(676):             self._content_consumed = True
0.82 models.py(742):         self._content_consumed = True
0.82 models.py(745):         return self._content
=========================== short test summary info ============================
PASSED test_coverup_psf__requests-2931.py::test_put_request_with_binary_payload
======================== 1 passed, 22 warnings in 0.71s ========================
+ cat coverage.cover
{"/testbed/requests/models.py": {"3": 1, "10": 1, "11": 1, "13": 1, "14": 1, "15": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "24": 1, "27": 1, "31": 1, "34": 1, "35": 1, "40": 1, "41": 1, "42": 1, "43": 1, "44": 1, "39": 1, "47": 1, "48": 1, "49": 1, "52": 2, "161": 2, "185": 2, "254": 2, "528": 2, "53": 1, "54": 1, "74": 1, "75": 1, "101": 1, "102": 1, "57": 1, "59": 1, "61": 1, "62": 1, "63": 0, "65": 1, "67": 1, "68": 1, "69": 0, "70": 0, "72": 1, "83": 2, "84": 1, "85": 1, "86": 0, "87": 1, "88": 1, "89": 1, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 1, "99": 0, "110": 0, "111": 0, "112": 0, "113": 0, "115": 0, "116": 0, "117": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "125": 0, "126": 0, "128": 0, "129": 0, "130": 0, "132": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "142": 0, "144": 0, "145": 0, "147": 0, "148": 0, "150": 0, "152": 0, "153": 0, "154": 0, "156": 0, "158": 0, "162": 1, "173": 1, "165": 1, "166": 0, "168": 1, "169": 0, "170": 1, "171": 2, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "209": 1, "233": 1, "236": 1, "213": 1, "214": 1, "215": 1, "216": 1, "217": 1, "219": 1, "220": 1, "221": 0, "223": 1, "224": 1, "225": 1, "226": 1, "227": 1, "228": 1, "229": 1, "230": 1, "231": 1, "234": 0, "238": 0, "239": 0, "240": 0, "241": 0, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "251": 0, "273": 1, "288": 1, "305": 1, "308": 1, "318": 1, "324": 1, "401": 1, "409": 1, "464": 1, "476": 1, "498": 1, "518": 1, "275": 1, "277": 1, "279": 1, "282": 1, "284": 1, "286": 1, "292": 1, "293": 1, "294": 1, "295": 1, "296": 1, "297": 1, "303": 1, "306": 0, "309": 0, "310": 0, "311": 0, "312": 0, "313": 0, "314": 0, "315": 0, "316": 0, "320": 1, "321": 1, "322": 1, "331": 1, "332": 0, "334": 1, "339": 1, "340": 0, "341": 0, "344": 1, "345": 1, "346": 0, "347": 0, "349": 1, "350": 0, "351": 0, "353": 0, "355": 1, "356": 0, "359": 1, "360": 1, "361": 0, "362": 0, "365": 1, "366": 1, "367": 0, "368": 1, "369": 1, "370": 0, "373": 1, "374": 0, "376": 1, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "388": 1, "389": 0, "391": 1, "392": 1, "393": 0, "394": 0, "396": 0, "398": 1, "399": 1, "404": 1, "405": 6, "407": 0, "416": 1, "417": 1, "418": 1, "420": 1, "421": 0, "422": 0, "424": 2, "425": 1, "426": 1, "429": 1, "430": 1, "431": 0, "432": 0, "434": 1, "435": 0, "437": 0, "438": 0, "440": 0, "441": 0, "443": 0, "446": 1, "447": 0, "449": 1, "450": 1, "451": 1, "452": 1, "454": 0, "456": 1, "459": 1, "460": 0, "462": 1, "465": 1, "466": 0, "467": 0, "468": 0, "469": 1, "470": 1, "471": 1, "472": 1, "473": 0, "474": 0, "480": 1, "481": 1, "482": 1, "484": 1, "485": 0, "487": 0, "490": 0, "493": 0, "496": 0, "509": 1, "510": 1, "512": 0, "514": 1, "515": 1, "516": 0, "523": 1, "524": 2, "525": 1, "533": 1, "538": 1, "586": 1, "597": 1, "605": 1, "608": 1, "612": 1, "616": 1, "620": 1, "621": 1, "628": 1, "629": 1, "635": 1, "636": 1, "640": 1, "641": 1, "645": 1, "692": 1, "723": 1, "724": 1, "747": 1, "748": 1, "785": 1, "810": 1, "811": 1, "828": 1, "842": 1, "539": 1, "541": 1, "542": 1, "545": 1, "550": 1, "555": 1, "558": 1, "561": 1, "566": 1, "569": 1, "572": 1, "580": 1, "584": 1, "589": 0, "590": 0, "592": 0, "594": 0, "593": 0, "598": 0, "599": 0, "602": 0, "603": 0, "606": 0, "610": 0, "614": 0, "618": 0, "622": 0, "623": 0, "624": 0, "625": 0, "626": 0, "633": 1, "638": 0, "643": 0, "656": 1, "678": 1, "679": 0, "681": 1, "683": 1, "685": 1, "687": 1, "688": 0, "690": 1, "658": 1, "659": 1, "660": 2, "661": 1, "662": 0, "663": 0, "664": 0, "665": 0, "666": 0, "667": 0, "671": 0, "672": 0, "673": 0, "674": 0, "676": 1, "700": 0, "702": 0, "704": 0, "705": 0, "707": 0, "708": 0, "710": 0, "712": 0, "713": 0, "715": 0, "717": 0, "718": 0, "720": 0, "721": 0, "727": 1, "729": 1, "730": 1, "731": 0, "732": 0, "734": 1, "735": 0, "737": 1, "739": 0, "740": 0, "742": 1, "745": 1, "761": 0, "762": 0, "764": 0, "765": 0, "768": 0, "769": 0, "772": 0, "773": 0, "774": 0, "781": 0, "783": 0, "791": 0, "796": 0, "797": 0, "798": 0, "799": 0, "800": 0, "802": 0, "807": 0, "808": 0, "814": 0, "817": 0, "819": 0, "820": 0, "822": 0, "823": 0, "824": 0, "826": 0, "831": 0, "833": 0, "834": 0, "836": 0, "837": 0, "839": 0, "840": 0, "848": 0, "849": 0, "851": 0}}
+ git checkout 5f7a3a74aab1625c2bb65f643197ee885e3da576
Note: switching to '5f7a3a74aab1625c2bb65f643197ee885e3da576'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 5f7a3a74 v2.9.0
M	requests/models.py
+ git apply /root/pre_state.patch
error: unrecognized input
