{"instance_id": "psf__requests-5414", "repo": "psf/requests", "version": "2.26", "environment_setup_commit": "a1a6a549a0143d9b32717dbe3d75cd543ae5a4f6", "patch_list": ["diff --git a/requests/models.py b/requests/models.py\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -403,7 +403,7 @@ def prepare_url(self, url, params):\n                 host = self._get_idna_encoded_host(host)\n             except UnicodeError:\n                 raise InvalidURL('URL has an invalid label.')\n-        elif host.startswith(u'*'):\n+        elif host.startswith((u'*', u'.')):\n             raise InvalidURL('URL has an invalid label.')\n \n         # Carefully reconstruct the network location\n", "diff --git a/dev/null b/test_coverup_psf__requests-5414.py\nnew file mode 100644\nindex e69de29..d4a6902 100644\n--- /dev/null\n+++ b/test_coverup_psf__requests-5414.py\n@@ -0,0 +1,14 @@\n+import pytest\n+from requests.models import PreparedRequest\n+from requests.exceptions import InvalidURL\n+\n+def test_invalid_url_instead_of_unicode_error():\n+    # The URL that triggers the bug\n+    malformed_url = \"http://.example.com\"\n+    \n+    # Prepare a request to trigger the URL preparation logic\n+    req = PreparedRequest()\n+    \n+    # Expect an InvalidURL exception to be raised\n+    with pytest.raises(InvalidURL, match=\"URL has an invalid label.\"):\n+        req.prepare_url(malformed_url, None)\n"], "arch": "x86_64", "base_commit": "39d0fdd9096f7dceccbc8f82e1eda7dd64717a8e", "test_directives": ["test_coverup_psf__requests-5414.py"], "coverage_files": ["requests/models.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "pytest", "install": "python -m pip install ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(requests/models\\.py)' -m pytest --no-header -rA  -p no:cacheprovider test_coverup_psf__requests-5414.py", "req_install_commands": ["conda create -n testbed python=3.9 pytest -y"]}