{"instance_id": "django__django-14608", "repo": "django/django", "version": "4.0", "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4", "patch_list": ["diff --git a/django/forms/formsets.py b/django/forms/formsets.py\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -333,7 +333,7 @@ def full_clean(self):\n         self._non_form_errors.\n         \"\"\"\n         self._errors = []\n-        self._non_form_errors = self.error_class()\n+        self._non_form_errors = self.error_class(error_class='nonform')\n         empty_forms_count = 0\n \n         if not self.is_bound:  # Stop further processing.\n@@ -380,7 +380,10 @@ def full_clean(self):\n             # Give self.clean() a chance to do cross-form validation.\n             self.clean()\n         except ValidationError as e:\n-            self._non_form_errors = self.error_class(e.error_list)\n+            self._non_form_errors = self.error_class(\n+                e.error_list,\n+                error_class='nonform'\n+            )\n \n     def clean(self):\n         \"\"\"\n", "diff --git a/dev/null b/tests/test_coverup_django__django-14608.py\nnew file mode 100644\nindex e69de29..fd0e62a 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-14608.py\n@@ -0,0 +1,32 @@\n+from django import forms\n+from django.test import SimpleTestCase\n+from django.forms import formset_factory, BaseFormSet, ValidationError\n+from django.forms.utils import ErrorList\n+\n+class CustomErrorList(ErrorList):\n+    def __init__(self, initlist=None, error_class=None):\n+        super().__init__(initlist, error_class='nonform')\n+\n+class SimpleForm(forms.Form):\n+    field = forms.CharField()\n+\n+class CustomFormSet(BaseFormSet):\n+    def clean(self):\n+        # Simulate a non-form error\n+        raise ValidationError('Non-form error')\n+\n+class FormSetNonFormErrorsTest(SimpleTestCase):\n+    def test_nonform_css_class_presence(self):\n+        TestFormSet = formset_factory(SimpleForm, formset=CustomFormSet, extra=1)\n+        formset_data = {\n+            'form-TOTAL_FORMS': '1',\n+            'form-INITIAL_FORMS': '0',\n+            'form-MIN_NUM_FORMS': '0',\n+            'form-MAX_NUM_FORMS': '1000',\n+            'form-0-field': '',  # This will trigger a non-form error\n+        }\n+        formset = TestFormSet(data=formset_data)\n+        formset.is_valid()  # Trigger full_clean and error processing\n+\n+        non_form_errors = formset.non_form_errors()\n+        self.assertIn('nonform', non_form_errors.error_class)\n"], "arch": "x86_64", "base_commit": "7f33c1e22dbc34a7afae7967783725b10f1f13b1", "test_directives": ["test_coverup_django__django-14608"], "coverage_files": ["django/forms/formsets.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.8", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/forms/formsets\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-14608", "req_install_commands": ["conda create -n testbed python=3.8 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\nasgiref >= 3.3.2\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npython-memcached >= 1.59\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}