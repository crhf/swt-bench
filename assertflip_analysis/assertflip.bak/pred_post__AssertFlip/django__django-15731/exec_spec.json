{"instance_id": "django__django-15731", "repo": "django/django", "version": "4.2", "environment_setup_commit": "0fbdb9784da915fce5dcc1fe82bac9b4785749e5", "patch_list": ["diff --git a/django/db/models/manager.py b/django/db/models/manager.py\n--- a/django/db/models/manager.py\n+++ b/django/db/models/manager.py\n@@ -1,5 +1,6 @@\n import copy\n import inspect\n+from functools import wraps\n from importlib import import_module\n \n from django.db import router\n@@ -81,11 +82,10 @@ def check(self, **kwargs):\n     @classmethod\n     def _get_queryset_methods(cls, queryset_class):\n         def create_method(name, method):\n+            @wraps(method)\n             def manager_method(self, *args, **kwargs):\n                 return getattr(self.get_queryset(), name)(*args, **kwargs)\n \n-            manager_method.__name__ = method.__name__\n-            manager_method.__doc__ = method.__doc__\n             return manager_method\n \n         new_methods = {}\n", "diff --git a/dev/null b/tests/test_coverup_django__django-15731.py\nnew file mode 100644\nindex e69de29..5628462 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15731.py\n@@ -0,0 +1,18 @@\n+from django.test import SimpleTestCase\n+from django.db import models\n+import inspect\n+\n+# Mocking a Django model for testing purposes\n+class MockModel(models.Model):\n+    class Meta:\n+        app_label = 'test_app'\n+\n+    name = models.CharField(max_length=100)\n+\n+class InspectSignatureTest(SimpleTestCase):\n+    def test_bulk_create_signature(self):\n+        # Get the signature of the bulk_create method\n+        signature = inspect.signature(MockModel.objects.bulk_create)\n+        \n+        # Assert that the signature is correct\n+        self.assertEqual(str(signature), '(objs, batch_size=None, ignore_conflicts=False)')\n"], "arch": "x86_64", "base_commit": "93cedc82f29076c824d476354527af1150888e4f", "test_directives": ["test_coverup_django__django-15731"], "coverage_files": ["django/db/models/manager.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/models/manager\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15731", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.6.0\nargon2-cffi >= 19.2.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2; python_version < '3.12'\njinja2 >= 2.11.0\nnumpy; python_version < '3.12'\nPillow >= 6.2.1; sys.platform != 'win32' or python_version < '3.12'\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.4.0\nselenium\nsqlparse >= 0.3.1\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}