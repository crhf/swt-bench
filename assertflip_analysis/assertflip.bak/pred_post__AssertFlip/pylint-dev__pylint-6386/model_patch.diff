diff --git a/dev/null b/tests/test_coverup_pylint-dev__pylint-6386.py
new file mode 100644
index e69de29..85b266c 100644
--- /dev/null
+++ b/tests/test_coverup_pylint-dev__pylint-6386.py
@@ -0,0 +1,46 @@
+import pytest
+from pylint.config.option_manager_mixin import OptionsManagerMixIn
+from optparse import OptionParser
+
+def test_verbose_short_option_expects_argument():
+    # Setup a mock options provider with a verbose option
+    class DummyProvider:
+        name = "dummy"
+        options = [
+            ("verbose", {"short": "v", "action": "store", "help": "Increase verbosity"})
+        ]
+
+    # Initialize the OptionsManagerMixIn and OptionParser
+    options_manager = OptionsManagerMixIn(usage="Test usage")
+    parser = options_manager.cmdline_parser
+    options_manager.register_options_provider(DummyProvider())
+
+    # Simulate command-line input with `-v` without an argument
+    test_args = ["-v"]
+
+    # Capture the output or error
+    try:
+        parser.parse_args(test_args)
+        error_occurred = False
+    except SystemExit as e:
+        error_occurred = True
+        error_message = str(e)
+
+    # Assert that using `-v` without an argument does not result in an error
+    # This assertion should pass once the bug is fixed
+    assert not error_occurred, "'-v' should not expect an argument"
+
+    # Simulate command-line input with `--verbose` with an argument
+    test_args_long = ["--verbose", "1"]
+
+    # Capture the output or error for the long option
+    try:
+        parser.parse_args(test_args_long)
+        long_error_occurred = False
+    except SystemExit as e:
+        long_error_occurred = True
+
+    # Assert that using `--verbose` with an argument does not result in an error
+    # This assertion is expected to pass because the long option is correctly set to expect an argument
+    assert not long_error_occurred, "'--verbose' should expect an argument and it behaves correctly"
+
