{"instance_id": "matplotlib__matplotlib-13989", "repo": "matplotlib/matplotlib", "version": "3.0", "environment_setup_commit": "d0628598f8d9ec7b0da6b60e7b29be2067b6ea17", "patch_list": ["diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6686,7 +6686,7 @@ def hist(self, x, bins=None, range=None, density=None, weights=None,\n \n         density = bool(density) or bool(normed)\n         if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs['density'] = density\n \n         # List to store all the top coordinates of the histograms\n         tops = []\n", "diff --git a/dev/null b/lib/matplotlib/tests/test_coverup_matplotlib__matplotlib-13989.py\nnew file mode 100644\nindex e69de29..f074e05 100644\n--- /dev/null\n+++ b/lib/matplotlib/tests/test_coverup_matplotlib__matplotlib-13989.py\n@@ -0,0 +1,20 @@\n+import pytest\n+import matplotlib.pyplot as plt\n+import numpy as np\n+\n+def test_hist_density_range_bug():\n+    # Set a random seed for reproducibility\n+    np.random.seed(0)\n+    \n+    # Generate random data\n+    data = np.random.rand(10)\n+    \n+    # Create a histogram with density=True and range=(0, 1)\n+    _, bins, _ = plt.hist(data, bins='auto', range=(0, 1), density=True)\n+    \n+    # Assert that the first bin edge is 0 and the last bin edge is 1\n+    assert bins[0] == 0, \"The first bin edge should be 0.\"\n+    assert bins[-1] == 1, \"The last bin edge should be 1.\"\n+\n+    # Cleanup: Close the plot to avoid state pollution\n+    plt.close()\n"], "arch": "x86_64", "base_commit": "a3e2897bfaf9eaac1d6649da535c4e721c89fa69", "test_directives": ["lib/matplotlib/tests/test_coverup_matplotlib__matplotlib-13989.py"], "coverage_files": ["lib/matplotlib/axes/_axes.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.7", "packages": "requirements.txt", "install": "python -m pip install -e .", "pre_install": ["apt-get -y update && apt-get -y upgrade && apt-get install -y imagemagick ffmpeg libfreetype6-dev pkg-config"], "pip_packages": ["pytest"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(lib/matplotlib/axes/_axes\\.py)' -m pytest --no-header -rA  -p no:cacheprovider lib/matplotlib/tests/test_coverup_matplotlib__matplotlib-13989.py", "req_install_commands": ["conda create -n testbed python=3.7 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\n\ncodecov\ncoverage\ncycler\nnumpy\npillow\npyparsing\npytest\npytest-cov\npytest-faulthandler\npytest-rerunfailures\npytest-timeout\npytest-xdist\npython-dateutil\ntornado\ntox\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}