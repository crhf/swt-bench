{"instance_id": "scikit-learn__scikit-learn-12585", "repo": "scikit-learn/scikit-learn", "version": "0.21", "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6", "patch_list": ["diff --git a/sklearn/base.py b/sklearn/base.py\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -48,7 +48,7 @@ def clone(estimator, safe=True):\n     # XXX: not handling dictionaries\n     if estimator_type in (list, tuple, set, frozenset):\n         return estimator_type([clone(e, safe=safe) for e in estimator])\n-    elif not hasattr(estimator, 'get_params'):\n+    elif not hasattr(estimator, 'get_params') or isinstance(estimator, type):\n         if not safe:\n             return copy.deepcopy(estimator)\n         else:\n", "diff --git a/dev/null b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-12585.py\nnew file mode 100644\nindex e69de29..727fd06 100644\n--- /dev/null\n+++ b/sklearn/tests/test_coverup_scikit-learn__scikit-learn-12585.py\n@@ -0,0 +1,14 @@\n+import pytest\n+from sklearn.preprocessing import StandardScaler\n+from sklearn.base import clone\n+\n+def test_clone_with_class_type_parameter():\n+    # Attempt to clone an estimator with a class type parameter\n+    try:\n+        clone(StandardScaler(with_mean=StandardScaler))\n+    except TypeError as e:\n+        # If a TypeError is raised, the test should fail because the bug is present\n+        pytest.fail(\"TypeError was raised, indicating the presence of the bug\")\n+    else:\n+        # No exception should be raised, indicating the bug is fixed\n+        pass\n"], "arch": "x86_64", "base_commit": "bfc4a566423e036fbdc9fb02765fd893e4860c85", "test_directives": ["sklearn/tests/test_coverup_scikit-learn__scikit-learn-12585.py"], "coverage_files": ["sklearn/base.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.6", "packages": "numpy scipy cython pytest pandas matplotlib", "install": "python -m pip install -v --no-use-pep517 --no-build-isolation -e .", "pip_packages": ["cython", "numpy==1.19.2", "setuptools", "scipy==1.5.2"]}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sklearn/base\\.py)' -m pytest --no-header -rA  -p no:cacheprovider sklearn/tests/test_coverup_scikit-learn__scikit-learn-12585.py", "req_install_commands": ["conda create -n testbed python=3.6 numpy scipy cython pytest pandas matplotlib -y"]}