diff --git a/dev/null b/tests/test_coverup_django__django-14053.py
new file mode 100644
index e69de29..eeac25e 100644
--- /dev/null
+++ b/tests/test_coverup_django__django-14053.py
@@ -0,0 +1,36 @@
+from django.test import SimpleTestCase
+from django.contrib.staticfiles.storage import HashedFilesMixin
+from unittest.mock import Mock
+
+class HashedFilesMixinTest(SimpleTestCase):
+    def setUp(self):
+        self.storage = HashedFilesMixin()
+        self.storage.max_post_process_passes = 2
+        self.storage._patterns = []
+        self.storage.hashed_files = {}
+        self.storage._post_process = Mock(return_value=[
+            ('admin/css/base.css', 'admin/css/base.31652d31b392.css', True, True),
+            ('admin/css/base.css', 'admin/css/base.6b517d0d5813.css', True, True),
+            ('admin/css/dashboard.css', 'admin/css/dashboard.7ac78187c567.css', True, True),
+            ('admin/css/dashboard.css', 'admin/css/dashboard.7ac78187c567.css', True, False),
+        ])
+
+    def test_post_process_yields_multiple_times(self):
+        paths = {
+            'admin/css/base.css': (self.storage, 'admin/css/base.css'),
+            'admin/css/dashboard.css': (self.storage, 'admin/css/dashboard.css'),
+        }
+        processor = self.storage.post_process(paths, dry_run=False)
+        processed_files = list(processor)
+
+        # Count occurrences of each file in the processed results
+        file_counts = {}
+        for original_path, processed_path, processed in processed_files:
+            if original_path in file_counts:
+                file_counts[original_path] += 1
+            else:
+                file_counts[original_path] = 1
+
+        # Corrected assertions to ensure the test fails with the bug
+        self.assertEqual(file_counts.get('admin/css/base.css', 0), 1)  # Expecting 1
+        self.assertEqual(file_counts.get('admin/css/dashboard.css', 0), 1)  # Expecting 1
