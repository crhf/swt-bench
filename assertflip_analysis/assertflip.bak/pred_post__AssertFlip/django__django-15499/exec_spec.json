{"instance_id": "django__django-15499", "repo": "django/django", "version": "4.1", "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9", "patch_list": ["diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -170,6 +170,19 @@ def reduce(self, operation, app_label):\n                     managers=self.managers,\n                 ),\n             ]\n+        elif (\n+            isinstance(operation, AlterModelManagers)\n+            and self.name_lower == operation.name_lower\n+        ):\n+            return [\n+                CreateModel(\n+                    self.name,\n+                    fields=self.fields,\n+                    options=self.options,\n+                    bases=self.bases,\n+                    managers=operation.managers,\n+                ),\n+            ]\n         elif (\n             isinstance(operation, AlterTogetherOptionOperation)\n             and self.name_lower == operation.name_lower\n", "diff --git a/dev/null b/tests/test_coverup_django__django-15499.py\nnew file mode 100644\nindex e69de29..4890d8e 100644\n--- /dev/null\n+++ b/tests/test_coverup_django__django-15499.py\n@@ -0,0 +1,37 @@\n+from django.test import SimpleTestCase\n+from django.db import models\n+from django.db.migrations.operations.models import CreateModel, AlterModelManagers\n+from django.db.migrations.optimizer import MigrationOptimizer\n+\n+class MigrationOptimizationTest(SimpleTestCase):\n+    def test_create_model_and_alter_model_managers_not_optimized(self):\n+        \"\"\"\n+        Test that CreateModel followed by AlterModelManagers is optimized\n+        into a single CreateModel operation, exposing the bug.\n+        \"\"\"\n+        # Define a CreateModel operation\n+        create_model_op = CreateModel(\n+            name='TestModel',\n+            fields=[('id', models.AutoField(primary_key=True))],\n+            options={},\n+            managers=[]\n+        )\n+\n+        # Define an AlterModelManagers operation\n+        alter_managers_op = AlterModelManagers(\n+            name='TestModel',\n+            managers=[('objects', models.Manager())]\n+        )\n+\n+        # Create a list of operations simulating a migration\n+        operations = [create_model_op, alter_managers_op]\n+\n+        # Run the optimizer\n+        optimizer = MigrationOptimizer()\n+        optimized_operations = optimizer.optimize(operations, app_label='test_app')\n+\n+        # Assert that the operations are reduced correctly\n+        # The operations should be reduced to a single CreateModel\n+        self.assertEqual(len(optimized_operations), 1)\n+        self.assertIsInstance(optimized_operations[0], CreateModel)\n+        self.assertEqual(optimized_operations[0].managers, [('objects', models.Manager())])\n"], "arch": "x86_64", "base_commit": "d90e34c61b27fba2527834806639eebbcfab9631", "test_directives": ["test_coverup_django__django-15499"], "coverage_files": ["django/db/migrations/operations/models.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "requirements.txt", "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(django/db/migrations/operations/models\\.py)' ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 test_coverup_django__django-15499", "req_install_commands": ["conda create -n testbed python=3.9 -y", "cat <<'EOF_59812759871' > $HOME/requirements.txt\naiosmtpd\nasgiref >= 3.4.1\nargon2-cffi >= 16.1.0\nbackports.zoneinfo; python_version < '3.9'\nbcrypt\nblack\ndocutils\ngeoip2\njinja2 >= 2.9.2\nnumpy\nPillow >= 6.2.0\npylibmc; sys.platform != 'win32'\npymemcache >= 3.4.0\npytz\npywatchman; sys.platform != 'win32'\nPyYAML\nredis >= 3.0.0\nselenium\nsqlparse >= 0.2.2\ntblib >= 1.5.0\ntzdata\ncolorama; sys.platform == 'win32'\n\nEOF_59812759871", "conda activate testbed && python -m pip install -r $HOME/requirements.txt", "rm $HOME/requirements.txt"]}