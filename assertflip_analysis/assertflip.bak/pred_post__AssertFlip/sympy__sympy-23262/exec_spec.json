{"instance_id": "sympy__sympy-23262", "repo": "sympy/sympy", "version": "1.11", "environment_setup_commit": "9a6104eab0ea7ac191a09c24f3e2d79dcd66bda5", "patch_list": ["diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -956,9 +956,9 @@ def _recursive_to_string(doprint, arg):\n         return doprint(arg)\n     elif iterable(arg):\n         if isinstance(arg, list):\n-            left, right = \"[]\"\n+            left, right = \"[\", \"]\"\n         elif isinstance(arg, tuple):\n-            left, right = \"()\"\n+            left, right = \"(\", \",)\"\n         else:\n             raise NotImplementedError(\"unhandled type: %s, %s\" % (type(arg), arg))\n         return left +', '.join(_recursive_to_string(doprint, e) for e in arg) + right\n", "diff --git a/dev/null b/sympy/polys/tests/test_coverup_sympy__sympy-23262.py\nnew file mode 100644\nindex e69de29..f4f1e49 100644\n--- /dev/null\n+++ b/sympy/polys/tests/test_coverup_sympy__sympy-23262.py\n@@ -0,0 +1,12 @@\n+from sympy import lambdify\n+import inspect\n+\n+def test_single_element_tuple_bug():\n+    # Create a lambda function with a single-element tuple\n+    func = lambdify([], tuple([1]))\n+    \n+    # Get the source code of the generated function\n+    source_code = inspect.getsource(func)\n+    \n+    # Assert that the generated code correctly includes the comma\n+    assert \"return (1,)\" in source_code  # Correct behavior: the tuple should include a comma\n"], "arch": "x86_64", "base_commit": "fdc707f73a65a429935c01532cd3970d3355eab6", "test_directives": ["sympy/polys/tests/test_coverup_sympy__sympy-23262.py"], "coverage_files": ["sympy/utilities/lambdify.py"], "env_name": "testbed", "run_id": "assertflip", "patch_id": "pred_post__AssertFlip", "timeout": 1800, "rm_image": false, "force_rebuild": false, "exec_mode": "unit_test", "reproduction_script_name": null, "compute_coverage": true, "install": {"python": "3.9", "packages": "mpmath flake8", "pip_packages": ["mpmath==1.3.0", "flake8-comprehensions"], "install": "python -m pip install -e ."}, "cache_level": "instance", "test_command": "PYTHONWARNINGS='ignore::UserWarning,ignore::SyntaxWarning' python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/utilities/lambdify\\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-23262.p", "req_install_commands": ["conda create -n testbed python=3.9 mpmath flake8 -y"]}