+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git diff HEAD aefdd023dc4f73c441953ed51f5f05a076f0862f
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
nothing to commit, working tree clean
+ git show
commit aefdd023dc4f73c441953ed51f5f05a076f0862f
Merge: b2abe2d6b5 a2efa19333
Author: Kalevi Suominen <jksuom@gmail.com>
Date:   Tue Mar 26 19:27:41 2019 +0200

    Merge pull request #16359 from Corwinpro/master
    
    Fix Bspline _add_bsplines

+ git diff aefdd023dc4f73c441953ed51f5f05a076f0862f
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.5.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.5.dev0
    Uninstalling sympy-1.5.dev0:
      Successfully uninstalled sympy-1.5.dev0
  DEPRECATION: Legacy editable install of sympy==1.5.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.3 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git apply -v -
Checking patch sympy/simplify/simplify.py...
Applied patch sympy/simplify/simplify.py cleanly.
+ git apply -v -
<stdin>:12: trailing whitespace.
    
<stdin>:15: trailing whitespace.
    
Checking patch sympy/polys/tests/test_coverup_sympy__sympy-16450.py...
Applied patch sympy/polys/tests/test_coverup_sympy__sympy-16450.py cleanly.
warning: 2 lines add whitespace errors.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ python3 /root/trace.py --timing --trace --count -C coverage.cover --include-pattern '/testbed/(sympy/simplify/simplify\.py)' bin/test -C --verbose sympy/polys/tests/test_coverup_sympy__sympy-16450.p
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/simplify/simplify\\.py)']
0.32 simplify.py(1): from __future__ import print_function, division
0.32 simplify.py(3): from collections import defaultdict
0.32 simplify.py(5): from sympy.core import (Basic, S, Add, Mul, Pow, Symbol, sympify, expand_mul,
0.32 simplify.py(8): from sympy.core.compatibility import iterable, ordered, range, as_int
0.32 simplify.py(9): from sympy.core.evaluate import global_evaluate
0.32 simplify.py(10): from sympy.core.function import expand_log, count_ops, _mexpand, _coeff_isneg, nfloat
0.32 simplify.py(11): from sympy.core.numbers import Float, I, pi, Rational, Integer
0.32 simplify.py(12): from sympy.core.rules import Transform
0.32 simplify.py(13): from sympy.core.sympify import _sympify
0.32 simplify.py(14): from sympy.functions import gamma, exp, sqrt, log, exp_polar, piecewise_fold
0.32 simplify.py(15): from sympy.functions.combinatorial.factorials import CombinatorialFunction
0.32 simplify.py(16): from sympy.functions.elementary.complexes import unpolarify
0.32 simplify.py(17): from sympy.functions.elementary.exponential import ExpBase
0.32 simplify.py(18): from sympy.functions.elementary.hyperbolic import HyperbolicFunction
0.32 simplify.py(19): from sympy.functions.elementary.integers import ceiling
0.32 simplify.py(20): from sympy.functions.elementary.trigonometric import TrigonometricFunction
0.32 simplify.py(21): from sympy.functions.special.bessel import besselj, besseli, besselk, jn, bessely
0.32 simplify.py(22): from sympy.polys import together, cancel, factor
0.32 simplify.py(23): from sympy.simplify.combsimp import combsimp
0.32 simplify.py(24): from sympy.simplify.cse_opts import sub_pre, sub_post
0.32 simplify.py(25): from sympy.simplify.powsimp import powsimp
0.32 simplify.py(26): from sympy.simplify.radsimp import radsimp, fraction
0.32 simplify.py(27): from sympy.simplify.sqrtdenest import sqrtdenest
0.32 simplify.py(28): from sympy.simplify.trigsimp import trigsimp, exptrigsimp
0.33 simplify.py(29): from sympy.utilities.iterables import has_variety
0.33 simplify.py(33): import mpmath
0.33 simplify.py(37): def separatevars(expr, symbols=[], dict=False, force=False):
0.33 simplify.py(108): def _separatevars(expr, force):
0.33 simplify.py(162): def _separatevars_dict(expr, symbols):
0.33 simplify.py(194): def _is_sum_surds(p):
0.33 simplify.py(202): def posify(eq):
0.33 simplify.py(260): def hypersimp(f, k):
0.33 simplify.py(301): def hypersimilar(f, g, k):
0.33 simplify.py(319): def signsimp(expr, evaluate=None):
0.33 simplify.py(381): def simplify(expr, ratio=1.7, measure=count_ops, rational=False, inverse=False):
0.33 simplify.py(642): def sum_simplify(s):
0.33 simplify.py(685): def sum_combine(s_t):
0.33 simplify.py(714): def factor_sum(self, limits=None, radical=False, clear=False, fraction=False, sign=True):
0.33 simplify.py(746): def sum_add(self, other, method=0):
0.33 simplify.py(793): def product_simplify(s):
0.33 simplify.py(827): def product_mul(self, other, method=0):
0.33 simplify.py(854): def _nthroot_solve(p, n, prec):
0.33 simplify.py(879): def logcombine(expr, force=False):
0.33 simplify.py(1023): def inversecombine(expr):
0.33 simplify.py(1052): def walk(e, *target):
0.33 simplify.py(1080): def bottom_up(rv, F, atoms=False, nonbasic=False):
0.33 simplify.py(1104): def besselsimp(expr):
0.33 simplify.py(1192): def nthroot(expr, n, max_len=4, prec=15):
0.33 simplify.py(1252): def nsimplify(expr, constants=(), tolerance=None, full=False, rational=None,
0.33 simplify.py(1388): def _real_to_rational(expr, tolerance=None, rational_conversion='base10'):
0.33 simplify.py(1454): def clear_coefficients(expr, rhs=S.Zero):
0.33 simplify.py(1500): def nc_simplify(expr, deep=True):
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python3  (3.9.23-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        49596385
hash randomization: on (PYTHONHASHSEED=965777856)

sympy/polys/tests/test_coverup_sympy__sympy-16450.py[1] 
test_posify_finite_assumption 0.66 simplify.py(240):     eq = sympify(eq)
0.66 simplify.py(241):     if iterable(eq):
0.66 simplify.py(254):     reps = {s: Dummy(s.name, positive=True, **s.assumptions0)
0.66 simplify.py(255):                  for s in eq.free_symbols if s.is_positive is None}
0.66 simplify.py(254):     reps = {s: Dummy(s.name, positive=True, **s.assumptions0)
0.66 simplify.py(254):     reps = {s: Dummy(s.name, positive=True, **s.assumptions0)
0.66 simplify.py(255):                  for s in eq.free_symbols if s.is_positive is None}
0.66 simplify.py(254):     reps = {s: Dummy(s.name, positive=True, **s.assumptions0)
0.66 simplify.py(254):     reps = {s: Dummy(s.name, positive=True, **s.assumptions0)
0.66 simplify.py(256):     eq = eq.subs(reps)
0.66 simplify.py(257):     return eq, {r: s for s, r in reps.items()}
0.66 simplify.py(257):     return eq, {r: s for s, r in reps.items()}
0.66 simplify.py(257):     return eq, {r: s for s, r in reps.items()}
ok                                            [OK]


================== tests finished: 1 passed, in 0.01 seconds ===================
['--timing', '--trace', '--count', '-C', 'coverage.cover', '--include-pattern', '/testbed/(sympy/simplify/simplify\\.py)']
0.63 simplify.py(1): from __future__ import print_function, division
0.63 simplify.py(3): from collections import defaultdict
0.63 simplify.py(5): from sympy.core import (Basic, S, Add, Mul, Pow, Symbol, sympify, expand_mul,
0.63 simplify.py(8): from sympy.core.compatibility import iterable, ordered, range, as_int
0.63 simplify.py(9): from sympy.core.evaluate import global_evaluate
0.63 simplify.py(10): from sympy.core.function import expand_log, count_ops, _mexpand, _coeff_isneg, nfloat
0.63 simplify.py(11): from sympy.core.numbers import Float, I, pi, Rational, Integer
0.63 simplify.py(12): from sympy.core.rules import Transform
0.63 simplify.py(13): from sympy.core.sympify import _sympify
0.63 simplify.py(14): from sympy.functions import gamma, exp, sqrt, log, exp_polar, piecewise_fold
0.63 simplify.py(15): from sympy.functions.combinatorial.factorials import CombinatorialFunction
0.63 simplify.py(16): from sympy.functions.elementary.complexes import unpolarify
0.63 simplify.py(17): from sympy.functions.elementary.exponential import ExpBase
0.63 simplify.py(18): from sympy.functions.elementary.hyperbolic import HyperbolicFunction
0.63 simplify.py(19): from sympy.functions.elementary.integers import ceiling
0.63 simplify.py(20): from sympy.functions.elementary.trigonometric import TrigonometricFunction
0.63 simplify.py(21): from sympy.functions.special.bessel import besselj, besseli, besselk, jn, bessely
0.63 simplify.py(22): from sympy.polys import together, cancel, factor
0.63 simplify.py(23): from sympy.simplify.combsimp import combsimp
0.64 simplify.py(24): from sympy.simplify.cse_opts import sub_pre, sub_post
0.64 simplify.py(25): from sympy.simplify.powsimp import powsimp
0.64 simplify.py(26): from sympy.simplify.radsimp import radsimp, fraction
0.64 simplify.py(27): from sympy.simplify.sqrtdenest import sqrtdenest
0.64 simplify.py(28): from sympy.simplify.trigsimp import trigsimp, exptrigsimp
0.65 simplify.py(29): from sympy.utilities.iterables import has_variety
0.65 simplify.py(33): import mpmath
0.65 simplify.py(37): def separatevars(expr, symbols=[], dict=False, force=False):
0.65 simplify.py(108): def _separatevars(expr, force):
0.65 simplify.py(162): def _separatevars_dict(expr, symbols):
0.65 simplify.py(194): def _is_sum_surds(p):
0.65 simplify.py(202): def posify(eq):
0.65 simplify.py(260): def hypersimp(f, k):
0.65 simplify.py(301): def hypersimilar(f, g, k):
0.65 simplify.py(319): def signsimp(expr, evaluate=None):
0.65 simplify.py(381): def simplify(expr, ratio=1.7, measure=count_ops, rational=False, inverse=False):
0.65 simplify.py(642): def sum_simplify(s):
0.65 simplify.py(685): def sum_combine(s_t):
0.65 simplify.py(714): def factor_sum(self, limits=None, radical=False, clear=False, fraction=False, sign=True):
0.65 simplify.py(746): def sum_add(self, other, method=0):
0.65 simplify.py(793): def product_simplify(s):
0.65 simplify.py(827): def product_mul(self, other, method=0):
0.65 simplify.py(854): def _nthroot_solve(p, n, prec):
0.65 simplify.py(879): def logcombine(expr, force=False):
0.65 simplify.py(1023): def inversecombine(expr):
0.65 simplify.py(1052): def walk(e, *target):
0.65 simplify.py(1080): def bottom_up(rv, F, atoms=False, nonbasic=False):
0.65 simplify.py(1104): def besselsimp(expr):
0.65 simplify.py(1192): def nthroot(expr, n, max_len=4, prec=15):
0.65 simplify.py(1252): def nsimplify(expr, constants=(), tolerance=None, full=False, rational=None,
0.65 simplify.py(1388): def _real_to_rational(expr, tolerance=None, rational_conversion='base10'):
0.65 simplify.py(1454): def clear_coefficients(expr, rhs=S.Zero):
0.65 simplify.py(1500): def nc_simplify(expr, deep=True):
+ cat coverage.cover
{"/testbed/sympy/simplify/simplify.py": {"1": 1, "3": 1, "5": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 1, "28": 1, "29": 1, "33": 1, "37": 1, "108": 1, "162": 1, "194": 1, "202": 1, "260": 1, "301": 1, "319": 1, "381": 1, "642": 1, "685": 1, "714": 1, "746": 1, "793": 1, "827": 1, "854": 1, "879": 1, "1023": 1, "1052": 1, "1080": 1, "1104": 1, "1192": 1, "1252": 1, "1388": 1, "1454": 1, "1500": 1, "101": 0, "102": 0, "103": 0, "105": 0, "109": 0, "110": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "123": 0, "124": 0, "127": 0, "129": 0, "130": 0, "132": 0, "133": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "151": 0, "152": 0, "153": 0, "154": 0, "156": 0, "157": 0, "159": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "170": 0, "171": 0, "172": 0, "174": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "183": 0, "185": 0, "188": 0, "189": 0, "191": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "240": 1, "241": 1, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "250": 0, "251": 0, "252": 0, "254": 5, "255": 2, "256": 1, "257": 3, "287": 0, "289": 0, "291": 0, "292": 0, "293": 0, "295": 0, "296": 0, "298": 0, "311": 0, "313": 0, "314": 0, "316": 0, "366": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "514": 0, "516": 0, "517": 0, "518": 0, "520": 0, "522": 0, "523": 0, "524": 0, "526": 0, "527": 0, "529": 0, "530": 0, "531": 0, "532": 0, "534": 0, "535": 0, "536": 0, "538": 0, "539": 0, "545": 0, "553": 0, "554": 0, "555": 0, "556": 0, "558": 0, "559": 0, "560": 0, "561": 0, "562": 0, "564": 0, "565": 0, "567": 0, "568": 0, "569": 0, "571": 0, "574": 0, "576": 0, "578": 0, "579": 0, "581": 0, "582": 0, "584": 0, "585": 0, "587": 0, "590": 0, "592": 0, "593": 0, "595": 0, "596": 0, "598": 0, "599": 0, "601": 0, "602": 0, "604": 0, "605": 0, "606": 0, "607": 0, "608": 0, "611": 0, "612": 0, "613": 0, "619": 0, "621": 0, "622": 0, "623": 0, "624": 0, "625": 0, "627": 0, "628": 0, "629": 0, "630": 0, "632": 0, "633": 0, "636": 0, "637": 0, "639": 0, "548": 0, "549": 0, "550": 0, "614": 0, "615": 0, "616": 0, "617": 0, "618": 0, "644": 0, "645": 0, "647": 0, "648": 0, "649": 0, "651": 0, "652": 0, "653": 0, "654": 0, "656": 0, "657": 0, "658": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "666": 0, "667": 0, "670": 0, "672": 0, "673": 0, "675": 0, "676": 0, "678": 0, "681": 0, "683": 0, "691": 0, "694": 0, "696": 0, "697": 0, "698": 0, "699": 0, "700": 0, "701": 0, "702": 0, "703": 0, "704": 0, "705": 0, "707": 0, "708": 0, "709": 0, "710": 0, "712": 0, "721": 0, "722": 0, "724": 0, "725": 0, "727": 0, "728": 0, "731": 0, "735": 0, "737": 0, "738": 0, "740": 0, "741": 0, "742": 0, "744": 0, "748": 0, "749": 0, "754": 0, "760": 0, "761": 0, "763": 0, "765": 0, "766": 0, "768": 0, "770": 0, "771": 0, "772": 0, "773": 0, "774": 0, "775": 0, "776": 0, "777": 0, "778": 0, "779": 0, "780": 0, "781": 0, "782": 0, "784": 0, "785": 0, "786": 0, "787": 0, "788": 0, "790": 0, "755": 0, "756": 0, "757": 0, "758": 0, "795": 0, "797": 0, "798": 0, "799": 0, "801": 0, "802": 0, "803": 0, "805": 0, "807": 0, "809": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "818": 0, "820": 0, "821": 0, "822": 0, "824": 0, "829": 0, "831": 0, "832": 0, "833": 0, "834": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "841": 0, "842": 0, "843": 0, "845": 0, "846": 0, "847": 0, "848": 0, "849": 0, "851": 0, "859": 0, "860": 0, "861": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "867": 0, "868": 0, "869": 0, "870": 0, "871": 0, "872": 0, "873": 0, "874": 0, "875": 0, "876": 0, "925": 0, "1020": 0, "926": 0, "927": 0, "929": 0, "935": 0, "940": 0, "941": 0, "942": 0, "943": 0, "944": 0, "945": 0, "946": 0, "947": 0, "949": 0, "950": 0, "951": 0, "952": 0, "953": 0, "954": 0, "955": 0, "956": 0, "957": 0, "958": 0, "959": 0, "961": 0, "962": 0, "963": 0, "964": 0, "965": 0, "967": 0, "971": 0, "972": 0, "975": 0, "976": 0, "984": 0, "985": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "991": 0, "992": 0, "994": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1003": 0, "1004": 0, "1005": 0, "1006": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1016": 0, "1018": 0, "932": 0, "933": 0, "937": 0, "938": 0, "1042": 0, "1049": 0, "1043": 0, "1044": 0, "1045": 0, "1046": 0, "1047": 0, "1073": 0, "1074": 0, "1075": 0, "1076": 0, "1077": 0, "1085": 0, "1086": 0, "1087": 0, "1088": 0, "1089": 0, "1090": 0, "1091": 0, "1092": 0, "1093": 0, "1095": 0, "1096": 0, "1097": 0, "1098": 0, "1099": 0, "1101": 0, "1133": 0, "1142": 0, "1147": 0, "1152": 0, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1168": 0, "1170": 0, "1181": 0, "1182": 0, "1183": 0, "1184": 0, "1186": 0, "1187": 0, "1189": 0, "1134": 0, "1136": 0, "1140": 0, "1137": 0, "1138": 0, "1139": 0, "1143": 0, "1145": 0, "1144": 0, "1148": 0, "1150": 0, "1149": 0, "1171": 0, "1179": 0, "1172": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1177": 0, "1178": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1224": 0, "1225": 0, "1226": 0, "1227": 0, "1228": 0, "1229": 0, "1230": 0, "1231": 0, "1232": 0, "1233": 0, "1234": 0, "1235": 0, "1236": 0, "1237": 0, "1238": 0, "1239": 0, "1240": 0, "1241": 0, "1242": 0, "1243": 0, "1244": 0, "1245": 0, "1246": 0, "1247": 0, "1248": 0, "1249": 0, "1303": 0, "1304": 0, "1305": 0, "1306": 0, "1307": 0, "1308": 0, "1309": 0, "1311": 0, "1312": 0, "1313": 0, "1314": 0, "1319": 0, "1320": 0, "1321": 0, "1322": 0, "1325": 0, "1326": 0, "1328": 0, "1329": 0, "1330": 0, "1331": 0, "1332": 0, "1333": 0, "1334": 0, "1336": 0, "1337": 0, "1340": 0, "1341": 0, "1343": 0, "1370": 0, "1371": 0, "1372": 0, "1373": 0, "1374": 0, "1375": 0, "1376": 0, "1377": 0, "1378": 0, "1380": 0, "1383": 0, "1384": 0, "1385": 0, "1344": 0, "1345": 0, "1346": 0, "1348": 0, "1349": 0, "1350": 0, "1351": 0, "1352": 0, "1369": 0, "1353": 0, "1354": 0, "1355": 0, "1356": 0, "1357": 0, "1358": 0, "1359": 0, "1360": 0, "1361": 0, "1362": 0, "1363": 0, "1364": 0, "1365": 0, "1411": 0, "1412": 0, "1413": 0, "1414": 0, "1415": 0, "1416": 0, "1417": 0, "1418": 0, "1419": 0, "1420": 0, "1421": 0, "1422": 0, "1423": 0, "1424": 0, "1425": 0, "1427": 0, "1428": 0, "1429": 0, "1430": 0, "1431": 0, "1432": 0, "1434": 0, "1436": 0, "1437": 0, "1438": 0, "1439": 0, "1440": 0, "1441": 0, "1442": 0, "1443": 0, "1444": 0, "1445": 0, "1446": 0, "1447": 0, "1449": 0, "1450": 0, "1451": 0, "1481": 0, "1482": 0, "1483": 0, "1484": 0, "1485": 0, "1486": 0, "1489": 0, "1488": 0, "1490": 0, "1487": 0, "1491": 0, "1492": 0, "1493": 0, "1494": 0, "1495": 0, "1496": 0, "1497": 0, "1498": 0, "1541": 0, "1543": 0, "1545": 0, "1546": 0, "1547": 0, "1549": 0, "1552": 0, "1576": 0, "1602": 0, "1612": 0, "1620": 0, "1621": 0, "1622": 0, "1623": 0, "1624": 0, "1625": 0, "1627": 0, "1628": 0, "1629": 0, "1632": 0, "1633": 0, "1634": 0, "1635": 0, "1637": 0, "1641": 0, "1642": 0, "1643": 0, "1644": 0, "1646": 0, "1647": 0, "1649": 0, "1655": 0, "1657": 0, "1658": 0, "1667": 0, "1668": 0, "1670": 0, "1671": 0, "1672": 0, "1673": 0, "1674": 0, "1675": 0, "1676": 0, "1677": 0, "1678": 0, "1682": 0, "1683": 0, "1684": 0, "1685": 0, "1686": 0, "1690": 0, "1691": 0, "1692": 0, "1694": 0, "1695": 0, "1696": 0, "1697": 0, "1699": 0, "1701": 0, "1702": 0, "1703": 0, "1704": 0, "1705": 0, "1707": 0, "1710": 0, "1713": 0, "1714": 0, "1715": 0, "1716": 0, "1717": 0, "1719": 0, "1720": 0, "1722": 0, "1728": 0, "1729": 0, "1730": 0, "1731": 0, "1732": 0, "1733": 0, "1735": 0, "1736": 0, "1737": 0, "1738": 0, "1739": 0, "1740": 0, "1741": 0, "1742": 0, "1743": 0, "1744": 0, "1746": 0, "1747": 0, "1748": 0, "1749": 0, "1750": 0, "1751": 0, "1753": 0, "1754": 0, "1755": 0, "1756": 0, "1757": 0, "1758": 0, "1759": 0, "1760": 0, "1761": 0, "1762": 0, "1773": 0, "1774": 0, "1775": 0, "1776": 0, "1777": 0, "1778": 0, "1779": 0, "1780": 0, "1781": 0, "1782": 0, "1783": 0, "1784": 0, "1785": 0, "1786": 0, "1787": 0, "1788": 0, "1789": 0, "1791": 0, "1793": 0, "1794": 0, "1795": 0, "1796": 0, "1798": 0, "1800": 0, "1801": 0, "1802": 0, "1803": 0, "1804": 0, "1806": 0, "1807": 0, "1808": 0, "1809": 0, "1810": 0, "1811": 0, "1814": 0, "1816": 0, "1818": 0, "1819": 0, "1822": 0, "1823": 0, "1824": 0, "1825": 0, "1826": 0, "1828": 0, "1829": 0, "1562": 0, "1563": 0, "1564": 0, "1565": 0, "1566": 0, "1567": 0, "1568": 0, "1569": 0, "1570": 0, "1571": 0, "1572": 0, "1573": 0, "1574": 0, "1582": 0, "1583": 0, "1584": 0, "1585": 0, "1586": 0, "1587": 0, "1588": 0, "1590": 0, "1591": 0, "1592": 0, "1593": 0, "1594": 0, "1595": 0, "1596": 0, "1597": 0, "1598": 0, "1599": 0, "1600": 0, "1606": 0, "1607": 0, "1608": 0, "1609": 0, "1610": 0, "1615": 0, "1616": 0, "1617": 0}}
{"/testbed/sympy/simplify/simplify.py": {"1": 1, "3": 1, "5": 1, "8": 1, "9": 1, "10": 1, "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 1, "28": 1, "29": 1, "33": 1, "37": 1, "108": 1, "162": 1, "194": 1, "202": 1, "260": 1, "301": 1, "319": 1, "381": 1, "642": 1, "685": 1, "714": 1, "746": 1, "793": 1, "827": 1, "854": 1, "879": 1, "1023": 1, "1052": 1, "1080": 1, "1104": 1, "1192": 1, "1252": 1, "1388": 1, "1454": 1, "1500": 1, "101": 0, "102": 0, "103": 0, "105": 0, "109": 0, "110": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "123": 0, "124": 0, "127": 0, "129": 0, "130": 0, "132": 0, "133": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "151": 0, "152": 0, "153": 0, "154": 0, "156": 0, "157": 0, "159": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "170": 0, "171": 0, "172": 0, "174": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "183": 0, "185": 0, "188": 0, "189": 0, "191": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "240": 0, "241": 0, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "250": 0, "251": 0, "252": 0, "254": 0, "255": 0, "256": 0, "257": 0, "287": 0, "289": 0, "291": 0, "292": 0, "293": 0, "295": 0, "296": 0, "298": 0, "311": 0, "313": 0, "314": 0, "316": 0, "366": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "514": 0, "516": 0, "517": 0, "518": 0, "520": 0, "522": 0, "523": 0, "524": 0, "526": 0, "527": 0, "529": 0, "530": 0, "531": 0, "532": 0, "534": 0, "535": 0, "536": 0, "538": 0, "539": 0, "545": 0, "553": 0, "554": 0, "555": 0, "556": 0, "558": 0, "559": 0, "560": 0, "561": 0, "562": 0, "564": 0, "565": 0, "567": 0, "568": 0, "569": 0, "571": 0, "574": 0, "576": 0, "578": 0, "579": 0, "581": 0, "582": 0, "584": 0, "585": 0, "587": 0, "590": 0, "592": 0, "593": 0, "595": 0, "596": 0, "598": 0, "599": 0, "601": 0, "602": 0, "604": 0, "605": 0, "606": 0, "607": 0, "608": 0, "611": 0, "612": 0, "613": 0, "619": 0, "621": 0, "622": 0, "623": 0, "624": 0, "625": 0, "627": 0, "628": 0, "629": 0, "630": 0, "632": 0, "633": 0, "636": 0, "637": 0, "639": 0, "548": 0, "549": 0, "550": 0, "614": 0, "615": 0, "616": 0, "617": 0, "618": 0, "644": 0, "645": 0, "647": 0, "648": 0, "649": 0, "651": 0, "652": 0, "653": 0, "654": 0, "656": 0, "657": 0, "658": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "666": 0, "667": 0, "670": 0, "672": 0, "673": 0, "675": 0, "676": 0, "678": 0, "681": 0, "683": 0, "691": 0, "694": 0, "696": 0, "697": 0, "698": 0, "699": 0, "700": 0, "701": 0, "702": 0, "703": 0, "704": 0, "705": 0, "707": 0, "708": 0, "709": 0, "710": 0, "712": 0, "721": 0, "722": 0, "724": 0, "725": 0, "727": 0, "728": 0, "731": 0, "735": 0, "737": 0, "738": 0, "740": 0, "741": 0, "742": 0, "744": 0, "748": 0, "749": 0, "754": 0, "760": 0, "761": 0, "763": 0, "765": 0, "766": 0, "768": 0, "770": 0, "771": 0, "772": 0, "773": 0, "774": 0, "775": 0, "776": 0, "777": 0, "778": 0, "779": 0, "780": 0, "781": 0, "782": 0, "784": 0, "785": 0, "786": 0, "787": 0, "788": 0, "790": 0, "755": 0, "756": 0, "757": 0, "758": 0, "795": 0, "797": 0, "798": 0, "799": 0, "801": 0, "802": 0, "803": 0, "805": 0, "807": 0, "809": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "818": 0, "820": 0, "821": 0, "822": 0, "824": 0, "829": 0, "831": 0, "832": 0, "833": 0, "834": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "841": 0, "842": 0, "843": 0, "845": 0, "846": 0, "847": 0, "848": 0, "849": 0, "851": 0, "859": 0, "860": 0, "861": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "867": 0, "868": 0, "869": 0, "870": 0, "871": 0, "872": 0, "873": 0, "874": 0, "875": 0, "876": 0, "925": 0, "1020": 0, "926": 0, "927": 0, "929": 0, "935": 0, "940": 0, "941": 0, "942": 0, "943": 0, "944": 0, "945": 0, "946": 0, "947": 0, "949": 0, "950": 0, "951": 0, "952": 0, "953": 0, "954": 0, "955": 0, "956": 0, "957": 0, "958": 0, "959": 0, "961": 0, "962": 0, "963": 0, "964": 0, "965": 0, "967": 0, "971": 0, "972": 0, "975": 0, "976": 0, "984": 0, "985": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "991": 0, "992": 0, "994": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1003": 0, "1004": 0, "1005": 0, "1006": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1016": 0, "1018": 0, "932": 0, "933": 0, "937": 0, "938": 0, "1042": 0, "1049": 0, "1043": 0, "1044": 0, "1045": 0, "1046": 0, "1047": 0, "1073": 0, "1074": 0, "1075": 0, "1076": 0, "1077": 0, "1085": 0, "1086": 0, "1087": 0, "1088": 0, "1089": 0, "1090": 0, "1091": 0, "1092": 0, "1093": 0, "1095": 0, "1096": 0, "1097": 0, "1098": 0, "1099": 0, "1101": 0, "1133": 0, "1142": 0, "1147": 0, "1152": 0, "1154": 0, "1155": 0, "1156": 0, "1157": 0, "1158": 0, "1159": 0, "1160": 0, "1162": 0, "1163": 0, "1164": 0, "1165": 0, "1166": 0, "1168": 0, "1170": 0, "1181": 0, "1182": 0, "1183": 0, "1184": 0, "1186": 0, "1187": 0, "1189": 0, "1134": 0, "1136": 0, "1140": 0, "1137": 0, "1138": 0, "1139": 0, "1143": 0, "1145": 0, "1144": 0, "1148": 0, "1150": 0, "1149": 0, "1171": 0, "1179": 0, "1172": 0, "1173": 0, "1174": 0, "1175": 0, "1176": 0, "1177": 0, "1178": 0, "1219": 0, "1220": 0, "1221": 0, "1222": 0, "1223": 0, "1224": 0, "1225": 0, "1226": 0, "1227": 0, "1228": 0, "1229": 0, "1230": 0, "1231": 0, "1232": 0, "1233": 0, "1234": 0, "1235": 0, "1236": 0, "1237": 0, "1238": 0, "1239": 0, "1240": 0, "1241": 0, "1242": 0, "1243": 0, "1244": 0, "1245": 0, "1246": 0, "1247": 0, "1248": 0, "1249": 0, "1303": 0, "1304": 0, "1305": 0, "1306": 0, "1307": 0, "1308": 0, "1309": 0, "1311": 0, "1312": 0, "1313": 0, "1314": 0, "1319": 0, "1320": 0, "1321": 0, "1322": 0, "1325": 0, "1326": 0, "1328": 0, "1329": 0, "1330": 0, "1331": 0, "1332": 0, "1333": 0, "1334": 0, "1336": 0, "1337": 0, "1340": 0, "1341": 0, "1343": 0, "1370": 0, "1371": 0, "1372": 0, "1373": 0, "1374": 0, "1375": 0, "1376": 0, "1377": 0, "1378": 0, "1380": 0, "1383": 0, "1384": 0, "1385": 0, "1344": 0, "1345": 0, "1346": 0, "1348": 0, "1349": 0, "1350": 0, "1351": 0, "1352": 0, "1369": 0, "1353": 0, "1354": 0, "1355": 0, "1356": 0, "1357": 0, "1358": 0, "1359": 0, "1360": 0, "1361": 0, "1362": 0, "1363": 0, "1364": 0, "1365": 0, "1411": 0, "1412": 0, "1413": 0, "1414": 0, "1415": 0, "1416": 0, "1417": 0, "1418": 0, "1419": 0, "1420": 0, "1421": 0, "1422": 0, "1423": 0, "1424": 0, "1425": 0, "1427": 0, "1428": 0, "1429": 0, "1430": 0, "1431": 0, "1432": 0, "1434": 0, "1436": 0, "1437": 0, "1438": 0, "1439": 0, "1440": 0, "1441": 0, "1442": 0, "1443": 0, "1444": 0, "1445": 0, "1446": 0, "1447": 0, "1449": 0, "1450": 0, "1451": 0, "1481": 0, "1482": 0, "1483": 0, "1484": 0, "1485": 0, "1486": 0, "1489": 0, "1488": 0, "1490": 0, "1487": 0, "1491": 0, "1492": 0, "1493": 0, "1494": 0, "1495": 0, "1496": 0, "1497": 0, "1498": 0, "1541": 0, "1543": 0, "1545": 0, "1546": 0, "1547": 0, "1549": 0, "1552": 0, "1576": 0, "1602": 0, "1612": 0, "1620": 0, "1621": 0, "1622": 0, "1623": 0, "1624": 0, "1625": 0, "1627": 0, "1628": 0, "1629": 0, "1632": 0, "1633": 0, "1634": 0, "1635": 0, "1637": 0, "1641": 0, "1642": 0, "1643": 0, "1644": 0, "1646": 0, "1647": 0, "1649": 0, "1655": 0, "1657": 0, "1658": 0, "1667": 0, "1668": 0, "1670": 0, "1671": 0, "1672": 0, "1673": 0, "1674": 0, "1675": 0, "1676": 0, "1677": 0, "1678": 0, "1682": 0, "1683": 0, "1684": 0, "1685": 0, "1686": 0, "1690": 0, "1691": 0, "1692": 0, "1694": 0, "1695": 0, "1696": 0, "1697": 0, "1699": 0, "1701": 0, "1702": 0, "1703": 0, "1704": 0, "1705": 0, "1707": 0, "1710": 0, "1713": 0, "1714": 0, "1715": 0, "1716": 0, "1717": 0, "1719": 0, "1720": 0, "1722": 0, "1728": 0, "1729": 0, "1730": 0, "1731": 0, "1732": 0, "1733": 0, "1735": 0, "1736": 0, "1737": 0, "1738": 0, "1739": 0, "1740": 0, "1741": 0, "1742": 0, "1743": 0, "1744": 0, "1746": 0, "1747": 0, "1748": 0, "1749": 0, "1750": 0, "1751": 0, "1753": 0, "1754": 0, "1755": 0, "1756": 0, "1757": 0, "1758": 0, "1759": 0, "1760": 0, "1761": 0, "1762": 0, "1773": 0, "1774": 0, "1775": 0, "1776": 0, "1777": 0, "1778": 0, "1779": 0, "1780": 0, "1781": 0, "1782": 0, "1783": 0, "1784": 0, "1785": 0, "1786": 0, "1787": 0, "1788": 0, "1789": 0, "1791": 0, "1793": 0, "1794": 0, "1795": 0, "1796": 0, "1798": 0, "1800": 0, "1801": 0, "1802": 0, "1803": 0, "1804": 0, "1806": 0, "1807": 0, "1808": 0, "1809": 0, "1810": 0, "1811": 0, "1814": 0, "1816": 0, "1818": 0, "1819": 0, "1822": 0, "1823": 0, "1824": 0, "1825": 0, "1826": 0, "1828": 0, "1829": 0, "1562": 0, "1563": 0, "1564": 0, "1565": 0, "1566": 0, "1567": 0, "1568": 0, "1569": 0, "1570": 0, "1571": 0, "1572": 0, "1573": 0, "1574": 0, "1582": 0, "1583": 0, "1584": 0, "1585": 0, "1586": 0, "1587": 0, "1588": 0, "1590": 0, "1591": 0, "1592": 0, "1593": 0, "1594": 0, "1595": 0, "1596": 0, "1597": 0, "1598": 0, "1599": 0, "1600": 0, "1606": 0, "1607": 0, "1608": 0, "1609": 0, "1610": 0, "1615": 0, "1616": 0, "1617": 0}}
+ git checkout aefdd023dc4f73c441953ed51f5f05a076f0862f
Note: switching to 'aefdd023dc4f73c441953ed51f5f05a076f0862f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at aefdd023dc Merge pull request #16359 from Corwinpro/master
M	sympy/simplify/simplify.py
+ git apply /root/pre_state.patch
error: unrecognized input
